<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测序质控软件trim_galore安装</title>
      <link href="2020/09/23/trim-galore/"/>
      <url>2020/09/23/trim-galore/</url>
      
        <content type="html"><![CDATA[<p><code>trim_galore</code>可以用来对原始的测序数据进行质控  </p><p>安装<code>trim_galore</code>需要提前安装两个依赖软件：<code>Fastqc</code>和<code>cutadapt</code>  </p><p><code>Fastqc</code>的安装已经提及，这里不再详述  </p><p><code>cutadapt</code>的安装过程如下：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-pip <span class="comment"># install pip3</span></span><br><span class="line">python3 -m pip install --user --upgrade cutadapt  <span class="comment"># install cutadapt</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/.local/bin&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p><code>trim_galore</code> 安装  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Check that cutadapt is installed</span></span><br><span class="line">cutadapt --version</span><br><span class="line"><span class="comment"># Check that FastQC is installed</span></span><br><span class="line">fastqc -v</span><br><span class="line"><span class="comment"># Install Trim Galore</span></span><br><span class="line"><span class="built_in">cd</span> ~/software</span><br><span class="line">curl -fsSL https://github.com/FelixKrueger/TrimGalore/archive/0.6.6.tar.gz -o trim_galore.tar.gz</span><br><span class="line">tar xvzf trim_galore.tar.gz </span><br><span class="line"><span class="comment"># soft link</span></span><br><span class="line">sudo ln -s /home/ubuntu/software/trim_galore/trim_galore /usr/bin/trim_galore</span><br></pre></td></tr></table></figure><p>使用示例：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/SingleCell</span><br><span class="line">mkdir fastqc_trimmed_results</span><br><span class="line">trim_galore --nextera -o fastqc_trimmed_results Share/ERR522959_1.fastq Share/ERR522959_2.fastq</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastQC安装与使用</title>
      <link href="2020/09/23/fastqc/"/>
      <url>2020/09/23/fastqc/</url>
      
        <content type="html"><![CDATA[<p>FastQC是一款用于对RNA-seq数据进行质量检测和控制的软件（对单细胞和bulk的测序数据都适用）  </p><p>首先需要从官网下载FastQC的安装文件<br><a href="http://www.bioinformatics.babraham.ac.uk/projects/download.html#fastqc">http://www.bioinformatics.babraham.ac.uk/projects/download.html#fastqc</a>  </p><p>将下载到的<code>.zip</code>文件解压在特定的安装位置  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/sofware</span><br><span class="line">unzip ~/download/fastqc_v0.11.9.zip</span><br></pre></td></tr></table></figure><p>解压之后需要将其中的<code>fastqc</code>文件改成可执行文件  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./FastQC</span><br><span class="line">chmod 755 fastqc</span><br></pre></td></tr></table></figure><p>为了能在任意文件夹下运行程序，创建fastqc的软连接  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /home/ubuntu/software/FastQC/fastqc /usr/<span class="built_in">local</span>/bin/fastqc <span class="comment"># 文件地址必须是绝对路径</span></span><br></pre></td></tr></table></figure><p>就此安装成功，可以运行<code>fastqc -h</code>查看命令参数  </p><p>示例：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/SingleCell</span><br><span class="line">mkdir fastqc_results</span><br><span class="line">fastqc -o fastqc_results Share/ERR522959_1.fastq Share/ERR522959_2.fastq</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2常用theme参数参考</title>
      <link href="2020/09/23/ggplottheme/"/>
      <url>2020/09/23/ggplottheme/</url>
      
        <content type="html"><![CDATA[<p>大佬总结的ggplot2常用调节参数<br><img src="/images/ggplottheme/20200627183728.png"><br><img src="/images/ggplottheme/20200627183936.png">    </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
          <category> ggplot2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hemberg-lab单细胞转录组数据分析（二）</title>
      <link href="2020/09/23/hemberg-lab2/"/>
      <url>2020/09/23/hemberg-lab2/</url>
      
        <content type="html"><![CDATA[<h2 id="scRNA-seq原始数据处理"><a href="#scRNA-seq原始数据处理" class="headerlink" title="scRNA-seq原始数据处理"></a>scRNA-seq原始数据处理</h2><h3 id="FastQC"><a href="#FastQC" class="headerlink" title="FastQC"></a>FastQC</h3><p>得到单细胞RNA-seq测序数据后，首先检查测序reads的质量。为了完成这个任务，我们使用的工具是FastQC。FastQC是一款质控工具，能对bulk RNA-seq和单细胞RNA-seq的原始数据进行质量控制 (<em>其他类型的高通量测序结果也适用</em>)。FastQC以原始测序reads为输入(fastq格式)，输出序列质量报告。复制粘贴下面的链接到你的浏览器进入FastQC官网：  </p><p><a href="https://www.bioinformatics.babraham.ac.uk/projects/fastqc/">https://www.bioinformatics.babraham.ac.uk/projects/fastqc/</a>  </p><p>这个网址包含下载和安装FastQC及示例报告文件的链接。向下滚动页面到<code>Example Reports</code>并点击<code>Good Illumina Data</code>，会看到高质量Illumina测序Reads的理想质控结果。  </p><p>现在让我们自己来做一个FastQC报告。  </p><p>我们可以从 <a href="https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-2600/">https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-2600/</a>  下载<code>ERR522959_1.fastq</code>和<code>ERR522959_2.fastq</code> 原始测序文件。  </p><p>使用<code>less</code>命令查看数据  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">less Share/ERR522959_1.fastq</span><br><span class="line">less Share/ERR522959_2.fastq</span><br></pre></td></tr></table></figure><p>使用FastQC生成报告  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir fastqc_results</span><br><span class="line">fastqc -o fastqc_results Share/ERR522959_1.fastq Share/ERR522959_2.fastq</span><br></pre></td></tr></table></figure><p>命令执行完成后，可以得到四个文件—每端reads对应一个<code>zip</code>文件和一个<code>html</code>文件。  </p><p>大概浏览一下文件，记住要看双端<code>reads</code>的报告！  </p><h3 id="移除接头和低质量碱基"><a href="#移除接头和低质量碱基" class="headerlink" title="移除接头和低质量碱基"></a>移除接头和低质量碱基</h3><p><code>TrimGalore!</code>工具是对<code>cutadapt</code>软件的封装，用于移除测序接头序列或测序序列末端低质量碱基。  </p><p>鉴于上一步FastQC报告中有一些接头污染，因此需要去除接头部分。  </p><p>现在让我们尝试用<code>Trim Galore!</code>去除那些麻烦的接头序列，去除接头后，最好再运行FastQC查看接头是否去除干净。  </p><p>可以用下面的命令来去除<code>Nextera</code>序列接头：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p fastqc_trimmed_results</span><br><span class="line">trim_galore --nextera -o fastqc_trimmed_results Share/ERR522959_1.fastq Share/ERR522959_2.fastq</span><br></pre></td></tr></table></figure><p>记住为<code>trimmed reads</code>文件生成新的FastQC报告！在报告里应该可以看到你的reads的<code>Adaptor Content</code>结果为<code>PASS</code>了  </p><p>现在已经生成了reads质量报告并实行了接头去除，下一步，我们会用<code>STAR</code> (STAR有soft-clip机制，理论上只要文库质量不太差，不进行质控也可以)和<code>Kallisto</code>把质控后的reads比对到参考转录组。  </p><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><h4 id="FastQ"><a href="#FastQ" class="headerlink" title="FastQ"></a>FastQ</h4><p>FastQ是<code>scRNASeq</code>数据中最原始数据的格式。所有的<code>scRNA-seq</code>方案都会进行双端测序，根据文库构建方法不同，条形码序列 (barcodes)可能出现在测序的左端或右端序列。但是使用唯一分子标签 (UMIs)的测序方案会产生包含细胞和<code>UMI barcode</code>再加接头序列但没有转录本序列的<code>reads</code>。因此reads虽然是双端测序，但比对时按单端reads对待。  </p><p>FastQ文件格式如下  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;ReadID</span><br><span class="line">READ SEQUENCE</span><br><span class="line">+</span><br><span class="line">SEQUENCING QUALITY SCORES</span><br></pre></td></tr></table></figure><h4 id="BAM"><a href="#BAM" class="headerlink" title="BAM"></a>BAM</h4><p>BAM文件是存储比对结果的标准有效的高度压缩的二进制格式，其文本格式<code>SAM</code>是直接可读的。BAM/SAM文件包含一个头部，记录样本准备、测序和比对的信息；后面是每个reads的比对结果，<code>tab</code>作为列分隔符。  </p><p>比对行有下列标准格式：  </p><ol><li>QNAME：read编号（如果是UMI文库，通常包含UMI条形码）</li><li>FLAG：数字标记指示reads比对的”类型”，如reads是否比对上，是否为<code>properly paired</code>等，Picard网站可以在”类型”和对应的数字之间进行转换，有更详细阐述。</li><li>RNAME：参考序列编号（比如比对到的染色体名字）。</li><li>POS：最左边的比对位置。</li><li>MAPQ：比对质量</li><li>CIGAR：表示reads的匹配/不匹配部分 (可能包括soft-clipping)</li><li>RNEXT：mate/next reads比对到的参考序列编号</li><li>PNEXT：mate/next reads比对到的第一个碱基位置</li><li>TLEN：模板长度（read比对到的参考区域的长度）</li><li>SEQ：read序列信息</li><li>QUAL：read质量信息  </li></ol><p>BAM/SAM文件可以用<code>samtools</code>互相转换。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 新版本samtools中-S选项忽略，不需要再加，会自己判断输入的是bam还是sam格式</span><br><span class="line">samtools view -S -b file.sam &gt; file.bam</span><br><span class="line"># -h:包含header</span><br><span class="line">samtools view -h file.bam &gt; file.sam</span><br></pre></td></tr></table></figure><p>一些测序服务机构会自动把测序reads比对到标准基因组并提供<code>BAM</code>或<code>CRAM</code>格式文件，通常这些基因组不会包含<code>ERCC</code>序列，继而不会有<code>ERCC reads</code>比对到<code>BAM/CRAM</code>文件中。为了量化<code>ERCCs</code>（或序列有任何其他遗传变异或外源表达需要考虑时），或者如果想使用不同于标准流程中的比对算法，那你需要把<code>BAM/CRAM</code>文件转回<code>FastQ</code>:  </p><p><code>bedtools</code>可以把<code>BAM</code>文件转成<code>FastQ</code>，为了避免把比对到多个基因组位置的同一个reads转换为FASTQ中的多条reads，需要先把BAM文件按read名称排序，并使用Samtools删除次级比对 (<code>secondary alignments</code>)。此外Picard里也有把<code>BAM</code>转成<code>FastQ</code>文件的方法。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sort reads by name</span></span><br><span class="line">samtools sort -n original.bam -o sorted_by_name.bam</span><br><span class="line"><span class="comment"># remove secondary alignments</span></span><br><span class="line">samtools view -b -F 256 sorted_by_name.bam -o primary_alignment_only.bam</span><br><span class="line"><span class="comment"># convert to fastq</span></span><br><span class="line">bedtools bamtofastq -i primary_alignment_only.bam -fq read1.fq -fq2 read2.fq</span><br></pre></td></tr></table></figure><h4 id="CRAM"><a href="#CRAM" class="headerlink" title="CRAM"></a>CRAM</h4><p>CRAM文件与BAM文件类似，只是header中包含比对用到的参考基因组的信息。这使得每个read中与参考基因组相同的碱基可以被进一步压缩。CRAM也支持一些有损数据压缩方式来进一步优化储存，CRAMs格式主要是Sanger/EBI测序机构在使用。</p><p>CRAM和BAM文件可以用最新一版的<code>samtools(&gt;=v1.0)</code>相互转换。然而这个转换需要预先下载并缓存参考基因组。可以从CRAM文件的头部元数据中获得参考基因组信息自行下载，具体按下面的操作进行转换：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> REF_CACHE=/path_to/cache_directory_for_reference_genome</span><br><span class="line">samtools view -b -h -T reference_genome.fasta file.cram -o file.bam</span><br><span class="line">samtools view -C -h -T reference_genome.fasta file.bam -o file.cram</span><br></pre></td></tr></table></figure><h4 id="手动查看文件"><a href="#手动查看文件" class="headerlink" title="手动查看文件"></a>手动查看文件</h4><p>一些时候，需要自己查看文件，比如查看下文件的<code>header</code>信息是否正确。<code>less</code>和<code>more</code>可以用来在命令行查看任意大小文本文件 (<em>个人更常用<code>less</code></em>)。管道符<code>|</code>可以在多个命令之间传输数据，省却把中间数据存储多个拷贝的过程，既简洁又快速。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">less file.txt</span><br><span class="line">more file.txt</span><br><span class="line"><span class="comment"># counts the number of lines in file.txt</span></span><br><span class="line">wc -l file.txt</span><br><span class="line">samtools view -h file.[cram/bam] | more</span><br><span class="line"><span class="comment"># counts the number of lines in the samtools output</span></span><br><span class="line">samtools view -h file.[cram/bam] | wc -l</span><br></pre></td></tr></table></figure><p><strong>练习</strong></p><p>假如你已经有了一个小的<code>cram</code>格式文件：<code>EXAMPLE.cram</code></p><ul><li><em>任务1</em>：这个文件是怎么获得的？用了什么比对软件?基因组的版本是什么？（提示：检查头部文件）</li><li><em>任务2</em>: 有多少reads比对或没比对上？文件共有多少短序列？<code>secondary alignments</code>有多少？（提示：用FLAG）</li><li><em>任务3</em>：将CRAM格式转成Fastq文件。转换后的每条read都是只有一个拷贝吗？（转换后的文件命名为 <code>10cells_read1.fastq</code> <code>10cells_read2.fastq</code>）</li></ul><p>小技巧：如果运行某个软件的帮助命令卡住时，直接输入命令，看看有无提示信息？  </p><p><strong>答案</strong>  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">samtools view -T 2000_reference.transcripts.fa -H EXAMPLE.cram | less</span><br><span class="line">samtools view -T 2000_reference.transcripts.fa -f 4 EXAMPLE.cram | wc -l <span class="comment"># unmapped</span></span><br><span class="line">samtools view -T 2000_reference.transcripts.fa -F 260 EXAMPLE.cram | wc -l <span class="comment"># mapped</span></span><br><span class="line">samtools view -T 2000_reference.transcripts.fa -F 256 EXAMPLE.cram | wc -l <span class="comment"># total</span></span><br><span class="line">samtools view -T 2000_reference.transcripts.fa -f 256 EXAMPLE.cram | wc -l <span class="comment"># secondary alignments</span></span><br><span class="line"></span><br><span class="line">samtools view -b -h -T 2000_reference.transcripts.fa EXAMPLE.cram -o EXAMPLE.bam</span><br><span class="line">samtools sort -n EXAMPLE.bam -o sorted_EXAMPLE.bam</span><br><span class="line">samtools view -b -F 256 sorted_EXAMPLE.bam -o primary_EXAMPLE.bam </span><br><span class="line"><span class="comment"># convert to fastq</span></span><br><span class="line">bedtools bamtofastq -i primary_EXAMPLE.bam -fq 10cells_read1.fq -fq2 10cells_read2.fq</span><br></pre></td></tr></table></figure><h4 id="基因组和基因注释（FASTA-GTF）"><a href="#基因组和基因注释（FASTA-GTF）" class="headerlink" title="基因组和基因注释（FASTA,GTF）"></a>基因组和基因注释（FASTA,GTF）</h4><p>为了进行序列比对，需要参考基因组和/或基因组注释文件（<code>GTF</code>格式或<code>GFF</code>格式）。模式生物的基因组可以从任何主要的数据库下载：Ensembl, NCBI,或者UCSC Genome Browser。  </p><p>GTF文件有基因、转录本和外显子的注释,他们必定包含：  </p><ol><li>seq_id：序列的编号，一般为chr或scafold编号；</li><li>source: 注释的来源，一般为数据库或者注释的机构，如果未知，则用点<code>.</code>代替；</li><li>type: 注释信息的类型，比如Gene、cDNA、mRNA、CDS等;</li><li>start: 该基因或转录本在参考序列上的起始位置 (从1开始，包含);</li><li>end: 该基因或转录本在参考序列上的终止位置 (从1开始，包含);</li><li>score: 得分，数字，是注释信息可能性的说明，可以是序列相似性比对时的E-values值或者基因预测是的P-values值，<code>.</code>表示为空;</li><li>strand: 该基因或转录本位于参考序列的正链(+)或负链(-)上;</li><li>phase: 仅对注释类型为<code>CDS</code>有效，表示起始编码的位置，有效值为<code>0,1,2</code>。(对于编码蛋白质的CDS来说，本列指定下一个密码子开始的位置。每3个核苷酸翻译一个氨基酸，从0开始，CDS的起始位置，除以3，余数就是这个值，表示到达下一个密码子需要跳过的碱基个数。<code>0</code>表示该编码框的第一个密码子第一个碱基位于其5’末端；<code>1</code>表示该编码框的第一个密码子的第一个碱基位于该编码区外；<code>2</code>表示该编码框的第一个密码子的第一、二个碱基位于该编码区外；)；</li><li>attributes: 一个包含众多属性的列表，格式为<code>标签 值</code>(<code>tag value</code>)，以多个键值对组成的注释信息描述，键与值之间用`` (空格分割)，不同的键值用<code>;</code>隔开，如<code>gene_id “gene”; transcript_id “geneA.1”; database_id “0012”; modified_by “Damian”; duplicate 0</code>。  </li></ol><p>根据我们的经验，Ensembl是最容易使用的，并且具有最大的注释集。NCBI往往更严格，仅包含高可信度的基因注释。而UCSC包含多个使用不同标准的基因注释。  </p><p>如果你的实验系统含有非标准序列 (比如<code>ERCC spike-ins</code>)，那么这些序列必须加到基因组<code>fasta</code>和<code>gtf</code>上来定量它们的表达。另外，对CRISPR相关序列或其他过表达/报告载体也必须进行相同的操作。  </p><p>为了获得最大的可用性和灵活性，我们建议为任何添加的非标准序列创建完整详细的<code>fasta</code>序列文件和<code>gtf</code>文件。  </p><p>目前还没有标准化的方法来做到这一点。下面是我们写的一个<code>perl</code>脚本，可以把<code>ERCC</code>序列转成对应的<code>gtf</code>和<code>fasta</code>文件，以便附加到标准基因组中。如果要量化内含子reads时，您可能还需要更改<code>gtf</code>文件以处理内含子中的重复元件。任何脚本语言甚至是<code>awk</code>或一些文本编辑器都可以相对有效地完成这项任务，但它们超出了本次课程的范围。 </p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Converts the Annotation file from </span></span><br><span class="line"><span class="comment"># https://www.thermofisher.com/order/catalog/product/4456740 to </span></span><br><span class="line"><span class="comment"># gtf and fasta files that can be added to existing genome fasta &amp; gtf files.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @FASTAlines = ();</span><br><span class="line"><span class="keyword">my</span> @GTFlines = ();</span><br><span class="line"><span class="keyword">open</span> (<span class="keyword">my</span> $ifh, <span class="string">&quot;ERCC_Controls_Annotation.txt&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span> $!;</span><br><span class="line">&lt;$ifh&gt;; <span class="comment">#header</span></span><br><span class="line"><span class="keyword">while</span> (&lt;$ifh&gt;) &#123;</span><br><span class="line">    <span class="comment"># Do all the important stuff</span></span><br><span class="line">    <span class="keyword">chomp</span>;</span><br><span class="line">    <span class="keyword">my</span> @record = <span class="keyword">split</span>(<span class="regexp">/\t/</span>);</span><br><span class="line">    <span class="keyword">my</span> $sequence = $record[<span class="number">4</span>];</span><br><span class="line">    $sequence =~ <span class="regexp">s/\s+//g</span>; <span class="comment"># get rid of any preceeding/tailing white space</span></span><br><span class="line">    $sequence = $sequence.<span class="string">&quot;NNNN&quot;</span>;</span><br><span class="line">    <span class="keyword">my</span> $name = $record[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">my</span> $genbank = $record[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">push</span>(@FASTAlines, <span class="string">&quot;&gt;$name\n$sequence\n&quot;</span>);</span><br><span class="line"><span class="comment"># is GTF 1 indexed or 0 indexed? -&gt; it is 1 indexed</span></span><br><span class="line"><span class="comment"># + or - strand?</span></span><br><span class="line">    <span class="keyword">push</span>(@GTFlines, <span class="string">&quot;$name\tERCC\tgene\t1\t&quot;</span>.(<span class="keyword">length</span>($sequence)-<span class="number">2</span>).<span class="string">&quot;\t.\t+\t.\tgene_id \&quot;$name-$genbank\&quot;; transcript_id \&quot;$name-$genbank\&quot;; exon_number \&quot;1\&quot;; gene_name \&quot;ERCC $name-$genbank\&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">push</span>(@GTFlines, <span class="string">&quot;$name\tERCC\ttranscript\t1\t&quot;</span>.(<span class="keyword">length</span>($sequence)-<span class="number">2</span>).<span class="string">&quot;\t.\t+\t.\tgene_id \&quot;$name-$genbank\&quot;; transcript_id \&quot;$name-$genbank\&quot;; exon_number \&quot;1\&quot;; gene_name \&quot;ERCC $name-$genbank\&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">push</span>(@GTFlines, <span class="string">&quot;$name\tERCC\texon\t1\t&quot;</span>.(<span class="keyword">length</span>($sequence)-<span class="number">2</span>).<span class="string">&quot;\t.\t+\t.\tgene_id \&quot;$name-$genbank\&quot;; transcript_id \&quot;$name-$genbank\&quot;; exon_number \&quot;1\&quot;; gene_name \&quot;ERCC $name-$genbank\&quot;\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">close</span>($ifh);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Write output</span></span><br><span class="line"><span class="keyword">open</span>(<span class="keyword">my</span> $ofh, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;ERCC_Controls.fa&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span> $!;</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $line (@FASTAlines) &#123;</span><br><span class="line">    <span class="keyword">print</span> $ofh $line;</span><br><span class="line">&#125; <span class="keyword">close</span> ($ofh);</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span>($ofh, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;ERCC_Controls.gtf&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span> $!;</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $line (@GTFlines) &#123;</span><br><span class="line">    <span class="keyword">print</span> $ofh $line;</span><br><span class="line">&#125; <span class="keyword">close</span> ($ofh);</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面两个awk命令可以实现perl脚本的功能</span></span><br><span class="line"><span class="comment"># 如果是windows的文件，替换下末尾的换行符</span></span><br><span class="line">sed -i <span class="string">&#x27;s/^M//&#x27;</span> ERCC_Controls_Annotation.txt</span><br><span class="line"><span class="comment"># 转成FASTA序列</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;OFS=FS=&quot;\t&quot;&#125;&#123;if(FNR&gt;1) print &quot;&gt;&quot;$1&quot;\n&quot;$NF&quot;NNNN&quot;&#125;&#x27;</span> ERCC_Controls_Annotation.txt &gt;ERCC.fa</span><br><span class="line"><span class="comment"># 转成GTF</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;OFS=FS=&quot;\t&quot;&#125;&#123;if(FNR&gt;1) &#123;seq_len=length($NF)+2; attr=&quot;gene_id \&quot;&quot;$1&quot;-&quot;$2&quot;\&quot;; transcript_id \&quot;&quot;$1&quot;-&quot;$2&quot;\&quot;; exon_number \&quot;1\&quot;; gene_name \&quot;&quot;$1&quot;-&quot;$2&quot;\&quot;&quot;; print $1,&quot;ERCC&quot;,&quot;gene&quot;,1,seq_len,&quot;.&quot;,&quot;+&quot;,&quot;.&quot;,attr; print $1,&quot;ERCC&quot;,&quot;transcript&quot;,1,seq_len,&quot;.&quot;,&quot;+&quot;,&quot;.&quot;,attr; print $1,&quot;ERCC&quot;,&quot;exon&quot;,1,seq_len,&quot;.&quot;,&quot;+&quot;,&quot;.&quot;,attr;&#125;&#125;&#x27;</span> ERCC_Controls_Annotation.txt &gt;ERCC.gtf</span><br></pre></td></tr></table></figure><h3 id="测序文库拆分-Demultiplexing"><a href="#测序文库拆分-Demultiplexing" class="headerlink" title="测序文库拆分 (Demultiplexing)"></a>测序文库拆分 (Demultiplexing)</h3><p>文库拆分因使用的前期Protocol不同或构建的流程不同需要有对应的处理方式。我们认为最灵活可用的文库拆分工具是<a href="https://github.com/sdparekh/zUMIs/wiki/Usage">zUMIs</a>，可以用来拆分和比对大部分基于UMI的建库方式。对于<code>Smartseq2</code>或其他双端全长转录本方案，数据通常已经拆分好了。例如GEO或ArrayExpress之类的公共数据存储库会要求小规模或<code>plate-based scRNASeq</code>数据拆分好再上传，并且很多测序服务商提供的数据都是自动拆分好的。如果使用的分析流程依赖于拆分好的数据但测序服务商提供的数据没有拆分时就需要自己拆分。因为不同的建库方案引入的<code>barcode</code>序列的长度和位置不同，通常都需要自己写脚本解决。  </p><p>对于所有数据类型，”文库拆分”涉及从一端或双端短序列中识别和移除细胞条形码序列 (<code>cell barcode</code>)。如果提前知道加入的细胞条形码，比如数据来自基于PCR板的方案，只需要找到条形码并与条形码库作比对，归类于与之最相似的那个就可以 (根据条形码的设计，一般允许最多1-2个错配)。这些数据通常在比对之前先做拆分，从而可以并行比对，提高效率。  </p><p>我们有公开可用 (&lt;&gt;)的 perl脚本，可以拆分任何<code>plate-based</code>的建库方案生成的数据，不管有没有<code>UMI</code>。操作如下：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/tallulandrews/scRNASeqPipeline</span></span><br><span class="line"><span class="comment"># perl 1_Flexible_UMI_Demultiplexing.pl read1.fq read2.fq b_structure index mismatch prefix\n&quot;;</span></span><br><span class="line"><span class="comment">#    print STDERR &quot;</span></span><br><span class="line"><span class="comment">#    read1.fq : barcode/umi containing read</span></span><br><span class="line"><span class="comment">#    read2.fq : non-barcode containing read</span></span><br><span class="line"><span class="comment">#    b_structure : a single string of the format C##U# or U#C## </span></span><br><span class="line"><span class="comment">#        where C## is the cell-barcode and U# is the UMI.</span></span><br><span class="line"><span class="comment">#        e.g. C10U4 = a 10bp cell barcode followed by a 4bp UMI</span></span><br><span class="line"><span class="comment">#    index : file containg a single column of expected cell-barcodes.</span></span><br><span class="line"><span class="comment">#        if equal to \&quot;UNKNOWN\&quot; script will output read counts for each unique barcode.</span></span><br><span class="line"><span class="comment">#    mismatch : maximum number of permitted mismatches (recommend 2)</span></span><br><span class="line"><span class="comment">#    prefix : prefix for output fastq files.</span></span><br><span class="line">perl 1_Flexible_UMI_Demultiplexing.pl 10cells_read1.fq 10cells_read2.fq <span class="string">&quot;C12U8&quot;</span> 10cells_barcodes.txt 2 Ex</span><br></pre></td></tr></table></figure><p>运行过程输出如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">##  Doesn&#39;t match any cell: 0</span><br><span class="line">##  Ambiguous: 0</span><br><span class="line">##  Exact Matches: 400</span><br><span class="line">##  Contain mismatches: 0</span><br><span class="line">##  Input Reads: 400</span><br><span class="line">##  Output Reads: 400</span><br><span class="line">## Barcode Structure: 12 bp CellID followed by 8 bp UMI</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl utils/1_Flexible_FullTranscript_Demultiplexing.pl data/10cells_read1.fq data/10cells_read2.fq <span class="string">&quot;start&quot;</span> 12 data/10cells_barcodes.txt 2 Ex</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Doesn&#39;t match any cell: 0</span><br><span class="line">## Ambiguous: 0</span><br><span class="line">## Exact Matches: 400</span><br><span class="line">## Contain Mismatches: 0</span><br><span class="line">## Input Reads: 400</span><br><span class="line">## Output Reads: 400</span><br></pre></td></tr></table></figure><p>对于包含<code>UMI</code>的数据，文库拆分包含把<code>UMI code</code>加到来源于基因区的序列的名字上。如果数据来源于<code>droplet-based protocol</code>或者<code>SeqWell</code>，实际加入的<code>barcode</code>序列的种类多于捕获到的细胞数时，为了避免生成特别多的文件，一般也把<code>cell-barcode</code>加到测序reads的名字后面。在这种情况下，文库拆分是在定量过程中进行的，有利于识别来源于完整细胞而不是背景噪声中的<code>cell-barcode</code>序列。  </p><h4 id="鉴定含有细胞的液滴-微孔"><a href="#鉴定含有细胞的液滴-微孔" class="headerlink" title="鉴定含有细胞的液滴/微孔"></a>鉴定含有细胞的液滴/微孔</h4><p>液滴型scRNA-seq方法中只有一小部分的液滴包含珠状物和一个完整细胞。然而生物实验不会那么理想，有些RNA会从死细胞或破损细胞中漏出来。所以没有完整细胞的液滴有可能捕获周围环境游离出的少了RNA并且走完测序环节出现在最终测序结果中。液滴大小、扩增效率和测序环节中的波动会导致”背景”和真实细胞最终获得的文库大小变化很大，使得区分哪些文库来源于背景哪些来源于真实细胞变得复杂。  </p><p>液滴型scRNA-seq方法中只有一小部分的液滴包含珠状物和一个完整细胞。然而生物实验不会那么理想，有些RNA会从死细胞或破损细胞中漏出来。所以没有完整细胞的液滴有可能捕获周围环境游离出的少了RNA并且走完测序环节出现在最终测序结果中。液滴大小、扩增效率和测序环节中的波动会导致”背景”和真实细胞最终获得的文库大小变化很大，使得区分哪些文库来源于背景哪些来源于真实细胞变得复杂。  </p><p>大多数方法使用每个<code>barcode</code>对应的总分子数(如果是UMI)或总reads数的分布来寻找一个”break point”区分来自于真实细胞的较大的文库和来自于背景的较小的文库。下面加载一些包含大细胞和细胞的模拟数据实际操作下：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umi_per_barcode &lt;- read.table(<span class="string">&quot;droplet_id_example_per_barcode.txt.gz&quot;</span>)</span><br><span class="line">truth &lt;- read.delim(<span class="string">&quot;droplet_id_example_truth.gz&quot;</span>, sep=<span class="string">&quot;,&quot;</span>)</span><br></pre></td></tr></table></figure><p><em>练习</em>: 有多少唯一的条形码被检测到？数据里多少来自真细胞？为了简化计算，写代码排除掉少于10个分子的条形码。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dim(umi_per_barcode)[<span class="number">1</span>]</span><br><span class="line">dim(truth)[<span class="number">1</span>]</span><br><span class="line">umi_per_barcode &lt;- umi_per_barcode[umi_per_barcode[,<span class="number">2</span>] &gt; <span class="number">10</span>,]</span><br></pre></td></tr></table></figure><p>一个找寻每个条形码对应的分子数突然下降的拐点的方法：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">barcode_rank &lt;- rank(-umi_per_barcode[,<span class="number">2</span>])</span><br><span class="line">plot(barcode_rank, umi_per_barcode[,<span class="number">2</span>], xlim=c(<span class="number">1</span>,<span class="number">8000</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/lab2/unnamed-chunk-11-1.png">  </p><p>可以看到文库大小分布类似一条指数曲线，为了看的更清楚，对数据进行<code>log</code>转换。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log_lib_size &lt;- log10(umi_per_barcode[,<span class="number">2</span>])</span><br><span class="line">plot(barcode_rank, log_lib_size, xlim=c(<span class="number">1</span>,<span class="number">8000</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/lab2/unnamed-chunk-12-1.png">   </p><p>转换后，拐点更明显了，我们可以手动估计拐点的位置来区分背景噪音和真实细胞，但是用算法来识别要更精确，可重用性更强。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># inflection point</span></span><br><span class="line">o &lt;- order(barcode_rank)</span><br><span class="line">log_lib_size &lt;- log_lib_size[o]</span><br><span class="line">barcode_rank &lt;- barcode_rank[o]</span><br><span class="line"></span><br><span class="line">rawdiff &lt;- diff(log_lib_size)/diff(barcode_rank)</span><br><span class="line">inflection &lt;- which(rawdiff == min(rawdiff[<span class="number">100</span>:length(rawdiff)], na.rm=<span class="literal">TRUE</span>))</span><br><span class="line"></span><br><span class="line">plot(barcode_rank, log_lib_size, xlim=c(<span class="number">1</span>,<span class="number">8000</span>))</span><br><span class="line">abline(v=inflection, col=<span class="string">&quot;red&quot;</span>, lwd=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/lab2/unnamed-chunk-13-1.png">  </p><p>另一种方法是构建混合模型，找出较高和较低分布相交的位置。但是数据可能不会像假定的分布那么好：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">set.seed(-<span class="number">92497</span>)</span><br><span class="line"><span class="comment"># mixture model</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&quot;mixtools&quot;</span>)</span><br><span class="line"></span><br><span class="line">mix &lt;- normalmixEM(log_lib_size)</span><br><span class="line"><span class="comment">## number of iterations= 43</span></span><br><span class="line">plot(mix, which=<span class="number">2</span>, xlab2=<span class="string">&quot;log(mol per cell)&quot;</span>)</span><br><span class="line"></span><br><span class="line">p1 &lt;- dnorm(log_lib_size, mean=mix$mu[<span class="number">1</span>], sd=mix$sigma[<span class="number">1</span>])</span><br><span class="line">p2 &lt;- dnorm(log_lib_size, mean=mix$mu[<span class="number">2</span>], sd=mix$sigma[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">if</span> (mix$mu[<span class="number">1</span>] &lt; mix$mu[<span class="number">2</span>]) &#123;</span><br><span class="line">    split &lt;- min(log_lib_size[p2 &gt; p1])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    split &lt;- min(log_lib_size[p1 &gt; p2])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/lab2/unnamed-chunk-14-1.png">   </p><p>第三种方法，CellRanger假设真实细胞文库大小变化在10倍以内，用期望的细胞数目估计区间的分布。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n_cells &lt;- length(truth[,<span class="number">1</span>])</span><br><span class="line"><span class="comment"># CellRanger</span></span><br><span class="line">totals &lt;- umi_per_barcode[,<span class="number">2</span>]</span><br><span class="line">totals &lt;- sort(totals, decreasing = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># 99th percentile of top n_cells divided by 10</span></span><br><span class="line">thresh = totals[round(<span class="number">0.01</span>*n_cells)]/<span class="number">10</span></span><br><span class="line">plot(totals, xlim=c(<span class="number">1</span>,<span class="number">8000</span>))</span><br><span class="line">abline(h=thresh, col=<span class="string">&quot;red&quot;</span>, lwd=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/lab2/unnamed-chunk-16-1.png">  </p><h3 id="使用STAR比对read"><a href="#使用STAR比对read" class="headerlink" title="使用STAR比对read"></a>使用STAR比对read</h3><p>现在我们已经对测序原始数据进行了质控，获得了高质量的<code>Clean data</code>，下一步就是把它们比对到参考基因组。如果我们想定量基因表达或鉴定样本之间差异表达的基因，则通常需要某种形式的比对。  </p><p>用于短序列比对的工具已经开发了很多，但今天我们主要涉及两个。第一个工具是STAR。对于测序数据中的每条reads，STAR尝试找到能与参考基因组中一个或多个位置匹配的最长可能序列。例如，在下图中，有一个短序列（蓝色），它跨越两个外显子和一个选择性剪接点（紫色）。STAR能够发现短序列的第一部分与第一外显子的序列匹配，而第二部分与第二外显子中的序列匹配。因为<code>STAR</code>能够用这种方式识别剪接事件，所以它被称为<code>splice aware</code>的比对工具</p><p><img src="/images/lab2/640.jpg">  </p><p>通常<code>STAR</code>把短序列比对到参考基因组时允许检测新的剪接事件或染色体重排事件。然而，STAR的一个问题是它需要大量的内存，尤其是参考基因组很大（例如老鼠和人类，大约需要30 G内存）的时候。为了加速今天的分析，我们将使用STAR把<code>reads</code>比对到只包含<code>2000</code>个转录本的参考转录组上。<strong>请注意</strong>，这<strong>不</strong>是常用或推荐的做法，只是考虑时间问题才这样做。我们通常建议比对到参考基因组 (但过程与此类似)。  </p><p>执行STAR比对需要两个步骤。在第一步中，用户向STAR提供参考基因组序列（FASTA）和注释（GTF）,来创建基因组索引。第二步，STAR将用户的短序列数据比对到基因组索引。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实际应用时比对到基因组</span></span><br><span class="line"><span class="comment"># 命令如下</span></span><br><span class="line">mkdir -p star_GRCh38</span><br><span class="line"><span class="comment"># --runThreadN 2: 指定使用2个线程</span></span><br><span class="line"><span class="comment"># --sjdbOverhang 100: 默认</span></span><br><span class="line">STAR --runMode genomeGenerate --runThreadN 2 --genomeDir star_GRCh38 \</span><br><span class="line">     --genomeFastaFiles GRCh38.fa --sjdbGTFfile GRCh38.gtf</span><br><span class="line"><span class="comment"># 输出文件如下，注意看下输出文件的大小，有无空文件，基因数是否对。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">ls -sh star_GRCh38</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 总用量 2.1G</span></span><br><span class="line"><span class="comment"># 4.0K chrLength.txt      368K exonInfo.tab          1.5G SAindex</span></span><br><span class="line"><span class="comment"># 4.0K chrNameLength.txt   24K geneInfo.tab          204K sjdbInfo.txt</span></span><br><span class="line"><span class="comment"># 4.0K chrName.txt         64M Genome                204K sjdbList.fromGTF.out.tab</span></span><br><span class="line"><span class="comment"># 4.0K chrStart.txt       4.0K genomeParameters.txt  204K sjdbList.out.tab</span></span><br><span class="line"><span class="comment"># 732K exonGeTrInfo.tab   516M SA                    224K transcriptInfo.tab</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># STAR解析后的基因数</span></span><br><span class="line">wc -l star_GRCh38/geneInfo.tab</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 原始GTF的基因数</span></span><br><span class="line">grep -cP <span class="string">&#x27;\tgene\t&#x27;</span> GRCh38.gtf</span><br></pre></td></tr></table></figure><p>现在完成了索引创建，执行比对步骤   </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir results</span><br><span class="line">mkdir results/STAR</span><br><span class="line"></span><br><span class="line">STAR --runThreadN 4 --genomeDir indices/STAR --readFilesIn Share/ERR522959_1.fastq Share/ERR522959_2.fastq --outFileNamePrefix results/STAR/</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p trt_N061011</span><br><span class="line"><span class="comment"># --runThreadN 4: 使用4个线程</span></span><br><span class="line"><span class="comment"># --readFilesIn: 输入文件，左端和右端</span></span><br><span class="line"><span class="comment"># --readFilesCommand zcat：gzip压缩，指定解压方式</span></span><br><span class="line"><span class="comment"># --genomeDir：基因组索引目录的位置</span></span><br><span class="line"><span class="comment"># -S: 指定输出文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 动物一般写 1000000，植物一般写5000</span></span><br><span class="line">max_intron_size=100000</span><br><span class="line"></span><br><span class="line"><span class="comment"># --genomeLoad LoadAndKeep : 共享内存</span></span><br><span class="line"><span class="comment"># 其他参数自己对着star的帮助手册看</span></span><br><span class="line">star_p=<span class="string">&quot; --outFilterType BySJout --outSAMattributes NH HI AS NM MD \</span></span><br><span class="line"><span class="string">       --outFilterMultimapNmax 20 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 \</span></span><br><span class="line"><span class="string">       --alignIntronMin 20 --alignIntronMax <span class="variable">$&#123;max_intron_size&#125;</span> \</span></span><br><span class="line"><span class="string">                --alignMatesGapMax <span class="variable">$&#123;max_intron_size&#125;</span> \</span></span><br><span class="line"><span class="string">                --outFilterMatchNminOverLread 0.66 --outFilterScoreMinOverLread 0.66 \</span></span><br><span class="line"><span class="string">                --winAnchorMultimapNmax 70 --seedSearchStartLmax 45 \</span></span><br><span class="line"><span class="string">                --outSAMattrIHstart 0 --outSAMstrandField intronMotif \</span></span><br><span class="line"><span class="string">                --genomeLoad LoadAndKeep --outReadsUnmapped Fastx \</span></span><br><span class="line"><span class="string">                --outSAMtype BAM Unsorted --quantMode TranscriptomeSAM GeneCounts&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># STAR比对单个样品                </span></span><br><span class="line">STAR --runMode alignReads --runThreadN 4 \</span><br><span class="line">        --readFilesIn trt_N061011_1.fq.gz trt_N061011_2.fq.gz \</span><br><span class="line">        --readFilesCommand zcat --genomeDir genome/star_GRCh38 \</span><br><span class="line">        --outFileNamePrefix trt_N061011/trt_N061011. <span class="variable">$&#123;star_p&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># STAR比对单个样品                </span></span><br><span class="line">STAR --runMode alignReads --runThreadN 4 \</span><br><span class="line">        --readFilesIn trt_N061011_1.fq.gz trt_N061011_2.fq.gz \</span><br><span class="line">        --readFilesCommand zcat --genomeDir genome/star_GRCh38 \</span><br><span class="line">        --outFileNamePrefix trt_N061011/trt_N061011. <span class="variable">$&#123;star_p&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Aug 03 11:44:27 ..... started STAR run</span></span><br><span class="line"><span class="comment"># Aug 03 11:44:27 ..... loading genome</span></span><br><span class="line"><span class="comment"># Aug 03 11:44:30 ..... started mapping</span></span><br><span class="line"><span class="comment"># Aug 03 11:44:48 ..... finished successfully</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出文件</span></span><br><span class="line"></span><br><span class="line">ls -sh trt_N061011/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># trt_N061011.Aligned.out.bam: 比对到基因组的bam文件</span></span><br><span class="line"><span class="comment"># trt_N061011.Aligned.toTranscriptome.out.bam：比对到转录组的bam文件，供RSEM计算TPM使用 </span></span><br><span class="line"><span class="comment"># trt_N061011.Log.final.out: reads比对日志</span></span><br><span class="line"><span class="comment"># trt_N061011.Log.out: 运行参数和过程</span></span><br><span class="line"><span class="comment"># trt_N061011.Log.progress.out: 运行日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># trt_N061011.ReadsPerGene.out.tab: 每个基因的reads count，链非特异性RNASeq选第2列.</span></span><br><span class="line"><span class="comment"># column 1: gene ID</span></span><br><span class="line"><span class="comment"># column 2: counts for unstranded RNA-seq</span></span><br><span class="line"><span class="comment"># column 3: counts for the 1st read strand aligned with RNA (htseq-count option -s yes)</span></span><br><span class="line"><span class="comment"># column 4: counts for the 2nd read strand aligned with RNA (htseq-count option -s reverse)</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Select the output according to the strandedness of your data. Note, that if you have stranded data and choose one of the columns 3 or 4, the other column (4 or 3) will give you the count of antisense reads. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># trt_N061011.SJ.out.tab: Junction reads</span></span><br><span class="line"><span class="comment"># trt_N061011.Unmapped.out.mate1：未比对上的reads</span></span><br><span class="line"><span class="comment"># trt_N061011.Unmapped.out.mate2：未比对上的reads</span></span><br></pre></td></tr></table></figure><h3 id="Kallisto和Pseudo-Alignment"><a href="#Kallisto和Pseudo-Alignment" class="headerlink" title="Kallisto和Pseudo-Alignment"></a>Kallisto和Pseudo-Alignment</h3><p><code>STAR</code>是序列比对工具，而<code>Kallisto</code>是伪比对工具。它们的区别是：比对工具是把reads比对回参考基因组或转录组，而伪比对工具是把<code>k-mers</code>比对到参考转录组。  </p><h4 id="什么是k-mer"><a href="#什么是k-mer" class="headerlink" title="什么是k-mer"></a>什么是k-mer</h4><p><code>k-mer</code>是来源于测序短序列中的长度为<code>k</code>的子序列。例如，假设有短序列<code>ATCCCGGGTTAT</code>，想从中获得<code>7-mer</code>。为此，我们将提取前七个碱基作为第一个<code>7-mer</code>，然后向下移动一个碱基获得第二个<code>7-mer</code>，以此类推。  </p><h4 id="为什么比对k-mers而不是reads"><a href="#为什么比对k-mers而不是reads" class="headerlink" title="为什么比对k-mers而不是reads"></a>为什么比对k-mers而不是reads</h4><ol><li>伪比对工具利用算法技巧使得比对<code>k-mers</code>比比对<code>reads</code>速度快很多  </li><li>在某些情况下，伪对齐工具可能比传统比对工具更好的处理测序错误问题。例如，假设序列上第一个碱基中存在测序错误，本来是<code>T</code>却测序成了<code>A</code>。对伪比对工具来说，只会影响第一个<code>7-mer</code>而不会影响后续<code>7-mer</code>的比对。  </li></ol><h4 id="Kallisto的伪比对模式"><a href="#Kallisto的伪比对模式" class="headerlink" title="Kallisto的伪比对模式"></a>Kallisto的伪比对模式</h4><p>Kallisto有一个为单细胞转录组特别设计的伪比对模式。和<code>STAR</code>不同，Kallisto比对到的是参考转录组而不是参考基因组，意味着<code>Kallisto</code>是将序列比对到剪接异构体而不是基因上，对单细胞来讲，这是有挑战性的：  </p><ul><li>单细胞RNA-seq的覆盖率低于<code>bulk RNA-seq</code>，这意味着可以从序列中获得的信息总量减少了。</li><li>许多单细胞RNA-seq方案具有<code>3&#39;</code>覆盖偏好性，如果两种剪接异构体只在5’末端不同，则很难确定序列来源于哪个剪接异构体。</li><li>一些单细胞RNA-seq方案测序读长短，也难以区分来源于哪个剪接异构体。  </li></ul><p>Kallisto的伪模式采用了略微不同的伪比对方法。它不与剪接异构体比对，而是与等价类 (<code>equivalence classes</code>)比对。所以如果read比对到多个异构体，Kallisto会记录read比对到包含有所有异构体的等价类，因此可以使用等价类计数而非基因或转录本计数用于下游的聚类等分析。具体见下图：  </p><p><img src="/images/lab2/642.webp">  </p><p>今天我们只用一个细胞来展示伪比对，但是Kallisto其实可以同时对大量细胞进行伪比对，并且可以使用<code>UMIs</code>的信息。  </p><p>类似于<code>STAR</code>，伪比对前也需要为<code>Kallisto</code>生成一个索引。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir results/Kallisto</span><br><span class="line">kallisto pseudo -i indices/Kallisto/transcripts.idx -o results/Kallisto -b batch.txt</span><br></pre></td></tr></table></figure><p>  参考 <a href="https://pachterlab.github.io/kallisto/manual">https://pachterlab.github.io/kallisto/manual</a>  构建<code>batch.txt</code>。</p><p><code>batch.txt</code>文件格式如下：第一列是细胞的名字<code>ID</code>, 后面两列是对应的<code>PE reads</code>。所有<code>#</code>开头的行都忽略。如果是单端测序，命令行参数指定为<code>--single -l -s</code>，<code>batch.txt</code>只需提供一个<code>fastq</code>文件。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#id file1 file 2</span></span><br><span class="line">cell1 cell1_1.fastq.gz cell1_2.fastq.gz</span><br><span class="line">cell2 cell2_1.fastq.gz cell2_2.fastq.gz</span><br><span class="line">cell3 cell3_1.fastq.gz cell3_2.fastq.gz</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>如果使用了<code>--umi</code>参数，<code>batch.txt</code>文件格式如下：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#id umi-file file-1</span></span><br><span class="line">cell1 cell_1.umi cell_1.fastq.gz</span><br><span class="line">cell2 cell_2.umi cell_2.fastq.gz</span><br><span class="line">cell3 cell_3.umi cell_3.fastq.gz</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><code>umi-file</code>是文本文件，每行是一个read的<code>UMI</code>序列，必须与<code>fastq</code>中<code>reads</code>的顺序一致。即便<code>UMI</code>数据是单端，也不会用到测序片段的长度信息。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TTACACTGAC</span><br><span class="line">CCACTCTATG</span><br><span class="line">CAGGAAATCG</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><code>kallisto</code>在<code>UMI</code>模式下，不是计算每个<code>equivalence class</code>的<code>reads count</code>，而是使用测序reads做<code>pseudoalign</code>获得<code>equivalence class</code>, 计算每个<code>equivalence class</code>上的UMIs个数。  </p><h4 id="理解Kallisto的输出结果"><a href="#理解Kallisto的输出结果" class="headerlink" title="理解Kallisto的输出结果"></a>理解Kallisto的输出结果</h4><p>上面命令会生成4个文件-<code>matrix.cells</code>, <code>matrix.ec</code>, <code>matrix.tsv</code> 和 <code>run_info.json</code>.  </p><ul><li><code>matrix.cell</code> 为细胞ID列表，测试数据只用了一个细胞，这个文件应该只包含“ERR522959”</li><li><code>matrix.ec</code> 含有所有用到的等价类信息。每一行的第一个数字是等价类<code>ID</code>，第二个数字对应等价类的转录文本<code>ID</code>。举个例子，<code>10 1,2,3</code>表示等价类<code>10</code>包含转录文本ID <code>1</code>, <code>2</code>和<code>3</code>。ID号对应于转录本在<code>reference.transcripts.fa</code>中出现的顺序。第一个出现的转录本ID为<code>0</code>，转录本ID <code>1</code>, <code>2</code>和<code>3</code>对应于<code>reference.transcripts.fa</code>中的第二，第三和第四条转录本。</li><li><code>matrix.tsv</code> 表示每个等价类在不同细胞中的<code>reads count</code>信息。第一个数字是等价类ID，和<code>matrix.ec</code>中的定义一样。第二个数字是<code>细胞ID</code>，和<code>matrix.cell</code>文件中的细胞名字顺序一一对应。第三个数字是等价类在该细胞中的<code>reads count</code>。举个例子，<code>5 1 3</code>指细胞<code>1</code>中有<code>3</code>个reads比对到等价类<code>5</code>。细胞ID同样是<strong>零</strong>起始的索引，所以细胞<code>1</code>指<code>matrix.cells</code>中的第二个细胞。</li><li><code>run_info.json</code> 含有关于<code>Kallisto</code>执行的信息，一般可忽略。   </li></ul>]]></content>
      
      
      <categories>
          
          <category> SingleCell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SingleCell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GO富集圈圈图</title>
      <link href="2020/09/23/goplot/"/>
      <url>2020/09/23/goplot/</url>
      
        <content type="html"><![CDATA[<h2 id="绘制GO富集的圈圈图实例"><a href="#绘制GO富集的圈圈图实例" class="headerlink" title="绘制GO富集的圈圈图实例"></a>绘制GO富集的圈圈图实例</h2><p>载入R包  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(clusterProfiler)</span><br><span class="line"><span class="keyword">library</span>(org.Hs.eg.db)</span><br><span class="line"><span class="keyword">library</span>(GOplot)</span><br><span class="line"><span class="keyword">library</span>(stringr)</span><br></pre></td></tr></table></figure><p>载入差异表达数据  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning in readChar(con, 5L, useBytes &#x3D; TRUE): cannot open compressed file &#39;F:&#x2F;</span><br><span class="line">## diff_expr.Rdata&#39;, probable reason &#39;No such file or directory&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Error in readChar(con, 5L, useBytes &#x3D; TRUE): cannot open the connection</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">##       logFC   AveExpr         t      P.Value    adj.P.Val        B probe_id symbol change</span><br><span class="line">## 1 -5.780170  7.370282 -82.94833 3.495205e-12 1.163798e-07 16.32898  8133876   CD36   down</span><br><span class="line">## 2  4.212683  9.106625  68.40113 1.437468e-11 2.393169e-07 15.71739  7965335  DUSP6     up</span><br><span class="line">## 3 -5.633027  8.763220 -57.61985 5.053466e-11 4.431880e-07 15.04752  7972259    DCT   down</span><br><span class="line">## 4  3.801663  9.726468  57.21112 5.324059e-11 4.431880e-07 15.01709  7972217  SPRY2     up</span><br><span class="line">## 5 -3.263063 10.171635 -50.51733 1.324638e-10 8.821294e-07 14.45166  8129573  MOXD1   down</span><br><span class="line">## 6  3.843247  9.667077  45.87910 2.681063e-10 1.487856e-06 13.97123  8015806   ETV4     up</span><br><span class="line">##   ENTREZID</span><br><span class="line">## 1      948</span><br><span class="line">## 2     1848</span><br><span class="line">## 3     1638</span><br><span class="line">## 4    10253</span><br><span class="line">## 5    26002</span><br><span class="line">## 6     2118</span><br></pre></td></tr></table></figure><p>保留差异表达基因  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">diff_expr = diff_expr[diff_expr$change!=<span class="string">&quot;stable&quot;</span>,]</span><br><span class="line">diff_expr = diff_expr[<span class="number">1</span>:<span class="number">100</span>,]</span><br><span class="line">gene_diff = diff_expr$symbol</span><br></pre></td></tr></table></figure><p>富集分析  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enrich_BP &lt;- enrichGO(gene = gene_diff, keyType = <span class="string">&quot;SYMBOL&quot;</span>, OrgDb= org.Hs.eg.db,</span><br><span class="line">                      ont = <span class="string">&quot;BP&quot;</span>, pAdjustMethod = <span class="string">&quot;BH&quot;</span>, minGSSize = <span class="number">1</span>,</span><br><span class="line">                      pvalueCutoff = <span class="number">0.05</span>, qvalueCutoff = <span class="number">0.05</span>)</span><br><span class="line">class(enrich_BP)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;enrichResult&quot;</span><br><span class="line">## attr(,&quot;package&quot;)</span><br><span class="line">## [1] &quot;DOSE&quot;</span><br></pre></td></tr></table></figure><p>提取图像绘制需要的输入数据  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enrich &lt;- data.frame(enrich_BP) </span><br><span class="line">colnames(enrich)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;ID&quot;          &quot;Description&quot; &quot;GeneRatio&quot;   &quot;BgRatio&quot;     &quot;pvalue&quot;      &quot;p.adjust&quot;   </span><br><span class="line">## [7] &quot;qvalue&quot;      &quot;geneID&quot;      &quot;Count&quot;</span><br></pre></td></tr></table></figure><p>数据整理  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">enrich &lt;- enrich[<span class="number">1</span>:<span class="number">10</span>,c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">6</span>)] </span><br><span class="line"></span><br><span class="line">enrich$geneID &lt;- str_replace_all(enrich$geneID,<span class="string">&quot;/&quot;</span>,<span class="string">&quot;,&quot;</span>) </span><br><span class="line">names(enrich)=c(<span class="string">&quot;ID&quot;</span>,<span class="string">&quot;Term&quot;</span>,<span class="string">&quot;Genes&quot;</span>,<span class="string">&quot;adj_pval&quot;</span>)</span><br><span class="line">enrich$Category = <span class="string">&quot;BP&quot;</span></span><br><span class="line">head(enrich)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">##                    ID                                                       Term</span><br><span class="line">## GO:0050730 GO:0050730            regulation of peptidyl-tyrosine phosphorylation</span><br><span class="line">## GO:0048732 GO:0048732                                          gland development</span><br><span class="line">## GO:0018108 GO:0018108                          peptidyl-tyrosine phosphorylation</span><br><span class="line">## GO:0018212 GO:0018212                             peptidyl-tyrosine modification</span><br><span class="line">## GO:1901992 GO:1901992 positive regulation of mitotic cell cycle phase transition</span><br><span class="line">## GO:0042326 GO:0042326                     negative regulation of phosphorylation</span><br><span class="line">##                                                                                   Genes</span><br><span class="line">## GO:0050730                CD36,AREG,TGFA,CD24,SFRP1,ITGB3,MIR221,SH2B3,CNTN1,INPP5F,MVP</span><br><span class="line">## GO:0048732   ETV5,CCND1,AREG,SERPINF1,SFRP1,IGFBP5,JUN,SEMA3C,SOX2,SNAI2,PBX1,E2F7,RARB</span><br><span class="line">## GO:0018108          CD36,AREG,TGFA,CD24,SFRP1,ITGB3,MIR221,EPHA5,SH2B3,CNTN1,INPP5F,MVP</span><br><span class="line">## GO:0018212          CD36,AREG,TGFA,CD24,SFRP1,ITGB3,MIR221,EPHA5,SH2B3,CNTN1,INPP5F,MVP</span><br><span class="line">## GO:1901992                                     DTL,CCND1,CDCA5,CDC25A,MIR221,PBX1,CDC45</span><br><span class="line">## GO:0042326 DUSP6,SPRY2,NUPR1,SPRY4,UBASH3B,SFRP1,JUN,TLR4,TIMP3,MIR221,SH2B3,INPP5F,MVP</span><br><span class="line">##                adj_pval Category</span><br><span class="line">## GO:0050730 0.0001172193       BP</span><br><span class="line">## GO:0048732 0.0001314734       BP</span><br><span class="line">## GO:0018108 0.0001314734       BP</span><br><span class="line">## GO:0018212 0.0001314734       BP</span><br><span class="line">## GO:1901992 0.0001567831       BP</span><br><span class="line">## GO:0042326 0.0001741554       BP</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">genes &lt;- data.frame(ID = diff_expr$symbol, logFC = diff_expr$logFC)</span><br><span class="line">head(genes)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##      ID     logFC</span><br><span class="line">## 1  CD36 -5.780170</span><br><span class="line">## 2 DUSP6  4.212683</span><br><span class="line">## 3   DCT -5.633027</span><br><span class="line">## 4 SPRY2  3.801663</span><br><span class="line">## 5 MOXD1 -3.263063</span><br><span class="line">## 6  ETV4  3.843247</span><br></pre></td></tr></table></figure><p>转化成输入数据  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">circ &lt;- circle_dat(enrich,genes)</span><br><span class="line">head(circ)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">##   category         ID                                            term count genes     logFC</span><br><span class="line">## 1       BP GO:0050730 regulation of peptidyl-tyrosine phosphorylation    11  CD36 -5.780170</span><br><span class="line">## 2       BP GO:0050730 regulation of peptidyl-tyrosine phosphorylation    11  AREG  3.095910</span><br><span class="line">## 3       BP GO:0050730 regulation of peptidyl-tyrosine phosphorylation    11  TGFA  2.518930</span><br><span class="line">## 4       BP GO:0050730 regulation of peptidyl-tyrosine phosphorylation    11  CD24 -3.322533</span><br><span class="line">## 5       BP GO:0050730 regulation of peptidyl-tyrosine phosphorylation    11 SFRP1  2.103767</span><br><span class="line">## 6       BP GO:0050730 regulation of peptidyl-tyrosine phosphorylation    11 ITGB3  3.162000</span><br><span class="line">##       adj_pval   zscore</span><br><span class="line">## 1 0.0001172193 0.904534</span><br><span class="line">## 2 0.0001172193 0.904534</span><br><span class="line">## 3 0.0001172193 0.904534</span><br><span class="line">## 4 0.0001172193 0.904534</span><br><span class="line">## 5 0.0001172193 0.904534</span><br><span class="line">## 6 0.0001172193 0.904534</span><br></pre></td></tr></table></figure><p>绘制图像  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GOCircle(circ)</span><br></pre></td></tr></table></figure><p><img src="/images/goplot/unnamed-chunk-16-1.png" alt="plot of chunk unnamed-chunk-16"></p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> enrichment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggplot2小部件参考</title>
      <link href="2020/09/22/ggplot2/"/>
      <url>2020/09/22/ggplot2/</url>
      
        <content type="html"><![CDATA[<h3 id="添加原件"><a href="#添加原件" class="headerlink" title="添加原件"></a>添加原件</h3><ul><li><p>添加竖线或者横线  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">geom_abline(mapping = <span class="literal">NULL</span>, data = <span class="literal">NULL</span>, <span class="keyword">...</span>, slope, intercept, na.rm = <span class="literal">FALSE</span>, show.legend = <span class="literal">NA</span>)</span><br><span class="line">geom_hline(mapping = <span class="literal">NULL</span>, data = <span class="literal">NULL</span>, <span class="keyword">...</span>, yintercept, na.rm = <span class="literal">FALSE</span>, show.legend = <span class="literal">NA</span>)</span><br><span class="line">geom_vline(mapping = <span class="literal">NULL</span>, data = <span class="literal">NULL</span>, <span class="keyword">...</span>, xintercept, na.rm = <span class="literal">FALSE</span>, show.legend = <span class="literal">NA</span>)</span><br></pre></td></tr></table></figure><p>三个函数的作用分别是，geom_abline添加斜线， geom_hline添加水平线，geom_vline添加垂直线  </p><p>参数slope 表示斜率  intercept表示截距  </p><p>参数yintercept  表示y轴截距或直线所在位置  </p><p>参数xintercept  表示x轴截距或直线所在位置  </p></li><li><p>添加线段  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2)</span><br></pre></td></tr></table></figure><p>x, y控制线段起始位置，xend，yend控制线段终止位置  </p></li></ul><h3 id="背景布局"><a href="#背景布局" class="headerlink" title="背景布局"></a>背景布局</h3><ul><li><p>去掉网格  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme(panel.grid = element_blank())</span><br></pre></td></tr></table></figure></li><li><p>使用与plot相似的背景  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme_classic()</span><br></pre></td></tr></table></figure></li><li><p>x，y轴转换  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">coord_flip()</span><br></pre></td></tr></table></figure></li><li><p>去掉图形和坐标轴间隙  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scale_y_continuous(expand = c(<span class="number">0</span>,<span class="number">0</span>))//这个可以去掉与X轴间隙</span><br><span class="line">scale_x_continuous(expand = c(<span class="number">0</span>,<span class="number">0</span>))//这个可以去掉与Y轴间隙</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ggplot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WGCNA教程</title>
      <link href="2020/08/15/wgcna/"/>
      <url>2020/08/15/wgcna/</url>
      
        <content type="html"><![CDATA[<p>WGCNA的基本原理和操作  </p><a id="more"></a>  <h1 id="WGCNA-分析"><a href="#WGCNA-分析" class="headerlink" title="WGCNA 分析"></a>WGCNA 分析</h1><h2 id="WGCNA基本概念"><a href="#WGCNA基本概念" class="headerlink" title="WGCNA基本概念"></a>WGCNA基本概念</h2><p>加权基因共表达网络分析 (WGCNA, Weighted correlation network analysis)是用来描述不同样品之间基因关联模式的系统生物学方法，可以用来鉴定高度<strong>协同变化</strong>的基因集。并根据基因集的内连性和基因集与表型之间的关联鉴定候补生物标记基因或治疗靶点。  </p><p>相比于只关注差异表达的基因，WGCNA利用数千或近万个变化最大的基因或全部基因的信息识别感兴趣的基因集，并与表型进行显著性关联分析。一是充分利用了信息，二是把数千个基因与表型的关联转换为数个基因集与表型的关联，免去了多重假设检验校正的问题。  </p><h2 id="WGCNA常见术语"><a href="#WGCNA常见术语" class="headerlink" title="WGCNA常见术语"></a>WGCNA常见术语</h2><ul><li>共表达网络（Co-expression network）：定义为加权基因网络。点代表基因，边代表基因表达相关性。加权是指对<strong>相关性值进行冥次运算</strong>。 (冥次的值也就是<strong>软阈值</strong> (<code>power</code>, <code>/post/2020-08-15-wgcna_fileskSoftThreshold</code>这个函数所做的就是确定合适的<code>power</code>))。无向网络的边属性计算方式为 <code>abs(cor(genex, geney)) ^ power</code>；有向网络的边属性计算方式为<code>(1+cor(genex, geney)/2) ^ power</code>; <code>sign hybrid</code>的边属性计算方式为<code>cor(genex, geney)^power if cor&gt;0 else 0</code>。这种处理方式强化了强相关，弱化了弱相关或负相关，使得相关性数值更符合<code>无标度网络</code>特征，更具有生物意义。如果没有合适的<strong>power</strong>，一般是由于部分样品与其它样品因为某种原因差别太大导致的，可根据具体问题移除部分样品或查看后面的<code>经验值</code>。  </li><li>模块（Module）：高度內连的基因集。在无向网络中，模块内是高度<strong>相关</strong>的基因。在有向网络中，模块内是高度<strong>正相关</strong>的基因。把基因聚类成模块后，可以对每个模块进行三个层次的分析：<ol><li>功能富集分析查看其功能特征是否与研究目的相符；</li><li>模块与性状进行关联分析，找出与关注性状相关度最高的模块；</li><li>模块与样本进行关联分析，找到样品特异高表达的模块。</li></ol></li><li>连接度（Connectivity）：类似于网络中 “度”(degree)的概念。每个基因的连接度是与其他网络基因的连接度。 在共表达网络中，连接度衡量的是一个基因与其他的网络基因有多相关。 </li><li>模块内连接度（Intramodular connectivity）: 模块内连接度衡量的是给定基因相对于特定模块的基因是如何连接或共同表达的。模内连接性可以解释为模块成员关系的度量。  </li><li>Module eigengene E: 给定模型的第一主成分，代表<strong>整个模型的基因表达谱</strong>。  </li><li>Module membership: 给定基因表达谱与给定模型的eigengene的相关性。  </li><li>Hub gene: 关键基因 (连接度最多或连接多个模块的基因)。  </li><li>Adjacency matrix ：基因和基因之间的加权相关性值构成的矩阵。  </li><li>TOM (Topological overlap matrix)：把邻接矩阵转换为拓扑重叠矩阵，以降低噪音和假相关，获得的新距离矩阵，这个信息可拿来构建网络或绘制TOM图。  </li><li>Gene signifcance GS：基因表达模式与某样本特质之间的相关，一般相关值越大，表示该基因越重要，有时候也用<code>-log（p）</code>来量化  </li><li>Module signifcance：该模块中所有基因相关绝对值的均值。当基因相关是基于基因表达模式与样本特质之间的相关值时，该测量与模块特征基因和样本特质之间存在高相关。  </li></ul><h2 id="基本分析流程"><a href="#基本分析流程" class="headerlink" title="基本分析流程"></a>基本分析流程</h2><p><img src="/images/wgcna/wgcna.png" alt="WGCNA">  </p><ol><li>构建基因共表达网络：使用加权的表达相关性。基本目的是充分利用基因间的交互模式；采用相关系数作为共表达的测量。  </li><li>识别基因集：基于加权相关性，进行层级聚类分析，并根据设定标准切分聚类结果，获得不同的基因模块，用聚类树的分枝和不同颜色表示。可以采用层次聚类（hierarchical clustering）或动态树切分（dynamic tree cut）实现。  </li><li>将模块与外部信息关联。其中外部信息包括基于阵列的临床数据（clinical data），多态性数据（SNPs）和蛋白组数据（proteomics）；基因信息包括ontology和功能富集（functional enrichment）。基本目的是发现具有生物学意义的模块。  </li><li>研究模型之间的关系，从系统层面查看不同模型的互作网络。基本目的是生物数据降维，并提供系统水平的视角（system-level view）；采用eigengene网络实现。  </li><li>最后发现感兴趣模块的关键驱动子（key drivers）。基本目的是实验验证并明确生物标记（biomarker）；采用的手段可以是模块内连接（intramodular connectivity）以及因果检验（causality testing）。  </li></ol><h2 id="WGCNA包实战"><a href="#WGCNA包实战" class="headerlink" title="WGCNA包实战"></a>WGCNA包实战</h2><p>R包<code>WGCNA</code>是用于计算各种加权关联分析的功能集合，可用于网络构建，基因筛选，基因簇鉴定，拓扑特征计算，数据模拟和可视化等。 </p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>WGCNA本质是基于相关系数的网络分析方法，适用于多样品数据模式，一般要求样本数多于<strong>15</strong>个。样本数多于<strong>20</strong>时效果更好，样本越多，结果越稳定。  </li><li>基因表达矩阵: 常规表达矩阵即可，即基因在行，样品在列，进入分析前做一个转置。RPKM、FPKM或其它标准化方法影响不大。  </li><li>安装WGCNA   </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(WGCNA)</span><br><span class="line">Loading required package: dynamicTreeCut</span><br><span class="line">Loading required package: fastcluster</span><br><span class="line"></span><br><span class="line">Attaching package: ‘fastcluster’</span><br><span class="line"></span><br><span class="line">The following object is masked from ‘package:stats’:</span><br><span class="line"></span><br><span class="line">    hclust</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Attaching package: ‘WGCNA’</span><br><span class="line"></span><br><span class="line">The following object is masked from ‘package:stats’:</span><br><span class="line"></span><br><span class="line">    cor</span><br><span class="line"></span><br><span class="line">options(stringsAsFactors = <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># 开启多线程</span></span><br><span class="line">enableWGCNAThreads()</span><br><span class="line">Allowing parallel execution with up to <span class="number">7</span> working processes.</span><br><span class="line"></span><br><span class="line">load(<span class="string">&quot;./data.RData&quot;</span>)</span><br><span class="line">head(datTraits)  </span><br><span class="line">                  gsm cellline       subtype</span><br><span class="line">GSM1172844 GSM1172844    184A1 Non-malignant</span><br><span class="line">GSM1172845 GSM1172845    184B5 Non-malignant</span><br><span class="line">GSM1172846 GSM1172846    21MT1         Basal</span><br><span class="line">GSM1172847 GSM1172847    21MT2         Basal</span><br><span class="line">GSM1172848 GSM1172848     21NT         Basal</span><br><span class="line">GSM1172849 GSM1172849     21PT         Basal</span><br><span class="line">fpkm[<span class="number">1</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">4</span>]  </span><br><span class="line">                GSM1172844 GSM1172845 GSM1172846  GSM1172847</span><br><span class="line">ENSG00000000003   <span class="number">95.21255</span>   <span class="number">95.69868</span>   <span class="number">19.99467</span>  <span class="number">65.6863763</span></span><br><span class="line">ENSG00000000005    <span class="number">0.00000</span>    <span class="number">0.00000</span>    <span class="number">0.00000</span>   <span class="number">0.1492021</span></span><br><span class="line">ENSG00000000419  <span class="number">453.20831</span>  <span class="number">243.64804</span>  <span class="number">142.05818</span> <span class="number">200.4131493</span></span><br><span class="line">ENSG00000000457   <span class="number">18.10439</span>   <span class="number">26.56661</span>   <span class="number">16.12776</span>  <span class="number">12.0873135</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 选取前5000高变异的基因计算WGCNA</span></span><br><span class="line">datExpr &lt;- t(fpkm[order(apply(fpkm,<span class="number">1</span>,mad), decreasing = <span class="literal">T</span>)[<span class="number">1</span>:<span class="number">5000</span>],])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-确定最佳beta值"><a href="#1-确定最佳beta值" class="headerlink" title="1. 确定最佳beta值"></a>1. 确定最佳beta值</h3><blockquote><p>在这里选取的软阈值是为了构建最有效的无尺度网络。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">powers = c(c(<span class="number">1</span>:<span class="number">10</span>), seq(from = <span class="number">12</span>, to=<span class="number">20</span>, by=<span class="number">2</span>))</span><br><span class="line"><span class="comment">## 批量计算多个power值的R方</span></span><br><span class="line">sft = pickSoftThreshold(datExpr, powerVector = powers, RsquaredCut = <span class="number">0.85</span>, verbose = <span class="number">5</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">pickSoftThreshold: will use block size <span class="number">5000.</span></span><br><span class="line"> pickSoftThreshold: calculating connectivity <span class="keyword">for</span> given powers...</span><br><span class="line">   ..working on genes <span class="number">1</span> through <span class="number">5000</span> of <span class="number">5000</span></span><br><span class="line">   Power SFT.R.sq  slope truncated.R.sq  mean.k. median.k.  max.k.</span><br><span class="line"><span class="number">1</span>      <span class="number">1</span>   <span class="number">0.0944</span> -<span class="number">0.904</span>          <span class="number">0.885</span> <span class="number">1040.000</span>  <span class="number">1.02e+03</span> <span class="number">1810.00</span></span><br><span class="line"><span class="number">2</span>      <span class="number">2</span>   <span class="number">0.4910</span> -<span class="number">1.580</span>          <span class="number">0.952</span>  <span class="number">328.000</span>  <span class="number">3.03e+02</span>  <span class="number">866.00</span></span><br><span class="line"><span class="number">3</span>      <span class="number">3</span>   <span class="number">0.7030</span> -<span class="number">1.860</span>          <span class="number">0.983</span>  <span class="number">128.000</span>  <span class="number">1.08e+02</span>  <span class="number">474.00</span></span><br><span class="line"><span class="number">4</span>      <span class="number">4</span>   <span class="number">0.7920</span> -<span class="number">2.000</span>          <span class="number">0.991</span>   <span class="number">57.300</span>  <span class="number">4.38e+01</span>  <span class="number">283.00</span></span><br><span class="line"><span class="number">5</span>      <span class="number">5</span>   <span class="number">0.8490</span> -<span class="number">2.060</span>          <span class="number">0.996</span>   <span class="number">28.400</span>  <span class="number">1.95e+01</span>  <span class="number">179.00</span></span><br><span class="line"><span class="number">6</span>      <span class="number">6</span>   <span class="number">0.8810</span> -<span class="number">2.090</span>          <span class="number">0.991</span>   <span class="number">15.200</span>  <span class="number">9.45e+00</span>  <span class="number">118.00</span></span><br><span class="line"><span class="number">7</span>      <span class="number">7</span>   <span class="number">0.9040</span> -<span class="number">2.070</span>          <span class="number">0.990</span>    <span class="number">8.640</span>  <span class="number">4.89e+00</span>   <span class="number">80.60</span></span><br><span class="line"><span class="number">8</span>      <span class="number">8</span>   <span class="number">0.9220</span> -<span class="number">2.040</span>          <span class="number">0.994</span>    <span class="number">5.170</span>  <span class="number">2.67e+00</span>   <span class="number">56.40</span></span><br><span class="line"><span class="number">9</span>      <span class="number">9</span>   <span class="number">0.9330</span> -<span class="number">2.030</span>          <span class="number">0.995</span>    <span class="number">3.240</span>  <span class="number">1.54e+00</span>   <span class="number">40.50</span></span><br><span class="line"><span class="number">10</span>    <span class="number">10</span>   <span class="number">0.9350</span> -<span class="number">2.020</span>          <span class="number">0.989</span>    <span class="number">2.100</span>  <span class="number">9.29e-01</span>   <span class="number">30.00</span></span><br><span class="line"><span class="number">11</span>    <span class="number">12</span>   <span class="number">0.9250</span> -<span class="number">2.030</span>          <span class="number">0.977</span>    <span class="number">0.971</span>  <span class="number">3.63e-01</span>   <span class="number">17.30</span></span><br><span class="line"><span class="number">12</span>    <span class="number">14</span>   <span class="number">0.9210</span> -<span class="number">2.020</span>          <span class="number">0.982</span>    <span class="number">0.496</span>  <span class="number">1.56e-01</span>   <span class="number">10.50</span></span><br><span class="line"><span class="number">13</span>    <span class="number">16</span>   <span class="number">0.9250</span> -<span class="number">1.970</span>          <span class="number">0.992</span>    <span class="number">0.275</span>  <span class="number">7.04e-02</span>    <span class="number">6.61</span></span><br><span class="line"><span class="number">14</span>    <span class="number">18</span>   <span class="number">0.8940</span> -<span class="number">1.960</span>          <span class="number">0.973</span>    <span class="number">0.163</span>  <span class="number">3.31e-02</span>    <span class="number">4.31</span></span><br><span class="line"><span class="number">15</span>    <span class="number">20</span>   <span class="number">0.9220</span> -<span class="number">1.820</span>          <span class="number">0.986</span>    <span class="number">0.102</span>  <span class="number">1.63e-02</span>    <span class="number">2.89</span></span><br><span class="line">power = sft$powerEstimate</span><br><span class="line">power</span><br><span class="line">[<span class="number">1</span>] <span class="number">6</span></span><br></pre></td></tr></table></figure><blockquote><p>由以上结果可以看出在power = 6时首次达到R方的cut阈值0.85，因此选取6作为合适的power值</p></blockquote><p>通过绘图更加直观的观察阈值的选取：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">par(mfrow = c(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">cex1 = <span class="number">0.9</span>;</span><br><span class="line"><span class="comment"># Scale-free topology fit index as a function of the soft-thresholding power</span></span><br><span class="line">plot(sft$fitIndices[,<span class="number">1</span>], -sign(sft$fitIndices[,<span class="number">3</span>])*sft$fitIndices[,<span class="number">2</span>],</span><br><span class="line">      xlab=<span class="string">&quot;Soft Threshold (power)&quot;</span>,ylab=<span class="string">&quot;Scale Free Topology Model Fit,signed R^2&quot;</span>,type=<span class="string">&quot;n&quot;</span>,</span><br><span class="line">      main = paste(<span class="string">&quot;Scale independence&quot;</span>));</span><br><span class="line">text(sft$fitIndices[,<span class="number">1</span>], -sign(sft$fitIndices[,<span class="number">3</span>])*sft$fitIndices[,<span class="number">2</span>],</span><br><span class="line">      labels=powers,cex=cex1,col=<span class="string">&quot;red&quot;</span>);</span><br><span class="line"><span class="comment"># this line corresponds to using an R^2 cut-off of h</span></span><br><span class="line">abline(h=<span class="number">0.85</span>,col=<span class="string">&quot;red&quot;</span>)</span><br><span class="line"><span class="comment"># Mean connectivity as a function of the soft-thresholding power</span></span><br><span class="line">plot(sft$fitIndices[,<span class="number">1</span>], sft$fitIndices[,<span class="number">5</span>],</span><br><span class="line">      xlab=<span class="string">&quot;Soft Threshold (power)&quot;</span>,ylab=<span class="string">&quot;Mean Connectivity&quot;</span>, type=<span class="string">&quot;n&quot;</span>,</span><br><span class="line">      main = paste(<span class="string">&quot;Mean connectivity&quot;</span>))</span><br><span class="line">text(sft$fitIndices[,<span class="number">1</span>], sft$fitIndices[,<span class="number">5</span>], labels=powers, cex=cex1,col=<span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/soft.png" alt="soft"></p><blockquote><p>假如没有合适的阈值，在官方文档中说，如果是unsigned的就选6，如果是signed的就选12.  </p></blockquote><h3 id="2-网络构建"><a href="#2-网络构建" class="headerlink" title="2. 网络构建"></a>2. 网络构建</h3><h4 id="一步法构建"><a href="#一步法构建" class="headerlink" title="一步法构建"></a>一步法构建</h4><p><code>WGCNA</code>提供了<code>blockwiseModules</code>函数可以一步计算出所有的模块</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##一步法网络构建：One-step network construction and module detection</span></span><br><span class="line"><span class="comment"># numericLabels: 返回数字而不是颜色作为模块的名字，后面可以再转换为颜色</span></span><br><span class="line"><span class="comment"># saveTOMs：最耗费时间的计算，存储起来，供后续使用</span></span><br><span class="line"><span class="comment"># mergeCutHeight: 合并模块的阈值，越大模块越</span></span><br><span class="line">net = blockwiseModules(datExpr, power = power, maxBlockSize = <span class="number">6000</span>,</span><br><span class="line">                       TOMType = type, minModuleSize = <span class="number">30</span>,</span><br><span class="line">                       reassignThreshold = <span class="number">0</span>, mergeCutHeight = <span class="number">0.25</span>,</span><br><span class="line">                       numericLabels = <span class="literal">TRUE</span>, pamRespectsDendro = <span class="literal">FALSE</span>,</span><br><span class="line">                       saveTOMs=<span class="literal">TRUE</span>, corType = corType, </span><br><span class="line">                       maxPOutliers=maxPOutliers, loadTOMs=<span class="literal">TRUE</span>,</span><br><span class="line">                       saveTOMFileBase = paste0(exprMat, <span class="string">&quot;.tom&quot;</span>), <span class="comment">## 保存tom矩阵</span></span><br><span class="line">                       verbose = <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>展示最终层级聚类的结果  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 灰色的为未分到模块的基因。</span></span><br><span class="line"><span class="comment"># Convert labels to colors for plotting</span></span><br><span class="line">moduleLabels = net$colors</span><br><span class="line">moduleColors = labels2colors(moduleLabels)</span><br><span class="line"><span class="comment"># Plot the dendrogram and the module colors underneath</span></span><br><span class="line">plotDendroAndColors(net$dendrograms[[<span class="number">1</span>]], moduleColors[net$blockGenes[[<span class="number">1</span>]]],</span><br><span class="line">                    <span class="string">&quot;Module colors&quot;</span>,</span><br><span class="line">                    dendroLabels = <span class="literal">FALSE</span>, hang = <span class="number">0.03</span>,</span><br><span class="line">                    addGuide = <span class="literal">TRUE</span>, guideHang = <span class="number">0.05</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/cluster.png" alt="cluster"></p><h4 id="分步构建"><a href="#分步构建" class="headerlink" title="分步构建"></a>分步构建</h4><p>首先计算邻接矩阵  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calculate the adjacency</span></span><br><span class="line">softPower = <span class="number">6</span>;</span><br><span class="line">adjacency = adjacency(datExpr, power = softPower);</span><br></pre></td></tr></table></figure><p>将邻接矩阵转换成拓扑重叠矩阵  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Turn adjacency into topological overlap</span></span><br><span class="line">TOM = TOMsimilarity(adjacency);</span><br><span class="line">dissTOM = <span class="number">1</span>-TOM</span><br></pre></td></tr></table></figure><p>对TOM进行聚类  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Call the hierarchical clustering function</span></span><br><span class="line">geneTree = hclust(as.dist(dissTOM), method = <span class="string">&quot;average&quot;</span>);</span><br><span class="line"><span class="comment"># Plot the resulting clustering tree (dendrogram)</span></span><br><span class="line">plot(geneTree, xlab=<span class="string">&quot;&quot;</span>, sub=<span class="string">&quot;&quot;</span>, main = <span class="string">&quot;Gene clustering on TOM-based dissimilarity&quot;</span>,</span><br><span class="line">     labels = <span class="literal">FALSE</span>, hang = <span class="number">0.04</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/tree.png" alt="tree"></p><p>上面得到了基因聚类的树，我们对这棵树进行剪枝得到不同的模块  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># We like large modules, so we set the minimum module size relatively high:</span></span><br><span class="line">minModuleSize = <span class="number">30</span>;</span><br><span class="line"><span class="comment"># Module identification using dynamic tree cut:</span></span><br><span class="line">dynamicMods = cutreeDynamic(dendro = geneTree, distM = dissTOM,</span><br><span class="line">                            deepSplit = <span class="number">2</span>, pamRespectsDendro = <span class="literal">FALSE</span>,</span><br><span class="line">                            minClusterSize = minModuleSize);</span><br><span class="line">table(dynamicMods)</span><br></pre></td></tr></table></figure><p>得到模块后我们就可以看到不同的模块表示 </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Convert numeric lables into colors</span></span><br><span class="line">dynamicColors = labels2colors(dynamicMods)</span><br><span class="line">table(dynamicColors)</span><br><span class="line"><span class="comment"># Plot the dendrogram and colors underneath</span></span><br><span class="line">plotDendroAndColors(geneTree, dynamicColors, <span class="string">&quot;Dynamic Tree Cut&quot;</span>,</span><br><span class="line">                    dendroLabels = <span class="literal">FALSE</span>, hang = <span class="number">0.03</span>,</span><br><span class="line">                    addGuide = <span class="literal">TRUE</span>, guideHang = <span class="number">0.05</span>,</span><br><span class="line">                    main = <span class="string">&quot;Gene dendrogram and module colors&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/cuttree.png" alt="cuttree">  </p><p>这样我们就得到了不同的基因表达模块。然而在这时某些模块之间也有可能具有很高的相似性，为了进一步衡量这些模块之间的共表达相似性，我们计算了eigengenes然后计算他们之间的相似性。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MEList = moduleEigengenes(datExpr, colors = dynamicColors)</span><br><span class="line">MEs = MEList$eigengenes</span><br><span class="line"><span class="comment"># Calculate dissimilarity of module eigengenes</span></span><br><span class="line">MEDiss = <span class="number">1</span>-cor(MEs);</span><br><span class="line"><span class="comment"># Cluster module eigengenes</span></span><br><span class="line">METree = hclust(as.dist(MEDiss), method = <span class="string">&quot;average&quot;</span>);</span><br><span class="line"><span class="comment"># Plot the result</span></span><br><span class="line">plot(METree, main = <span class="string">&quot;Clustering of module eigengenes&quot;</span>,</span><br><span class="line">xlab = <span class="string">&quot;&quot;</span>, sub = <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># 在这里选取0.25作为阈值对eigengenes进行合并  </span></span><br><span class="line">MEDissThres = <span class="number">0.25</span></span><br><span class="line"><span class="comment"># Plot the cut line into the dendrogram</span></span><br><span class="line">abline(h=MEDissThres, col = <span class="string">&quot;red&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/eigengenes.png" alt="eigengenes">  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Call an automatic merging function</span></span><br><span class="line">merge = mergeCloseModules(datExpr, dynamicColors, cutHeight = MEDissThres, verbose = <span class="number">3</span>)</span><br><span class="line"><span class="comment"># The merged module colors</span></span><br><span class="line">mergedColors = merge$colors;</span><br><span class="line"><span class="comment"># Eigengenes of the new merged modules:</span></span><br><span class="line">mergedMEs = merge$newMEs;</span><br><span class="line">plotDendroAndColors(geneTree, cbind(dynamicColors, mergedColors),</span><br><span class="line">                    c(<span class="string">&quot;Dynamic Tree Cut&quot;</span>, <span class="string">&quot;Merged dynamic&quot;</span>),</span><br><span class="line">                    dendroLabels = <span class="literal">FALSE</span>, hang = <span class="number">0.03</span>,</span><br><span class="line">                    addGuide = <span class="literal">TRUE</span>, guideHang = <span class="number">0.05</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/mergetree.png" alt="mergetree">  </p><blockquote><p>这个结果其实和一步计算的结果基本一致,得到模块数目相同  </p></blockquote><h3 id="3-模块之间的相关性"><a href="#3-模块之间的相关性" class="headerlink" title="3. 模块之间的相关性"></a>3. 模块之间的相关性</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module eigengene, 可以绘制线图，作为每个模块的基因表达趋势的展示</span></span><br><span class="line">MEs = net$MEs</span><br><span class="line">MEs_col = MEs</span><br><span class="line">colnames(MEs_col) = paste0(<span class="string">&quot;ME&quot;</span>, labels2colors(</span><br><span class="line">  as.numeric(str_replace_all(colnames(MEs),<span class="string">&quot;ME&quot;</span>,<span class="string">&quot;&quot;</span>))))</span><br><span class="line">MEs_col = orderMEs(MEs_col)</span><br><span class="line"><span class="comment"># marDendro/marHeatmap 设置下、左、上、右的边距</span></span><br><span class="line">plotEigengeneNetworks(MEs_col, <span class="string">&quot;Eigengene adjacency heatmap&quot;</span>, </span><br><span class="line">                      marDendro = c(<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>),</span><br><span class="line">                      marHeatmap = c(<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">2</span>), plotDendrograms = <span class="literal">T</span>, </span><br><span class="line">                      xLabelsAngle = <span class="number">90</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/eiheatmap.png" alt="eiheatmap">  </p><h3 id="4-样本和性状的聚类关系"><a href="#4-样本和性状的聚类关系" class="headerlink" title="4. 样本和性状的聚类关系"></a>4. 样本和性状的聚类关系</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nGenes = ncol(datExpr)</span><br><span class="line">nSamples = nrow(datExpr)</span><br><span class="line"><span class="comment">#首先针对样本做个系统聚类</span></span><br><span class="line">datExpr_tree&lt;-hclust(dist(datExpr), method = <span class="string">&quot;average&quot;</span>)</span><br><span class="line">sample_colors &lt;- numbers2colors(as.numeric(factor(datTraits$subtype)), </span><br><span class="line">                                colors = c(<span class="string">&quot;white&quot;</span>,<span class="string">&quot;blue&quot;</span>,<span class="string">&quot;red&quot;</span>,<span class="string">&quot;green&quot;</span>),signed = <span class="literal">FALSE</span>)</span><br><span class="line">par(mar = c(<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>),cex=<span class="number">0.8</span>)</span><br><span class="line">plotDendroAndColors(datExpr_tree, sample_colors,</span><br><span class="line">                      groupLabels = colnames(sample),</span><br><span class="line">                      cex.dendroLabels = <span class="number">0.8</span>,</span><br><span class="line">                      marAll = c(<span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>),</span><br><span class="line">                      cex.rowText = <span class="number">0.01</span>,</span><br><span class="line">                      main = <span class="string">&quot;Sample dendrogram and trait heatmap&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/sample-subtype-cluster.png" alt="sample_subtype">  </p><p>条形图展示  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Luminal = as.data.frame(design[,<span class="number">3</span>]);</span><br><span class="line">names(Luminal) = <span class="string">&quot;Luminal&quot;</span></span><br><span class="line">y=Luminal</span><br><span class="line">GS1=as.numeric(cor(y,datExpr, use=<span class="string">&quot;p&quot;</span>))</span><br><span class="line">GeneSignificance=abs(GS1)</span><br><span class="line"><span class="comment"># Next module significance is defined as average gene significance.</span></span><br><span class="line">ModuleSignificance=tapply(GeneSignificance,</span><br><span class="line">                          moduleColors, mean, na.rm=<span class="literal">T</span>)</span><br><span class="line">sizeGrWindow(<span class="number">8</span>,<span class="number">7</span>)</span><br><span class="line">par(mfrow = c(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"><span class="comment"># 如果模块太多，下面的展示就不友好</span></span><br><span class="line"><span class="comment"># 不过，我们可以自定义出图。</span></span><br><span class="line">plotModuleSignificance(GeneSignificance,moduleColors)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/bar.png" alt="bar">  </p><h3 id="5-可视化基因网络"><a href="#5-可视化基因网络" class="headerlink" title="5. 可视化基因网络"></a>5. 可视化基因网络</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nSelect = <span class="number">400</span></span><br><span class="line"><span class="comment"># For reproducibility, we set the random seed</span></span><br><span class="line">set.seed(<span class="number">10</span>);</span><br><span class="line">select = sample(nGenes, size = nSelect);</span><br><span class="line">selectTOM = dissTOM[select, select];</span><br><span class="line"><span class="comment"># There’s no simple way of restricting a clustering tree to a subset of genes, so we must re-cluster.</span></span><br><span class="line">selectTree = hclust(as.dist(selectTOM), method = <span class="string">&quot;average&quot;</span>)</span><br><span class="line">selectColors = moduleColors[select];</span><br><span class="line">plotDiss = selectTOM^<span class="number">7</span>;</span><br><span class="line">diag(plotDiss) = <span class="literal">NA</span>;</span><br><span class="line">TOMplot(plotDiss, selectTree, selectColors, main = <span class="string">&quot;Network heatmap plot, selected genes&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/geneheatmap.png" alt="geneheatmap">  </p><h3 id="6-模块和性状的关系"><a href="#6-模块和性状的关系" class="headerlink" title="6. 模块和性状的关系"></a>6. 模块和性状的关系</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">nGenes = ncol(datExpr)</span><br><span class="line">nSamples = nrow(datExpr)</span><br><span class="line">design=model.matrix(~<span class="number">0</span>+ datTraits$subtype)</span><br><span class="line">colnames(design)=levels(datTraits$subtype)</span><br><span class="line">moduleColors &lt;- labels2colors(net$colors)</span><br><span class="line"><span class="comment"># Recalculate MEs with color labels</span></span><br><span class="line">MEs0 = moduleEigengenes(datExpr, moduleColors)$eigengenes</span><br><span class="line">MEs = orderMEs(MEs0); <span class="comment">##不同颜色的模块的ME值矩 (样本vs模块)</span></span><br><span class="line">moduleTraitCor = cor(MEs, design , use = <span class="string">&quot;p&quot;</span>);</span><br><span class="line">moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples)</span><br><span class="line"></span><br><span class="line">sizeGrWindow(<span class="number">10</span>,<span class="number">6</span>)</span><br><span class="line"><span class="comment"># Will display correlations and their p-values</span></span><br><span class="line">textMatrix = paste(signif(moduleTraitCor, <span class="number">2</span>), <span class="string">&quot;\n(&quot;</span>,</span><br><span class="line">                   signif(moduleTraitPvalue, <span class="number">1</span>), <span class="string">&quot;)&quot;</span>, sep = <span class="string">&quot;&quot;</span>);</span><br><span class="line">dim(textMatrix) = dim(moduleTraitCor)</span><br><span class="line">par(mar = c(<span class="number">6</span>, <span class="number">8.5</span>, <span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line"><span class="comment"># Display the correlation values within a heatmap plot</span></span><br><span class="line">labeledHeatmap(Matrix = moduleTraitCor,</span><br><span class="line">               xLabels = colnames(design),</span><br><span class="line">               yLabels = names(MEs),</span><br><span class="line">               ySymbols = names(MEs),</span><br><span class="line">               colorLabels = <span class="literal">FALSE</span>,</span><br><span class="line">               colors = greenWhiteRed(<span class="number">50</span>),</span><br><span class="line">               textMatrix = textMatrix,</span><br><span class="line">               setStdMargins = <span class="literal">FALSE</span>,</span><br><span class="line">               cex.text = <span class="number">0.5</span>,</span><br><span class="line">               zlim = c(-<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">               main = paste(<span class="string">&quot;Module-trait relationships&quot;</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/Module-trait-relationships.png" alt="moduletrait">  </p><p>从上图已经可以看到跟乳腺癌分类相关的基因模块了，包括<code>Basal</code> 、<code>Claudin-low</code> 、<code>Luminal</code> 、<code>Non-malignant</code>、<code>unknown</code> 这5类所对应的不同模块的基因列表。可以看到每一种乳腺癌都有跟它强烈相关的模块，可以作为它的表达signature，模块里面的基因可以拿去做下游分析。我们看到<strong>Luminal表型</strong>跟<strong>棕色的模块</strong>相关性高达0.86，而且极其显著的相关，所以值得我们挖掘，这<strong>个模块里面的基因是什么，为什么如此的相关呢？</strong>  </p><h3 id="7-感兴趣模块的具体分析"><a href="#7-感兴趣模块的具体分析" class="headerlink" title="7. 感兴趣模块的具体分析"></a>7. 感兴趣模块的具体分析</h3><p>性状跟模块虽然求出了相关性，可以挑选最相关的那些模块来分析，但是模块本身仍然包含非常多的基因，还需进一步的寻找最重要的基因。所有的模块都可以跟基因算出相关系数，所有的连续型性状也可以跟基因的表达值算出相关系数。 <strong>如果跟性状显著相关基因也跟某个模块显著相关，那么这些基因可能就非常重要</strong>。  </p><h4 id="计算模块与基因的相关性矩阵"><a href="#计算模块与基因的相关性矩阵" class="headerlink" title="计算模块与基因的相关性矩阵"></a>计算模块与基因的相关性矩阵</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># names (colors) of the modules</span></span><br><span class="line">modNames = substring(names(MEs), <span class="number">3</span>)</span><br><span class="line"><span class="comment">## 算出每个模块跟基因的皮尔森相关系数矩阵</span></span><br><span class="line">geneModuleMembership = as.data.frame(cor(datExpr, MEs, use = <span class="string">&quot;p&quot;</span>));</span><br><span class="line">MMPvalue = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership), nSamples));</span><br><span class="line">names(geneModuleMembership) = paste(<span class="string">&quot;MM&quot;</span>, modNames, sep=<span class="string">&quot;&quot;</span>);</span><br><span class="line">names(MMPvalue) = paste(<span class="string">&quot;p.MM&quot;</span>, modNames, sep=<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="计算性状与基因的相关性矩阵"><a href="#计算性状与基因的相关性矩阵" class="headerlink" title="计算性状与基因的相关性矩阵"></a>计算性状与基因的相关性矩阵</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 只有连续型性状才能只有计算</span></span><br><span class="line"><span class="comment">## 这里把是否属于 Luminal 表型这个变量用0,1进行数值化。</span></span><br><span class="line">Luminal = as.data.frame(design[,<span class="number">3</span>]);</span><br><span class="line">names(Luminal) = <span class="string">&quot;Luminal&quot;</span></span><br><span class="line">geneTraitSignificance = as.data.frame(cor(datExpr, Luminal, use = <span class="string">&quot;p&quot;</span>));</span><br><span class="line">GSPvalue = as.data.frame(corPvalueStudent(as.matrix(geneTraitSignificance), nSamples));</span><br><span class="line">names(geneTraitSignificance) = paste(<span class="string">&quot;GS.&quot;</span>, names(Luminal), sep=<span class="string">&quot;&quot;</span>);</span><br><span class="line">names(GSPvalue) = paste(<span class="string">&quot;p.GS.&quot;</span>, names(Luminal), sep=<span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="指定感兴趣模块进行分析"><a href="#指定感兴趣模块进行分析" class="headerlink" title="指定感兴趣模块进行分析"></a>指定感兴趣模块进行分析</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">module = <span class="string">&quot;brown&quot;</span></span><br><span class="line">column = match(module, modNames);</span><br><span class="line">moduleGenes = moduleColors==module;</span><br><span class="line">sizeGrWindow(<span class="number">7</span>, <span class="number">7</span>)</span><br><span class="line">par(mfrow = c(<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">verboseScatterplot(abs(geneModuleMembership[moduleGenes, column]),</span><br><span class="line">                     abs(geneTraitSignificance[moduleGenes, <span class="number">1</span>]),</span><br><span class="line">                     xlab = paste(<span class="string">&quot;Module Membership in&quot;</span>, module, <span class="string">&quot;module&quot;</span>),</span><br><span class="line">                     ylab = <span class="string">&quot;Gene significance for Luminal&quot;</span>,</span><br><span class="line">                     main = paste(<span class="string">&quot;Module membership vs. gene significance\n&quot;</span>),</span><br><span class="line">                     cex.main = <span class="number">1.2</span>, cex.lab = <span class="number">1.2</span>, cex.axis = <span class="number">1.2</span>, col = module)</span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/cor.png" alt="cor">  </p><p>可以看到这些基因不仅仅是跟其对应的模块高度相关，而且是跟其对应的性状高度相关，进一步说明了基因值得深度探究。  </p><h3 id="8-提取指定模块的基因名"><a href="#8-提取指定模块的基因名" class="headerlink" title="8. 提取指定模块的基因名"></a>8. 提取指定模块的基因名</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Select module</span></span><br><span class="line">module = <span class="string">&quot;brown&quot;</span>;</span><br><span class="line"><span class="comment"># Select module probes</span></span><br><span class="line">probes = colnames(datExpr) <span class="comment">## 我们例子里面的probe就是基因</span></span><br><span class="line">inModule = (moduleColors==module);</span><br><span class="line">modProbes = probes[inModule]; </span><br><span class="line">head(modProbes)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果使用WGCNA包自带的热图就很丑。</span></span><br><span class="line">which.module=<span class="string">&quot;brown&quot;</span>;</span><br><span class="line">dat=datExpr[,moduleColors==which.module ] </span><br><span class="line">plotMat(t(scale(dat)),nrgcols=<span class="number">30</span>,rlabels=<span class="literal">T</span>,</span><br><span class="line">        clabels=<span class="literal">T</span>,rcols=which.module,</span><br><span class="line">        title=which.module )</span><br><span class="line">datExpr[<span class="number">1</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">dat=t(datExpr[,moduleColors==which.module ] )</span><br><span class="line"><span class="keyword">library</span>(pheatmap)</span><br><span class="line">pheatmap(dat ,show_colnames =<span class="literal">F</span>,show_rownames = <span class="literal">F</span>) <span class="comment">#对那些提取出来的1000个基因所在的每一行取出，组合起来为一个新的表达矩阵</span></span><br><span class="line">n=t(scale(t(log(dat+<span class="number">1</span>)))) <span class="comment"># &#x27;scale&#x27;可以对log-ratio数值进行归一化</span></span><br><span class="line">n[n&gt;<span class="number">2</span>]=<span class="number">2</span> </span><br><span class="line">n[n&lt; -<span class="number">2</span>]= -<span class="number">2</span></span><br><span class="line">n[<span class="number">1</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">4</span>]</span><br><span class="line">pheatmap(n,show_colnames =<span class="literal">F</span>,show_rownames = <span class="literal">F</span>)</span><br><span class="line">group_list=datTraits$subtype</span><br><span class="line">ac=data.frame(g=group_list)</span><br><span class="line">rownames(ac)=colnames(n) </span><br><span class="line">pheatmap(n,show_colnames =<span class="literal">F</span>,show_rownames = <span class="literal">F</span>,</span><br><span class="line">         annotation_col=ac )</span><br><span class="line"><span class="comment"># 可以很清晰的看到，所有的形状相关的模块基因</span></span><br><span class="line"><span class="comment"># 其实未必就不是差异表达基因。</span></span><br></pre></td></tr></table></figure><p><img src="/images/wgcna/heatmap.png" alt="heatmap">  </p><p>有了基因信息，后边就可以进行GO/KEGG等功能数据库的注释  </p><h3 id="9-模块导出"><a href="#9-模块导出" class="headerlink" title="9. 模块导出"></a>9. 模块导出</h3><p>主要模块里面的基因直接的相互作用关系信息可以导出到<strong>cytoscape</strong>,<strong>VisANT</strong>等网络可视化软件。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Select module</span></span><br><span class="line">module = <span class="string">&quot;brown&quot;</span>;</span><br><span class="line"><span class="comment"># Select module probes</span></span><br><span class="line">probes = colnames(datExpr) <span class="comment">## 我们例子里面的probe就是基因名</span></span><br><span class="line">inModule = (moduleColors==module);</span><br><span class="line">modProbes = probes[inModule]; </span><br><span class="line"><span class="comment">## 也是提取指定模块的基因名</span></span><br><span class="line"><span class="comment"># Select the corresponding Topological Overlap</span></span><br><span class="line">modTOM = TOM[inModule, inModule];</span><br><span class="line">dimnames(modTOM) = list(modProbes, modProbes)</span><br></pre></td></tr></table></figure><p>导出到<strong>cytoscape</strong>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cyt = exportNetworkToCytoscape(</span><br><span class="line">      modTOM,</span><br><span class="line">     edgeFile = paste(<span class="string">&quot;CytoscapeInput-edges-&quot;</span>, paste(module, collapse=<span class="string">&quot;-&quot;</span>), <span class="string">&quot;.txt&quot;</span>, sep=<span class="string">&quot;&quot;</span>),</span><br><span class="line">     nodeFile = paste(<span class="string">&quot;CytoscapeInput-nodes-&quot;</span>, paste(module, collapse=<span class="string">&quot;-&quot;</span>), <span class="string">&quot;.txt&quot;</span>, sep=<span class="string">&quot;&quot;</span>),</span><br><span class="line">     weighted = <span class="literal">TRUE</span>,</span><br><span class="line">     threshold = <span class="number">0.02</span>,</span><br><span class="line">     nodeNames = modProbes, </span><br><span class="line">     nodeAttr = moduleColors[inModule]);</span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ol><li><a href="https://www.jianshu.com/p/e9cc3f43441d">WGCNA分析，简单全面的最新教程</a>  </li><li><a href="https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/">https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/</a>  </li></ol>]]></content>
      
      
      <categories>
          
          <category> WGCNA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WGCNA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Orchestrating Single-Cell Analysis (二)</title>
      <link href="2020/08/12/single-cell-i/"/>
      <url>2020/08/12/single-cell-i/</url>
      
        <content type="html"><![CDATA[<p>scRNA-seq analysis workflow</p><a id="more"></a><p><img src="/images/single-cell-i/Workflow.png" alt="workflow">  </p><p>这是一个经典的单细胞分析流程，主要分为以下几个步骤：  </p><h2 id="实验设计"><a href="#实验设计" class="headerlink" title="实验设计"></a>实验设计</h2><p>在正式分析之前，关于实验问题的探讨是很有必要的，<strong>最重要的一个就是技术的选择：</strong>  </p><ul><li><strong>Droplet-based</strong>: 10X Genomics, inDrop, Drop-seq</li><li>Plate-based with unique molecular identifiers (<strong>UMIs</strong>): CEL-seq, MARS-seq</li><li>Plate-based with <strong>reads</strong>: Smart-seq2</li><li>Other: sci-RNA-seq, Seq-Well  </li></ul><p>每种方法都有优劣（Mereu et al. 2019; Ziegenhain et al. 2017)，目前以10X为代表的droplet-based方法由于高通量和低细胞成本成为了约定俗成的技术；Plate-based方法可以捕获其他的一些表型信息（如细胞形态），另外可以根据实验目的进行调整，灵活性比较好；Read-based方法可以覆盖全转录本，在分析可变剪切、外显子突变等方面很有用；UMI-based方法可以减轻PCR扩增偏差。  </p><p><strong>下一个问题就是：到底要捕获多少细胞？测序要测多深？</strong>  </p><p>答案很清晰：  As much as you can afford to spend.  </p><p>再补充一下这个答案就是：想要发现罕见细胞类群，就要多获得细胞；想要探索潜在的微小差异，就要加大测序深度。目前常用的droplet-based仪器可以捕获1万到10万细胞，测序深度是每个细胞1000到10000 UMIs，在经济条件一定的前提下，它们之间一般是成反比。另外它还要权衡高细胞捕获通量和影响捕获效率的“双细胞比例”。  </p><p><strong>实验设计和常规转录组类似</strong>，也是要考虑一个实验条件下多个生物重复，而且实验条件最好不要混杂批次。需要注意的是：生物重复不是指的单个细胞，而是指的提供细胞的供体（donors）或者细胞培养体系（cultures）   </p><h2 id="获得表达矩阵"><a href="#获得表达矩阵" class="headerlink" title="获得表达矩阵"></a>获得表达矩阵</h2><p>和常规转录组一样，单细胞转录组也是需要得到表达矩阵，才能进行下游分析。表达矩阵包含的信息就是：每个细胞中比对到每个基因的UMIs或者reads数。有一点需要注意：<strong>它的定量方法和具体的实验技术相关</strong>  </p><ul><li>10X的数据：使用<code>CellRanger</code> 软件，基于STAR比对到参考基因组，然后统计每个基因的UMIs数量  </li><li>Pseudo-alignment方法（如<code>alevin</code>）：不需要比对参考基因组，节省时间、内存  </li><li>对于一些高度multiplexed的方法：可以使用<code>scPipe</code> 包：提供了一套综合的分析流程，利用<code>Rsubread</code>比对，然后统计每个基因的UMIs数量  </li><li>CEL-seq、CEL-seq2数据：<code>scruff</code> 包可以专门分析  </li><li>read-based方法：可以使用常规bulk 转录组定量的流程（比如smartseq2就可以用hisat2+featureCounts）</li><li>任何包含spike-in转录本的数据：spike-in序列都要在比对、定量之前加到参考基因组中  </li></ul><blockquote><p>multiplexed：翻译叫做”多路复用“，即：large numbers of libraries to be pooled and sequenced simultaneously during a single run，可以节省成本和时间  </p></blockquote><p>定量结束后，一般是先导入表达矩阵然后创建一个<code>SingleCellExperiment</code>对象（例如：<code>read.table() + SingleCellExperiment()</code>）。除此以外，还有一些特定的文件格式需要用特定的包，比如DropletUtils可以分析10X数据，<code>tximport/tximeta</code> 可以分析pseudo-alignment数据  </p><p><strong>需要注意的点</strong>：  </p><ul><li>一些定量工具会统计表达矩阵中的reads比对率，会存在一些未必对的情况。尽管这些信息可以用作质控，但这些数值如果被误认为是表达量信息，那么就会干扰下游分析。因此在进行下游分析之前，这部分信息可以去掉或者保存在<code>colData</code>中</li><li>如果分析的是人类数据并且加入了ERCC，<strong>我们很多时候直接用<code>^ERCC</code>在行名中进行正则匹配，但是这时要小心</strong>，因为<strong>ERCC基因家族在人类基因组注释中确实存在</strong>，很有可能将真的基因作为外源转录本进行分析。这个问题可以通过将表达矩阵的行名设置为Ensembl,或Entrez来解决   </li></ul><h2 id="数据处理与下游分析"><a href="#数据处理与下游分析" class="headerlink" title="数据处理与下游分析"></a>数据处理与下游分析</h2><ol><li><strong>quality control</strong>：去掉低质量细胞。这些细胞可能在建库环节被破坏，可能没有被有效捕获（这就是所谓的“dropout”）。一般会统计：每个细胞的全部count数、spike-in或线粒体reads比例、检测到基因的数量  </li><li><strong>normalized expression value</strong>：为了减小细胞文库的偏差（可能由于细胞捕获效率不同、测序深度的差异而造成文库大小差异），把细胞们放在同一起跑线上，才能进行下面的细胞相似性比较，后面再根据相似性进行细胞分群。一般是基于log转换（当然有的函数也涉及了一些size factor的计算），从而对均值-方差进行校正  </li><li><strong>feature selection</strong>：一般选取高变异基因（Highly Variable Genes）进行后续分析，使用HVGs不用全部基因的原因一是为了减少计算量，二是减少不感兴趣基因（比如在细胞之间没什么差异）对分析产生的噪音  </li><li><strong>dimensionality reduction</strong>：让数据更“紧凑”，一般是线性降维PCA+非线性降维tSNE/umap。PCA一般是先获得初步的低维数据（可能会挑出几十个主成分），然后传给t-SNE进一步压缩，进行可视化  </li><li><strong>clustering</strong>：根据细胞归一化后的表达量相似性分成组，然后根据每个组marker基因（可理解为这一群细胞的标志性基因）的差异表达对分群进行生物学定义  </li></ol><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>用<code>scRNAseq</code>包的droplet-based的视网膜数据【Macosko et al. (2015)】进行演示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(scRNAseq)</span><br><span class="line">sce &lt;- MacoskoRetinaData()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Quality control.</span></span><br><span class="line"><span class="keyword">library</span>(scater)</span><br><span class="line">is.mito &lt;- grepl(<span class="string">&quot;^MT-&quot;</span>, rownames(sce))</span><br><span class="line">qcstats &lt;- perCellQCMetrics(sce, subsets=list(Mito=is.mito))</span><br><span class="line">filtered &lt;- quickPerCellQC(qcstats, percent_subsets=<span class="string">&quot;subsets_Mito_percent&quot;</span>)</span><br><span class="line">sce &lt;- sce[, !filtered$discard]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Normalization.</span></span><br><span class="line">sce &lt;- logNormCounts(sce)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Feature selection.</span></span><br><span class="line"><span class="keyword">library</span>(scran)</span><br><span class="line">dec &lt;- modelGeneVar(sce)</span><br><span class="line">hvg &lt;- getTopHVGs(dec, prop=<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Dimensionality reduction.</span></span><br><span class="line">set.seed(<span class="number">1234</span>)</span><br><span class="line">sce &lt;- runPCA(sce, ncomponents=<span class="number">25</span>, subset_row=hvg)</span><br><span class="line">sce &lt;- runUMAP(sce, dimred = <span class="string">&#x27;PCA&#x27;</span>, external_neighbors=<span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Clustering.</span></span><br><span class="line">g &lt;- buildSNNGraph(sce, use.dimred = <span class="string">&#x27;PCA&#x27;</span>)</span><br><span class="line">colLabels(sce) &lt;- factor(igraph::cluster_louvain(g)$membership)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Visualization.</span></span><br><span class="line">plotUMAP(sce, colour_by=<span class="string">&quot;label&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/single-cell-i/quick-start-umap-1.png" alt="umap">  </p><hr><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><p><a href="https://osca.bioconductor.org/">Orchestrating Single-Cell Analysis with Bioconductor</a>  </p>]]></content>
      
      
      <categories>
          
          <category> SingleCell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SingleCell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scRNA的细胞质控</title>
      <link href="2020/08/12/quality-control/"/>
      <url>2020/08/12/quality-control/</url>
      
        <content type="html"><![CDATA[<p>Quality Control  </p><a id="more"></a>    <h2 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h2><p>scRNA-seq数据的低质量文库可能来自于：细胞分选环节的破坏、文库制备失误（没有足够的反转录或PCR次数）… 表现在：细胞总表达量低、基本没有表达的基因、高线粒体或spike-in占比。  </p><p>这些低质量的库是有问题的，因为它们可能在下游分析中导致误导的结果 。  </p><ul><li><strong>聚类问题：</strong> 低质量的细胞会聚集成一群，对结果的解释造成干扰，因为从这群细胞中得不到什么有用的信息，但是它的确也是一群。这种现象产生的原因有可能是：细胞破坏以后，线粒体或核RNAs占比升高。  最差的情况就是：不同类型的低质量细胞，也能聚在一起，因为相比于固有的生物差异，更相似的低质量让它们相依相偎。除此以外，本来非常小的细胞文库也能聚成一群，因为log转换后它们的平均表达量会发生很大的变化(A. Lun <a href="https://osca.bioconductor.org/quality-control.html#ref-lun2018overcoming">2018</a>).</li><li><strong>方差估计或主成分分析</strong>:首先在PCA分析时，低质量和高质量之间的差异相比于生物学差异会体现更明显，占据主要的成分，减少降维结果的可靠性。另外，某个基因可能在两个细胞之间没什么表达差异，但是如果所处环境差异很大（一个细胞质量很低，另一个细胞质量正常），那么在差异估算过程中，就会把这个差异也会被当成差异表达基因。例如：一个低质量细胞文库的总表达量非常低（接近0），但恰巧还存在一个基因有表达量，那么这个基因的表达量在后续的文库归一化过程中就会尤为突出  </li><li><strong>奇怪的转录本上调</strong>：实验难免会混入外源的污染转录本，但这个量很少并且在所有细胞中都应该是差不多水平的。但如果某个细胞质量低，文库小，那么在校正文库差异过程中，其中的污染转录本表达量就会“突飞猛进”，看起来是一些明显上调的“奇怪基因”。实际上，这些奇怪的基因依然在其他细胞中存在，并且真实的表达量差不多，并且是不应该占据主体地位的。  </li></ul><p>为了最大程度避免上面一种或多种情况的发生，应该在归一化之前去掉这些低质量的细胞，这个过程就是**细胞的质控 **  </p><p>使用A. T. L. Lun et al. (2017)的小型scRNA数据（未进行QC）进行测试  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#--- loading ---#</span></span><br><span class="line"><span class="keyword">library</span>(scRNAseq)</span><br><span class="line">sce.416b &lt;- LunSpikeInData(which=<span class="string">&quot;416b&quot;</span>) </span><br><span class="line">table(sce.416b$block)</span><br><span class="line"><span class="number">20160113</span> <span class="number">20160325</span> </span><br><span class="line">      <span class="number">96</span>       <span class="number">96</span> </span><br><span class="line">sce.416b$block &lt;- factor(sce.416b$block)</span><br><span class="line">sce.416b</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## class: SingleCellExperiment </span></span><br><span class="line"><span class="comment">## dim: 46604 192 </span></span><br><span class="line"><span class="comment">## metadata(0):</span></span><br><span class="line"><span class="comment">## assays(1): counts</span></span><br><span class="line"><span class="comment">## rownames(46604): ENSMUSG00000102693 ENSMUSG00000064842 ...</span></span><br><span class="line"><span class="comment">##   ENSMUSG00000095742 CBFB-MYH11-mcherry</span></span><br><span class="line"><span class="comment">## rowData names(1): Length</span></span><br><span class="line"><span class="comment">## colnames(192): SLX-9555.N701_S502.C89V9ANXX.s_1.r_1</span></span><br><span class="line"><span class="comment">##   SLX-9555.N701_S503.C89V9ANXX.s_1.r_1 ...</span></span><br><span class="line"><span class="comment">##   SLX-11312.N712_S508.H5H5YBBXX.s_8.r_1</span></span><br><span class="line"><span class="comment">##   SLX-11312.N712_S517.H5H5YBBXX.s_8.r_1</span></span><br><span class="line"><span class="comment">## colData names(9): Source Name cell line ... spike-in addition block</span></span><br><span class="line"><span class="comment">## reducedDimNames(0):</span></span><br><span class="line"><span class="comment">## altExpNames(2): ERCC SIRV</span></span><br></pre></td></tr></table></figure><h2 id="QC指标的选择"><a href="#QC指标的选择" class="headerlink" title="QC指标的选择"></a>QC指标的选择</h2><p>鉴定细胞是否是低质量的，需要用到几个指标。虽然下面这些指标是使用SMART-seq2数据进行展示的，但依然适用于UMI数据（比如MARS-seq、droplet-based技术）  </p><ul><li><strong>文库大小（library size）</strong> ：指的是每个细胞中所有基因的表达量之和。细胞的文库如果很小，说明在文库制备过程中存在RNA的损失，要么是由于细胞裂解，要么是cDNA捕获不足导致后续的扩增量少  </li><li><strong>每个细胞中表达基因的数目（number of expressed features in each cell）</strong>：指的是细胞中非0表达量的基因数量。如果细胞中基本没有基因表达，很可能是转录本捕获失败  </li><li><strong>比对到spike-in转录本的reads比例（proportion of reads mapped to spike-in transcripts）</strong>：计算方法是：<code>spike-in counts / all features (including spike-ins) for each cell</code>。每个细胞都应该加入等量的外源转录本（spike-in），如果哪个细胞的spike-in比例提高了，说明它的内源RNA含量减少（比如在细胞分选阶段出现的细胞裂解或者RNA降解）  </li><li><strong>比对到线粒体基因组的reads比例（proportion of reads mapped to genes in the mitochondrial genome）</strong> ：如果没有spike-in，那么使用线粒体指标也是能说明问题的(Islam et al. 2014; Ilicic et al. 2016)。比对到线粒体的reads增多，说明细胞质中的RNA减少，可能存在细胞穿孔的情况，而这个孔的大小，可能只是将细胞质中存在的mRNA流出去，但线粒体的体积超过了孔的大小，所以还留在了细胞中，造成一定程度的富集，导致线粒体RNA占比升高。  </li></ul><p>对于每个细胞，可以用scater包的<code>perCellQCMetrics()</code>函数进行计算，其中<code>sum</code>这一列表示每个细胞的文库大小；<code>detected</code>这一列表示检测到的基因数量；<code>subsets_Mito_percent</code>这一列表示比对到线粒体基因组的reads占比；<code>altexps_ERCC_percent</code>表示比对到ERCC spike-in的reads占比  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Retrieving the mitochondrial transcripts using genomic locations included in</span></span><br><span class="line"><span class="comment"># the row-level annotation for the SingleCellExperiment.</span></span><br><span class="line">location &lt;- rowRanges(sce.416b)</span><br><span class="line">is.mito &lt;- any(seqnames(location)==<span class="string">&quot;MT&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ALTERNATIVELY: using resources in AnnotationHub to retrieve chromosomal</span></span><br><span class="line"><span class="comment"># locations given the Ensembl IDs; this should yield the same result.</span></span><br><span class="line"><span class="keyword">library</span>(AnnotationHub)</span><br><span class="line">ens.mm.v97 &lt;- AnnotationHub()[[<span class="string">&quot;AH73905&quot;</span>]]</span><br><span class="line">chr.loc &lt;- mapIds(ens.mm.v97, keys=rownames(sce.416b),</span><br><span class="line">    keytype=<span class="string">&quot;GENEID&quot;</span>, column=<span class="string">&quot;SEQNAME&quot;</span>)</span><br><span class="line">is.mito.alt &lt;- which(chr.loc==<span class="string">&quot;MT&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(scater)</span><br><span class="line">df &lt;- perCellQCMetrics(sce.416b, subsets=list(Mito=is.mito))</span><br><span class="line">df</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## DataFrame with 192 rows and 16 columns</span></span><br><span class="line"><span class="comment">##           sum  detected percent_top_50 percent_top_100 percent_top_200</span></span><br><span class="line"><span class="comment">##     &lt;integer&gt; &lt;integer&gt;      &lt;numeric&gt;       &lt;numeric&gt;       &lt;numeric&gt;</span></span><br><span class="line"><span class="comment">## 1      865936      7618        26.7218         32.2773         39.7208</span></span><br><span class="line"><span class="comment">## 2     1076277      7521        29.4043         35.0354         42.2581</span></span><br><span class="line"><span class="comment">## 3     1180138      8306        27.3454         32.4770         39.3296</span></span><br><span class="line"><span class="comment">## 4     1342593      8143        35.8092         40.2666         46.2460</span></span><br><span class="line"><span class="comment">## 5     1668311      7154        34.1198         39.0901         45.6660</span></span><br><span class="line"><span class="comment">## ...       ...       ...            ...             ...             ...</span></span><br><span class="line"><span class="comment">## 188    776622      8174        45.9362         49.7010         54.6101</span></span><br><span class="line"><span class="comment">## 189   1299950      8956        38.0829         42.8930         49.0622</span></span><br><span class="line"><span class="comment">## 190   1800696      9530        30.6675         35.5839         41.8550</span></span><br><span class="line"><span class="comment">## 191     46731      6649        32.2998         37.9149         44.5999</span></span><br><span class="line"><span class="comment">## 192   1866692     10964        26.6632         31.2584         37.5608</span></span><br><span class="line"><span class="comment">##     percent_top_500 subsets_Mito_sum subsets_Mito_detected subsets_Mito_percent</span></span><br><span class="line"><span class="comment">##           &lt;numeric&gt;        &lt;integer&gt;             &lt;integer&gt;            &lt;numeric&gt;</span></span><br><span class="line"><span class="comment">## 1           52.9038            78790                    20              9.09882</span></span><br><span class="line"><span class="comment">## 2           55.7454            98613                    20              9.16242</span></span><br><span class="line"><span class="comment">## 3           51.9337           100341                    19              8.50248</span></span><br><span class="line"><span class="comment">## 4           57.1210           104882                    20              7.81190</span></span><br><span class="line"><span class="comment">## 5           58.2004           129559                    22              7.76588</span></span><br><span class="line"><span class="comment">## ...             ...              ...                   ...                  ...</span></span><br><span class="line"><span class="comment">## 188         64.4249            48126                    20              6.19684</span></span><br><span class="line"><span class="comment">## 189         60.6675           112225                    25              8.63302</span></span><br><span class="line"><span class="comment">## 190         53.6781           135693                    23              7.53559</span></span><br><span class="line"><span class="comment">## 191         56.5235             3505                    16              7.50037</span></span><br><span class="line"><span class="comment">## 192         48.9489           150375                    29              8.05569</span></span><br><span class="line"><span class="comment">##     altexps_ERCC_sum altexps_ERCC_detected altexps_ERCC_percent</span></span><br><span class="line"><span class="comment">##            &lt;integer&gt;             &lt;integer&gt;            &lt;numeric&gt;</span></span><br><span class="line"><span class="comment">## 1              65278                    39              6.80658</span></span><br><span class="line"><span class="comment">## 2              74748                    40              6.28030</span></span><br><span class="line"><span class="comment">## 3              60878                    42              4.78949</span></span><br><span class="line"><span class="comment">## 4              60073                    42              4.18567</span></span><br><span class="line"><span class="comment">## 5             136810                    44              7.28887</span></span><br><span class="line"><span class="comment">## ...              ...                   ...                  ...</span></span><br><span class="line"><span class="comment">## 188            61575                    39              7.17620</span></span><br><span class="line"><span class="comment">## 189            94982                    41              6.65764</span></span><br><span class="line"><span class="comment">## 190           113707                    40              5.81467</span></span><br><span class="line"><span class="comment">## 191             7580                    44             13.48898</span></span><br><span class="line"><span class="comment">## 192            48664                    39              2.51930</span></span><br><span class="line"><span class="comment">##     altexps_SIRV_sum altexps_SIRV_detected altexps_SIRV_percent     total</span></span><br><span class="line"><span class="comment">##            &lt;integer&gt;             &lt;integer&gt;            &lt;numeric&gt; &lt;integer&gt;</span></span><br><span class="line"><span class="comment">## 1              27828                     7              2.90165    959042</span></span><br><span class="line"><span class="comment">## 2              39173                     7              3.29130   1190198</span></span><br><span class="line"><span class="comment">## 3              30058                     7              2.36477   1271074</span></span><br><span class="line"><span class="comment">## 4              32542                     7              2.26741   1435208</span></span><br><span class="line"><span class="comment">## 5              71850                     7              3.82798   1876971</span></span><br><span class="line"><span class="comment">## ...              ...                   ...                  ...       ...</span></span><br><span class="line"><span class="comment">## 188            19848                     7             2.313165    858045</span></span><br><span class="line"><span class="comment">## 189            31729                     7             2.224004   1426661</span></span><br><span class="line"><span class="comment">## 190            41116                     7             2.102562   1955519</span></span><br><span class="line"><span class="comment">## 191             1883                     7             3.350892     56194</span></span><br><span class="line"><span class="comment">## 192            16289                     7             0.843271   1931645</span></span><br></pre></td></tr></table></figure><p>另外，还可以使用<code>addPerCellQC()</code>，它会把每个细胞的QC指标加到<code>SingleCellExperiment</code>对象的<code>colData</code>中，方便后面调取  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce.416b &lt;- addPerCellQC(sce.416b, subsets=list(Mito=is.mito))</span><br><span class="line">colnames(colData(sce.416b))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  [1] &quot;Source Name&quot;              &quot;cell line&quot;               </span></span><br><span class="line"><span class="comment">##  [3] &quot;cell type&quot;                &quot;single cell well quality&quot;</span></span><br><span class="line"><span class="comment">##  [5] &quot;genotype&quot;                 &quot;phenotype&quot;               </span></span><br><span class="line"><span class="comment">##  [7] &quot;strain&quot;                   &quot;spike-in addition&quot;       </span></span><br><span class="line"><span class="comment">##  [9] &quot;block&quot;                    &quot;sum&quot;                     </span></span><br><span class="line"><span class="comment">## [11] &quot;detected&quot;                 &quot;percent_top_50&quot;          </span></span><br><span class="line"><span class="comment">## [13] &quot;percent_top_100&quot;          &quot;percent_top_200&quot;         </span></span><br><span class="line"><span class="comment">## [15] &quot;percent_top_500&quot;          &quot;subsets_Mito_sum&quot;        </span></span><br><span class="line"><span class="comment">## [17] &quot;subsets_Mito_detected&quot;    &quot;subsets_Mito_percent&quot;    </span></span><br><span class="line"><span class="comment">## [19] &quot;altexps_ERCC_sum&quot;         &quot;altexps_ERCC_detected&quot;   </span></span><br><span class="line"><span class="comment">## [21] &quot;altexps_ERCC_percent&quot;     &quot;altexps_SIRV_sum&quot;        </span></span><br><span class="line"><span class="comment">## [23] &quot;altexps_SIRV_detected&quot;    &quot;altexps_SIRV_percent&quot;    </span></span><br><span class="line"><span class="comment">## [25] &quot;total&quot;</span></span><br></pre></td></tr></table></figure><p>当然，这里做QC统计的前提假设是：每个细胞的qc指标都是独立于生物学状态的。也就是说，qc指标不会那么智能地识别细胞类型然后进行判断。它会认为（如文库太小、高线粒体占比）都是由技术误差引起的，而非生物因素。但是有一个问题，<strong>如果某些细胞类型本身的RNA含量就很低，或者它们本来就含有很多的线粒体转录本呢？再根据这个指标进行过滤，会不会损失一些细胞类型呢？</strong>  </p><h2 id="识别低质量细胞"><a href="#识别低质量细胞" class="headerlink" title="识别低质量细胞"></a>识别低质量细胞</h2><h3 id="1-使用固定的阈值"><a href="#1-使用固定的阈值" class="headerlink" title="1. 使用固定的阈值"></a>1. 使用固定的阈值</h3><p>识别低质量细胞最简单方法是在QC度量上应用阈值。例如设定文库低于10万reads的细胞是低质量的，或者表达基因数量少于5000个，spike-in或线粒体占比高于10%。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">qc.lib &lt;- df$sum &lt; <span class="number">1e5</span></span><br><span class="line">qc.nexprs &lt;- df$detected &lt; <span class="number">5e3</span></span><br><span class="line">qc.spike &lt;- df$altexps_ERCC_percent &gt; <span class="number">10</span></span><br><span class="line">qc.mito &lt;- df$subsets_Mito_percent &gt; <span class="number">10</span></span><br><span class="line">discard &lt;- qc.lib | qc.nexprs | qc.spike | qc.mito</span><br><span class="line"></span><br><span class="line"><span class="comment"># Summarize the number of cells removed for each reason.</span></span><br><span class="line">DataFrame(LibSize=sum(qc.lib), NExprs=sum(qc.nexprs),</span><br><span class="line">    SpikeProp=sum(qc.spike), MitoProp=sum(qc.mito), Total=sum(discard))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## DataFrame with 1 row and 5 columns</span></span><br><span class="line"><span class="comment">##     LibSize    NExprs SpikeProp  MitoProp     Total</span></span><br><span class="line"><span class="comment">##   &lt;integer&gt; &lt;integer&gt; &lt;integer&gt; &lt;integer&gt; &lt;integer&gt;</span></span><br><span class="line"><span class="comment">## 1         3         0        19        14        33</span></span><br></pre></td></tr></table></figure><p>虽然看起来简单，但使用这种方法需要丰富的经验，了解实验设计和细胞状态；另外即使使用同一种文库制备方法，但由于细胞捕获效率和测序深度的不同，这个阈值依然需要适时调整。因此对于研究人员要求很高。  </p><h3 id="2-使用相对阈值"><a href="#2-使用相对阈值" class="headerlink" title="2. 使用相对阈值"></a>2. 使用相对阈值</h3><h4 id="鉴定离群点"><a href="#鉴定离群点" class="headerlink" title="鉴定离群点"></a>鉴定离群点</h4><p>为了获得相对阈值，先假设大部分细胞都是高质量的，然后去找离群点作为低质量。那么按照什么方法找离群点呢？常用的一个函数<code>isOutlier</code>使用的是MAD指标（绝对中位差来估计方差,先计算出数据与它们的中位数之间的偏差，然后这些偏差的绝对值的中位数就是MAD，median absolute deviation）。如果<strong>超过中位数3倍MAD的值就是离群值</strong>。  </p><p>使用<code>isOutlier</code>时，如果要相减（例如：<code>df$sum - 3* MAD</code>），就用<code>type=&quot;lower&quot;</code>，此时一般还要做个log转换<code>log=TRUE</code> ，保证得到的结果不是负数  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qc.lib2 &lt;- isOutlier(df$sum, log=<span class="literal">TRUE</span>, type=<span class="string">&quot;lower&quot;</span>)</span><br><span class="line">qc.nexprs2 &lt;- isOutlier(df$detected, log=<span class="literal">TRUE</span>, type=<span class="string">&quot;lower&quot;</span>)</span><br><span class="line">qc.spike2 &lt;- isOutlier(df$altexps_ERCC_percent, type=<span class="string">&quot;higher&quot;</span>)</span><br><span class="line">qc.mito2 &lt;- isOutlier(df$subsets_Mito_percent, type=<span class="string">&quot;higher&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">attr(qc.lib2, <span class="string">&quot;thresholds&quot;</span>)</span><br><span class="line">   lower   higher </span><br><span class="line"><span class="number">434082.9</span>      <span class="literal">Inf</span> </span><br><span class="line">attr(qc.nexprs2, <span class="string">&quot;thresholds&quot;</span>)</span><br><span class="line">   lower   higher </span><br><span class="line"><span class="number">5231.468</span>      <span class="literal">Inf</span> </span><br><span class="line">attr(qc.spike2, <span class="string">&quot;thresholds&quot;</span>)</span><br><span class="line">   lower   higher </span><br><span class="line">    -<span class="literal">Inf</span> <span class="number">14.15371</span> </span><br><span class="line">attr(qc.mito2, <span class="string">&quot;thresholds&quot;</span>)</span><br><span class="line">   lower   higher </span><br><span class="line">    -<span class="literal">Inf</span> <span class="number">11.91734</span> </span><br></pre></td></tr></table></figure><p>用相对阈值过滤的细胞数量统计：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">discard2 &lt;- qc.lib2 | qc.nexprs2 | qc.spike2 | qc.mito2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Summarize the number of cells removed for each reason.</span></span><br><span class="line">DataFrame(LibSize=sum(qc.lib2), NExprs=sum(qc.nexprs2),</span><br><span class="line">    SpikeProp=sum(qc.spike2), MitoProp=sum(qc.mito2), Total=sum(discard2))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## DataFrame with 1 row and 5 columns</span></span><br><span class="line"><span class="comment">##     LibSize    NExprs SpikeProp  MitoProp     Total</span></span><br><span class="line"><span class="comment">##   &lt;integer&gt; &lt;integer&gt; &lt;integer&gt; &lt;integer&gt; &lt;integer&gt;</span></span><br><span class="line"><span class="comment">## 1         4         0         1         2         6</span></span><br></pre></td></tr></table></figure><p><strong>除此以外，还有一种更快的计算方法，一步整合了上面的操作：</strong>   </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reasons &lt;- quickPerCellQC(df, percent_subsets=c(<span class="string">&quot;subsets_Mito_percent&quot;</span>,</span><br><span class="line">    <span class="string">&quot;altexps_ERCC_percent&quot;</span>))</span><br><span class="line">colSums(as.matrix(reasons))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##              low_lib_size            low_n_features high_subsets_Mito_percent </span></span><br><span class="line"><span class="comment">##                         4                         0                         2 </span></span><br><span class="line"><span class="comment">## high_altexps_ERCC_percent                   discard </span></span><br><span class="line"><span class="comment">##                         1                         6</span></span><br></pre></td></tr></table></figure><p>使用”相对“的阈值一个好处就是可以根据测序深度、cDNA捕获效率、线粒体含量等等进行阈值的调整，在经验不是足够丰富的时候，可以辅助判断。但仍需要注意的是，<strong>使用相对阈值是有前提的，那就是：认为大部分细胞都是高质量的</strong>  </p><h3 id="离群点检测的假设"><a href="#离群点检测的假设" class="headerlink" title="离群点检测的假设"></a>离群点检测的假设</h3><ul><li>离群点的检测的假设是<strong>大部分细胞的质量都不错</strong>。这一点假设可以通过实验去验证（比如肉眼检查细胞完整性）。<strong>但当大部分细胞质量都很低，使用相对阈值结果就对大量的低质量细胞无计可施</strong>。因为它使用了MAD值，和中位数有关系，那么可以试想：如果一堆数都不合格，那么它们的中位数也不合格，因此原来正确的值，其实在这群不合格的数值中，就是“离群”的。  </li><li>另一个假设就是：<strong>每个细胞的qc指标都是独立于生物学状态的</strong>。也就是说，qc指标不会那么智能地识别细胞类型然后进行判断。在异质性很高的组织中， 就是存在内源RNA含量低，而线粒体基因占比高的细胞。如果使用”一刀切“的固定阈值，它们就很可能会被当成离群点被过滤。而是用MAD计算方法检测的结果可能就是：虽然一堆细胞的某个qc指标差异很大，但中位数也在变，随之变化的还有MAD值，这样最后的结果不至于和真实生物学情况差太多  </li></ul><h3 id="考虑实验的因素"><a href="#考虑实验的因素" class="headerlink" title="考虑实验的因素"></a>考虑实验的因素</h3><p>很多大型的实验都包含多个细胞系，而且可能采用的实验方法不同（比如选用不同的测序深度），这就产生了实验的不同批次。<strong>这种情况下， 应该对每个批次分别进行检测。</strong>  </p><p>如果每个批次都是一个<code>SingleCellExperiment</code>对象，那么<code>isOutlier()</code>函数可以按上面的方法直接使用；但是如果不同批次的细胞已经混合成一整个<code>SingleCellExperiment</code>对象，那么<code>batch=</code>这个参数就派上用场了。  </p><p>同样以这个416B数据集为例，他包含了两种不同的实验类型。然后我们就可以使用<code>batch=</code>参数去进行质控。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">batch &lt;- paste0(sce.416b$phenotype, <span class="string">&quot;-&quot;</span>, sce.416b$Plate)</span><br><span class="line">batch.reasons &lt;- quickPerCellQC(df, percent_subsets=c(<span class="string">&quot;subsets_Mito_percent&quot;</span>,</span><br><span class="line">    <span class="string">&quot;altexps_ERCC_percent&quot;</span>), batch=batch)</span><br><span class="line">colSums(as.matrix(batch.reasons))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##              low_lib_size            low_n_features high_subsets_Mito_percent </span></span><br><span class="line"><span class="comment">##                         4                         2                         2 </span></span><br><span class="line"><span class="comment">## high_altexps_ERCC_percent                   discard </span></span><br><span class="line"><span class="comment">##                         4                         7</span></span><br></pre></td></tr></table></figure><p><strong>但是，<code>batch</code>参数不是万能的</strong>，之前也说过，这种相对阈值需要一个<strong>假设：每个批次的大部分细胞都是高质量的</strong>。当某个批次的细胞整体质量偏低，离群点检测很有可能失败  </p><p>例如，在Grun et al. (2016)的数据集中有两个donor的实验是失败的。它们的ERCC含量相对其他批次高，增加了中位数和MAD值，导致过滤低质量细胞失败。因此这种情况下，可以先算其他几个批次的中位数和MAD值，然后参考这些值去对有问题的批次进行过滤。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(scRNAseq)</span><br><span class="line">sce.grun &lt;- GrunPancreasData()</span><br><span class="line">sce.grun &lt;- addPerCellQC(sce.grun)</span><br><span class="line"></span><br><span class="line"><span class="comment"># First attempt with batch-specific thresholds.</span></span><br><span class="line">discard.ercc &lt;- isOutlier(sce.grun$altexps_ERCC_percent,</span><br><span class="line">    type=<span class="string">&quot;higher&quot;</span>, batch=sce.grun$donor)</span><br><span class="line">with.blocking &lt;- plotColData(sce.grun, x=<span class="string">&quot;donor&quot;</span>, y=<span class="string">&quot;altexps_ERCC_percent&quot;</span>,</span><br><span class="line">    colour_by=I(discard.ercc))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Second attempt, sharing information across batches</span></span><br><span class="line"><span class="comment"># to avoid dramatically different thresholds for unusual batches.</span></span><br><span class="line">discard.ercc2 &lt;- isOutlier(sce.grun$altexps_ERCC_percent,</span><br><span class="line">    type=<span class="string">&quot;higher&quot;</span>, batch=sce.grun$donor,</span><br><span class="line">    subset=sce.grun$donor %<span class="keyword">in</span>% c(<span class="string">&quot;D17&quot;</span>, <span class="string">&quot;D2&quot;</span>, <span class="string">&quot;D7&quot;</span>))</span><br><span class="line">without.blocking &lt;- plotColData(sce.grun, x=<span class="string">&quot;donor&quot;</span>, y=<span class="string">&quot;altexps_ERCC_percent&quot;</span>,</span><br><span class="line">    colour_by=I(discard.ercc2))</span><br><span class="line"></span><br><span class="line">gridExtra::grid.arrange(with.blocking, without.blocking, ncol=<span class="number">2</span>) </span><br></pre></td></tr></table></figure><p><img src="/images/quality-control/qc-plot-pancreas-1.png"> </p><blockquote><p>注：可以看到，左图是按照每个批次分别鉴定的离群点；右图是用质量好的批次计算的阈值，然后运用到差的批次上的结果  </p></blockquote><p>为了鉴别有问题的批次，可以先将每个批次分别计算结果，然后比较它们的阈值，如果比同类批次超出太多，就要警觉。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ercc.thresholds &lt;- attr(discard.ercc, <span class="string">&quot;thresholds&quot;</span>)[<span class="string">&quot;higher&quot;</span>,]</span><br><span class="line">ercc.thresholds</span><br><span class="line"><span class="comment">##        D10        D17         D2         D3         D7 </span></span><br><span class="line"><span class="comment">##  73.610696   7.599947   6.010975 113.105828  15.216956</span></span><br><span class="line"></span><br><span class="line">names(ercc.thresholds)[isOutlier(ercc.thresholds, type=<span class="string">&quot;higher&quot;</span>)]</span><br><span class="line"><span class="comment">## [1] &quot;D10&quot; &quot;D3&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>可以看到D10、D3的阈值就超过其他批次很多  </p></blockquote><p>但是这么做的前提都是：我们认为批次中的细胞质量整体还不错。如果我们保证不了细胞质量，那么这种计算相对阈值的方法就不成立，还是要使用绝对阈值，手动去除。  </p><h3 id="3-其他方法"><a href="#3-其他方法" class="headerlink" title="3. 其他方法"></a>3. 其他方法</h3><p>另一个策略是根据每个细胞的QC指标来在高维空间中识别异常值。利用<code>robustbase</code> 包，将细胞放在高维空间，根据他们的QC指标（文库大小、表达基因数、spike-in比例、线粒体比例），然后使用<code>isOutlier()</code>来识别表现出异常高outlylier水平的低质量细胞  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">stats &lt;- cbind(log10(df$sum), log10(df$detected),</span><br><span class="line">    df$subsets_Mito_percent, df$altexps_ERCC_percent)</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(robustbase)</span><br><span class="line">outlying &lt;- adjOutlyingness(stats, only.outlyingness = <span class="literal">TRUE</span>)</span><br><span class="line">multi.outlier &lt;- isOutlier(outlying, type = <span class="string">&quot;higher&quot;</span>)</span><br><span class="line">summary(multi.outlier)</span><br><span class="line"><span class="comment">##    Mode   FALSE    TRUE </span></span><br><span class="line"><span class="comment">## logical     182      10</span></span><br></pre></td></tr></table></figure><p>除此以外，有时<strong>还可以根据基因表达量进行过滤</strong>，不过在bulk转录组中用的比较多，但是在scRNA中这样操作可能会损失一些本身数量就比较少的高质量细胞群体（比如一些罕见细胞，本身基因表达量就不是很高）  </p><h2 id="画图检查"><a href="#画图检查" class="headerlink" title="画图检查"></a>画图检查</h2><p>检查QC度量的分布以确定可能的问题是一个很好的实践。在最理想的情况下，我们会看到正态分布，可以证明在离群值检测中使用的<code>3 MAD</code>阈值是合理的。另一种模式下的大量细胞表明QC指标可能与某些生物状态相关，可能导致过滤过程中不同细胞类型的丢失;或者有不一致的库准备为一个子集的细胞，一个非罕见的现象在板的协议。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把QC指标和原来的sce.416b细胞信息整合起来</span></span><br><span class="line">colData(sce.416b) &lt;- cbind(colData(sce.416b), df)</span><br><span class="line"><span class="comment"># 修改一下整合后的信息</span></span><br><span class="line">sce.416b$block &lt;- factor(sce.416b$block)</span><br><span class="line">sce.416b$phenotype &lt;- ifelse(grepl(<span class="string">&quot;induced&quot;</span>, sce.416b$phenotype),</span><br><span class="line">    <span class="string">&quot;induced&quot;</span>, <span class="string">&quot;wild type&quot;</span>)</span><br><span class="line">sce.416b$discard &lt;- reasons$discard</span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">gridExtra::grid.arrange(</span><br><span class="line">    plotColData(sce.416b, x=<span class="string">&quot;block&quot;</span>, y=<span class="string">&quot;sum&quot;</span>, colour_by=<span class="string">&quot;discard&quot;</span>,</span><br><span class="line">        other_fields=<span class="string">&quot;phenotype&quot;</span>) + facet_wrap(~phenotype) + </span><br><span class="line">        scale_y_log10() + ggtitle(<span class="string">&quot;Total count&quot;</span>),</span><br><span class="line">    plotColData(sce.416b, x=<span class="string">&quot;block&quot;</span>, y=<span class="string">&quot;detected&quot;</span>, colour_by=<span class="string">&quot;discard&quot;</span>, </span><br><span class="line">        other_fields=<span class="string">&quot;phenotype&quot;</span>) + facet_wrap(~phenotype) + </span><br><span class="line">        scale_y_log10() + ggtitle(<span class="string">&quot;Detected features&quot;</span>),</span><br><span class="line">    plotColData(sce.416b, x=<span class="string">&quot;block&quot;</span>, y=<span class="string">&quot;subsets_Mito_percent&quot;</span>, </span><br><span class="line">        colour_by=<span class="string">&quot;discard&quot;</span>, other_fields=<span class="string">&quot;phenotype&quot;</span>) + </span><br><span class="line">        facet_wrap(~phenotype) + ggtitle(<span class="string">&quot;Mito percent&quot;</span>),</span><br><span class="line">    plotColData(sce.416b, x=<span class="string">&quot;block&quot;</span>, y=<span class="string">&quot;altexps_ERCC_percent&quot;</span>, </span><br><span class="line">        colour_by=<span class="string">&quot;discard&quot;</span>, other_fields=<span class="string">&quot;phenotype&quot;</span>) + </span><br><span class="line">        facet_wrap(~phenotype) + ggtitle(<span class="string">&quot;ERCC percent&quot;</span>),</span><br><span class="line">    ncol=<span class="number">1</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="/images/quality-control/qc-dist-416b-1.png">  </p><blockquote><p>展示的是不同批次的QC指标  </p></blockquote><p>另一种有用的诊断方法是绘制相对于其他QC指标的线粒体计数比例图。  </p><p>为了确保不存在这样的细胞：虽然细胞文库大，但它的线粒体占比也高。另外也是为了避免意外过滤掉本来是高质量但同时具有高代谢活性（即高线粒体占比）的细胞（如肝脏细胞）  </p><p>======未完  </p><h2 id="针对Droplet数据的细胞判断"><a href="#针对Droplet数据的细胞判断" class="headerlink" title="针对Droplet数据的细胞判断"></a>针对Droplet数据的细胞判断</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>由于这种建库方法的独特性，我们没办法事先知道某一个细胞文库（比如一个cell barcode）是真正包含一个细胞还是只是一个空的液滴（droplet）。因此，<strong>第一步是需要根据得到的表达量信息，来推断液滴是不是空的</strong>。但仅仅根据表达量判断还是不太靠谱，因为还有可能在空的液滴中依然包含外源RNA，最后的细胞文库依旧不为0，但确实不包含细胞。  </p><p>这里为了说明这个问题，<strong>使用了一个未过滤的10X PBMC数据</strong>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据下载</span></span><br><span class="line"><span class="keyword">library</span>(BiocFileCache)</span><br><span class="line">bfc &lt;- BiocFileCache(<span class="string">&quot;raw_data&quot;</span>, ask = <span class="literal">FALSE</span>)</span><br><span class="line">raw.path &lt;- bfcrpath(bfc, file.path(<span class="string">&quot;http://cf.10xgenomics.com/samples&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cell-exp/2.1.0/pbmc4k/pbmc4k_raw_gene_bc_matrices.tar.gz&quot;</span>))</span><br><span class="line"><span class="comment"># 解压数据</span></span><br><span class="line">untar(raw.path, exdir=file.path(tempdir(), <span class="string">&quot;pbmc4k&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(DropletUtils)</span><br><span class="line"><span class="keyword">library</span>(Matrix)</span><br><span class="line">fname &lt;- file.path(tempdir(), <span class="string">&quot;pbmc4k/raw_gene_bc_matrices/GRCh38&quot;</span>)</span><br><span class="line">sce.pbmc &lt;- read10xCounts(fname, col.names=<span class="literal">TRUE</span>)</span><br><span class="line">sce.pbmc</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## class: SingleCellExperiment </span></span><br><span class="line"><span class="comment">## dim: 33694 737280 </span></span><br><span class="line"><span class="comment">## metadata(1): Samples</span></span><br><span class="line"><span class="comment">## assays(1): counts</span></span><br><span class="line"><span class="comment">## rownames(33694): ENSG00000243485 ENSG00000237613 ... ENSG00000277475</span></span><br><span class="line"><span class="comment">##   ENSG00000268674</span></span><br><span class="line"><span class="comment">## rowData names(2): ID Symbol</span></span><br><span class="line"><span class="comment">## colnames(737280): AAACCTGAGAAACCAT-1 AAACCTGAGAAACCGC-1 ...</span></span><br><span class="line"><span class="comment">##   TTTGTCATCTTTAGTC-1 TTTGTCATCTTTCCTC-1</span></span><br><span class="line"><span class="comment">## colData names(2): Sample Barcode</span></span><br><span class="line"><span class="comment">## reducedDimNames(0):</span></span><br><span class="line"><span class="comment">## altExpNames(0):</span></span><br></pre></td></tr></table></figure><p><strong>整体观察不同的barcodes（不一定都是真的细胞）的文库大小分布：</strong>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">bcrank &lt;- barcodeRanks(counts(sce.pbmc))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Only showing unique points for plotting speed.</span></span><br><span class="line">uniq &lt;- !duplicated(bcrank$rank)</span><br><span class="line">plot(bcrank$rank[uniq], bcrank$total[uniq], log=<span class="string">&quot;xy&quot;</span>,</span><br><span class="line">    xlab=<span class="string">&quot;Rank&quot;</span>, ylab=<span class="string">&quot;Total UMI count&quot;</span>, cex.lab=<span class="number">1.2</span>)</span><br><span class="line"></span><br><span class="line">abline(h=metadata(bcrank)$inflection, col=<span class="string">&quot;darkgreen&quot;</span>, lty=<span class="number">2</span>)</span><br><span class="line">abline(h=metadata(bcrank)$knee, col=<span class="string">&quot;dodgerblue&quot;</span>, lty=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">legend(<span class="string">&quot;bottomleft&quot;</span>, legend=c(<span class="string">&quot;Inflection&quot;</span>, <span class="string">&quot;Knee&quot;</span>), </span><br><span class="line">        col=c(<span class="string">&quot;darkgreen&quot;</span>, <span class="string">&quot;dodgerblue&quot;</span>), lty=<span class="number">2</span>, cex=<span class="number">1.2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/quality-control/rankplot-1.png">  </p><blockquote><p>看到各个barcodes的文库大小有高有低，并且相差较大，因此可能对应着真实存在的细胞和空液滴。当然最简单的办法还是”一刀切“，<strong>留下那些文库较大的细胞</strong>，不过还是有损失真实细胞类型的风险  </p></blockquote><h3 id="检测空的液滴"><a href="#检测空的液滴" class="headerlink" title="检测空的液滴"></a>检测空的液滴</h3><p>我们使用<code>emptyDrops()</code>函数，检查每个barcode的表达量是不是和外源RNA的表达量有显著差异(Lun et al. 2019)。如果存在显著差异，就说明barcode中更有可能是一个细胞。这种方法可<strong>以帮助区分：测序质量好的空液滴 和 包含细胞但RNA含量较少的液滴</strong>。尽管它们总体的表达量可能很相似，但本质不同，还是要区分的。  </p><p><code>emptyDrops()</code> 使用Monte Carlo统计模拟计算p值，如果要重复结果，需要设置随机种子。另外设置 false discovery rate (FDR)为0.1%，意味着不超过0.1%的barcodes是空的。  </p>]]></content>
      
      
      <categories>
          
          <category> SingleCell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SingleCell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单尾还是双尾检验</title>
      <link href="2020/08/10/one-tail/"/>
      <url>2020/08/10/one-tail/</url>
      
        <content type="html"><![CDATA[<p>单侧检验 or 双侧检验？</p><a id="more"></a>  <h2 id="单尾检验与双尾检验"><a href="#单尾检验与双尾检验" class="headerlink" title="单尾检验与双尾检验"></a>单尾检验与双尾检验</h2><ul><li><strong>假设有一个新的肿瘤治疗方案，我们希望新治疗方案的疗效较传统治疗更好</strong>  </li><li><strong>为了探究新的抗肿瘤治疗方案是否疗效更优，故进行含6个患者的小临床试验，其中3个患者接受传统治疗方案，另外3个患者接受新的治疗方案。</strong>将治疗疗效结果表示在坐标轴上，从左至右表示疗效从好至差。该数据提示新治疗方案的疗效似乎更好，但是有部分数据并未得出此结论（如下），故两种方案的疗效优劣并不明确。  </li></ul><p><img src="/images/one-tail/onetail1.jpg" alt="img1">  </p><p><img src="/images/one-tail/onetail2.jpg" alt="img2">  </p><p>进行统计学检验：  </p><ul><li><strong>在单尾检验时，得出p值=0.03，p值小于常见显著性水平的阈值0.05。</strong>  </li><li><strong>在双尾检验时，得出p值=0.06，p值大于常见显著性水平阈值0.05。</strong>  </li></ul><p>那么在这种情况下应该选择哪个计算的阈值？  </p><p>单尾检验得出的p值检验的假设是： <strong>主观认为新治疗方案的疗效更好</strong>，故假设是否新的治疗方案优于传统治疗方案；该检验假设并没有区分新治疗方案疗效劣于和等于传统治疗方案的情况。  </p><p>双尾检验得出的p值检验的假设是： <strong>对两种方案的疗效无主观判定</strong>，故假设是否新的治疗方案优于或劣于或等于传统治疗方案。  </p><p><strong>因为在实际试验中，大多数情况下我们并不能知道两种方案疗效的优劣，我们需要探究的是新治疗方案是否优于或劣于或等于传统治疗方案，故我们应该选用双尾检验</strong>。尽管在此次小样本临床试验中，新治疗方案似乎比传统方案更优，但是我们也必须考虑新方案劣于传统方案的情况。好的统计检验意味着，我们必须在试验实施前确定检验方案和显著性水平。否则就会发生p-hacking，它会增加我们报告虚假结果的机会（bogus results）。  </p><p><strong>故，在以上这种情况下，我们应该考虑采用双尾t检验，得出新方案与传统方案疗效无显著差异的结论</strong>（p值=0.06）。  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在大多数情况下，我们并不知道目标数据差异的方向和好坏， 因此<strong>我们既需要考虑一组数据高于另一组数据的情况，也需要考虑一组数据低于另一组数据的情况，故我们往往需要选取双尾检验以减少假阳性率。</strong>  </p><hr><p><strong>Reference</strong>  </p><p><a href="https://www.youtube.com/watch?v=bsZGt-caXO4&amp;list=PLblh5JKOoLUK0FLuzwntyYI10UQFUhsY9&amp;index=30">https://www.youtube.com/watch?v=bsZGt-caXO4&amp;list=PLblh5JKOoLUK0FLuzwntyYI10UQFUhsY9&amp;index=30</a>  </p>]]></content>
      
      
      <categories>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Orchestrating Single-Cell Analysis (一)</title>
      <link href="2020/08/10/single-cell-ii/"/>
      <url>2020/08/10/single-cell-ii/</url>
      
        <content type="html"><![CDATA[<p>单细胞数据结构  </p><a id="more"></a>  <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在单细胞分析当中，最为基础重要的是单细胞特有的数据结构，用户应该能够使用不同的封装R包来分析他们的数据，而不需要格式之间转换。<code>SingleCellExperiment</code>是最为重要的数据类型。  </p><p><img src="/images/single-cell-ii/SingleCellExperiment.png" alt="SingleCellExperiment">  </p><p>图中最核心的部分，是蓝色的data部分；另外还有绿色的基因注释信息<code>feature metadata</code>、橙色的细胞注释信息<code>cell metadata</code>。除了这三大件，还会包含一些下游分析结果，比如PCA、tSNE降维结果就会保存在紫色的<code>Dimension Reductions</code>  </p><p>这个<code>SingleCellExperiment</code>对象来自<code>SingleCellExperiment</code>R包，现在Bioconductor上的70多个单细胞相关的R包都使用了这个对象，<strong>可以说是单细胞领域的通用货币</strong>。  </p><h2 id="原始实验数据存储"><a href="#原始实验数据存储" class="headerlink" title="原始实验数据存储"></a>原始实验数据存储</h2><h3 id="Filling-the-assays-slot"><a href="#Filling-the-assays-slot" class="headerlink" title="Filling the assays slot"></a>Filling the <code>assays</code> slot</h3><p><strong>创建一个<code>SingleCellExperiment</code>对象很容易，只需要一个<code>assays</code>就可以了</strong>。这是一个列表，其中包含了许多表达数据，例如原始数据count或者其他标准化处理过的数据，行是基因，列是样本  </p><p>可以构建一个10个基因，3个细胞的矩阵  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">counts_matrix &lt;- data.frame(cell_1 = rpois(<span class="number">10</span>, <span class="number">10</span>), </span><br><span class="line">                    cell_2 = rpois(<span class="number">10</span>, <span class="number">10</span>), </span><br><span class="line">                    cell_3 = rpois(<span class="number">10</span>, <span class="number">30</span>))</span><br><span class="line">rownames(counts_matrix) &lt;- paste0(<span class="string">&quot;gene_&quot;</span>, <span class="number">1</span>:<span class="number">10</span>)</span><br><span class="line">counts_matrix &lt;- as.matrix(counts_matrix) <span class="comment"># must be a matrix object!</span></span><br></pre></td></tr></table></figure><p>有了这个，就可以用一个list构建出SingleCellExperiment对象。当然，这个<strong>list中可以包括任意个矩阵</strong>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- SingleCellExperiment(assays = list(counts = counts_matrix))</span><br><span class="line">sce</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## class: SingleCellExperiment </span><br><span class="line">## dim: 10 3 </span><br><span class="line">## metadata(0):</span><br><span class="line">## assays(1): counts</span><br><span class="line">## rownames(10): gene_1 gene_2 ... gene_9 gene_10</span><br><span class="line">## rowData names(0):</span><br><span class="line">## colnames(3): cell_1 cell_2 cell_3</span><br><span class="line">## colData names(0):</span><br><span class="line">## reducedDimNames(0):</span><br><span class="line">## altExpNames(0):</span><br></pre></td></tr></table></figure><p>为了得到这个对象中的矩阵，可以用两种方式获得：  </p><ul><li><code>assay(sce, &quot;counts&quot;)</code>：这个方法是最通用的办法，而且其中的counts可以换成其他的名称，只要是出现在之前的list中都可以</li><li><code>counts(sce)</code>：它实现的东西和上面一样，只不过这个方法只适合提取<code>counts</code>这个名称的矩阵</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">counts(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">##         cell_1 cell_2 cell_3</span><br><span class="line">## gene_1      10     10     27</span><br><span class="line">## gene_2       6      9     41</span><br><span class="line">## gene_3       9      9     22</span><br><span class="line">## gene_4       5     14     31</span><br><span class="line">## gene_5      13      9     32</span><br><span class="line">## gene_6       7     14     30</span><br><span class="line">## gene_7       8      5     35</span><br><span class="line">## gene_8       8      6     41</span><br><span class="line">## gene_9      12     10     27</span><br><span class="line">## gene_10      9     11     25</span><br></pre></td></tr></table></figure><h3 id="Adding-more-assays"><a href="#Adding-more-assays" class="headerlink" title="Adding more assays"></a>Adding more <code>assays</code></h3><blockquote><p>使用<code>assays</code>非常强大的是我们可以对他进行各种扩展，这对于存储原始的计数矩阵以及数据的标准化版本特别有用。  </p></blockquote><p>之前<code>assays</code>中只有原始表达矩阵，其实还能根据它扩展到归一化矩阵，例如使用<code>scater</code>R包的函数对包装的矩阵进行操作：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- scran::computeSumFactors(sce)</span><br><span class="line">sce &lt;- scater::logNormCounts(sce)</span><br><span class="line">sce</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## class: SingleCellExperiment </span><br><span class="line">## dim: 10 3 </span><br><span class="line">## metadata(0):</span><br><span class="line">## assays(2): counts logcounts</span><br><span class="line">## rownames(10): gene_1 gene_2 ... gene_9 gene_10</span><br><span class="line">## rowData names(0):</span><br><span class="line">## colnames(3): cell_1 cell_2 cell_3</span><br><span class="line">## colData names(1): sizeFactor</span><br><span class="line">## reducedDimNames(0):</span><br><span class="line">## altExpNames(0):</span><br></pre></td></tr></table></figure><p>这样，<code>assays</code> 就从一个存储原始矩阵的<code>counts</code> ，又扩增了归一化矩阵的<code>logcounts</code>。同理，这个<code>logcounts</code>也是能有两种提取方法：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logcounts(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">##           cell_1   cell_2   cell_3</span><br><span class="line">## gene_1  4.319439 4.170751 3.937792</span><br><span class="line">## gene_2  3.629859 4.027621 4.507948</span><br><span class="line">## gene_3  4.175442 4.027621 3.663575</span><br><span class="line">## gene_4  3.389947 4.633108 4.124903</span><br><span class="line">## gene_5  4.681178 4.027621 4.168120</span><br><span class="line">## gene_6  3.835506 4.633108 4.080351</span><br><span class="line">## gene_7  4.015463 3.248710 4.290508</span><br><span class="line">## gene_8  4.015463 3.486223 4.507948</span><br><span class="line">## gene_9  4.570379 4.170751 3.937792</span><br><span class="line">## gene_10 4.175442 4.300954 3.834273</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># assay(sce, &quot;logcounts&quot;)</span></span><br></pre></td></tr></table></figure><p>除了使用R包进行扩展之外，同样可以根据自己的想法，去根据原始矩阵得到一个新的对象，并储存在<code>assay</code>里边  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">counts_100 &lt;- counts(sce) + <span class="number">100</span></span><br><span class="line">assay(sce, <span class="string">&quot;counts_100&quot;</span>) &lt;- counts_100 <span class="comment"># assign a new entry to assays slot</span></span><br><span class="line">assays(sce) <span class="comment"># new assay has now been added.</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## List of length 3</span><br><span class="line">## names(3): counts logcounts counts_100</span><br></pre></td></tr></table></figure><blockquote><p>新增用的是<code>assay</code>单数，查看结果用的是<code>assays</code>复数  </p></blockquote><p><strong><code>assays</code>可以包含多个矩阵；构建sce对象可以一次一次加入新的矩阵，也可以用列表的形式，一次加入多个矩阵。</strong>这与最开始的图形表示内容是相同的  </p><h2 id="Handling-metadata"><a href="#Handling-metadata" class="headerlink" title="Handling metadata"></a>Handling metadata</h2><h3 id="On-the-columns"><a href="#On-the-columns" class="headerlink" title="On the columns"></a>On the columns</h3><p>为了进一步注释我们的<code>SingleCellExperiment</code>对象，那么我们需要添加注释信息来描述我们的数据，这部分来介绍列的注释，针对的就是实验样本、细胞。这部分信息将会保存在<code>colData</code>中，它的主体是样本，于是将行名设定为样本，列名设为注释信息（如：批次、作者等等），对应上面图中的橙色部分。  </p><p>先添加一个细胞的注释信息：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cell_metadata &lt;- data.frame(batch = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">rownames(cell_metadata) &lt;- paste0(<span class="string">&quot;cell_&quot;</span>, <span class="number">1</span>:<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>有两种方法可以添加到<code>SingleCellExperiment</code>对象中：一种是<strong>直接构建</strong>，一种是<strong>后续添加</strong>   </p><ul><li>直接构建：  </li></ul>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- SingleCellExperiment(assays = list(counts = counts_matrix),</span><br><span class="line">    colData = cell_metadata)</span><br></pre></td></tr></table></figure><ul><li>后续添加：  </li></ul>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colData(sce) &lt;- DataFrame(cell_metadata)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sce</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## class: SingleCellExperiment </span><br><span class="line">## dim: 10 3 </span><br><span class="line">## metadata(0):</span><br><span class="line">## assays(1): counts</span><br><span class="line">## rownames(10): gene_1 gene_2 ... gene_9 gene_10</span><br><span class="line">## rowData names(0):</span><br><span class="line">## colnames(3): cell_1 cell_2 cell_3</span><br><span class="line">## colData names(1): batch</span><br><span class="line">## reducedDimNames(0):</span><br><span class="line">## altExpNames(0):</span><br></pre></td></tr></table></figure><p>可以看到<code>colData</code>增加了之前设置的<code>batch</code>信息  </p><p>同样有两种方式获取这个注释信息  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colData(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## DataFrame with 3 rows and 1 column</span><br><span class="line">##            batch</span><br><span class="line">##        &lt;numeric&gt;</span><br><span class="line">## cell_1         1</span><br><span class="line">## cell_2         1</span><br><span class="line">## cell_3         2</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sce$batch</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 1 1 2</span><br></pre></td></tr></table></figure><p>有一些函数可以帮助我们自动计算这些注释信息并添加到元数据当中，例如<code>scater</code>包的<code>calculateQCMetrics()</code>就会帮你计算几十项细胞的质量信息，结果依然是使用<code>colData</code>调用注释结果信息  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- scater::addPerCellQC(sce)</span><br><span class="line">colData(sce)[, <span class="number">1</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## DataFrame with 3 rows and 5 columns</span><br><span class="line">##            batch       sum  detected percent_top_50 percent_top_100</span><br><span class="line">##        &lt;numeric&gt; &lt;integer&gt; &lt;integer&gt;      &lt;numeric&gt;       &lt;numeric&gt;</span><br><span class="line">## cell_1         1        87        10            100             100</span><br><span class="line">## cell_2         1        97        10            100             100</span><br><span class="line">## cell_3         2       311        10            100             100</span><br></pre></td></tr></table></figure><p>或者，我们可能想要手动添加更多的字段到元数据当中:  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce$more_stuff &lt;- runif(ncol(sce))</span><br><span class="line">colnames(colData(sce))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;batch&quot;           &quot;sum&quot;             &quot;detected&quot;        &quot;percent_top_50&quot;  &quot;percent_top_100&quot;</span><br><span class="line">## [6] &quot;percent_top_200&quot; &quot;percent_top_500&quot; &quot;total&quot;           &quot;more_stuff&quot;</span><br></pre></td></tr></table></figure><p>既然<code>colData</code>可以包含这么多的注释信息，那么怎么从中选取一部分呢？  </p><p>colData的一个常用操作就是取子集，看下面操作：  </p><p>例如想从colData中选择批次信息，和数据框取子集是类似的  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce$batch</span><br><span class="line"><span class="comment"># 或者colData(sce)$batch</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 1 1 2</span><br></pre></td></tr></table></figure><p>然后如果再想取批次中属于第一个批次的信息，就可以继续按照数据框的思路取子集  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sce[, sce$batch == <span class="number">1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## class: SingleCellExperiment </span><br><span class="line">## dim: 10 2 </span><br><span class="line">## metadata(0):</span><br><span class="line">## assays(1): counts</span><br><span class="line">## rownames(10): gene_1 gene_2 ... gene_9 gene_10</span><br><span class="line">## rowData names(0):</span><br><span class="line">## colnames(2): cell_1 cell_2</span><br><span class="line">## colData names(9): batch sum ... total more_stuff</span><br><span class="line">## reducedDimNames(0):</span><br><span class="line">## altExpNames(0):</span><br></pre></td></tr></table></figure><h3 id="On-the-rows"><a href="#On-the-rows" class="headerlink" title="On the rows"></a>On the rows</h3><p>既然样本有注释信息，那么同样的，基因也有自己的注释，它就存放在<code>rowData</code>或者<code>rowRanges</code>中，这两个的区别就是：  </p><ul><li><code>rowData</code>：是一个数据框的结构，它就存储了核心<code>assays</code>矩阵的基因相关信息  </li></ul>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- scater::addPerFeatureQC(sce)</span><br><span class="line">rowData(sce)</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">## DataFrame with 10 rows and 2 columns</span><br><span class="line">##              mean  detected</span><br><span class="line">##         &lt;numeric&gt; &lt;numeric&gt;</span><br><span class="line">## gene_1    15.6667       100</span><br><span class="line">## gene_2    18.6667       100</span><br><span class="line">## gene_3    13.3333       100</span><br><span class="line">## gene_4    16.6667       100</span><br><span class="line">## gene_5    18.0000       100</span><br><span class="line">## gene_6    17.0000       100</span><br><span class="line">## gene_7    16.0000       100</span><br><span class="line">## gene_8    18.3333       100</span><br><span class="line">## gene_9    16.3333       100</span><br><span class="line">## gene_10   15.0000       100</span><br></pre></td></tr></table></figure><ul><li><code>rowRanges</code>：也是基因相关，但是它是GRange对象，存储了基因坐标信息，例如染色体信息、起始终点坐标  </li></ul>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rowRanges(sce) <span class="comment"># empty</span></span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">## GRangesList object of length 10:</span><br><span class="line">## $gene_1</span><br><span class="line">## GRanges object with 0 ranges and 0 metadata columns:</span><br><span class="line">##    seqnames    ranges strand</span><br><span class="line">##       &lt;Rle&gt; &lt;IRanges&gt;  &lt;Rle&gt;</span><br><span class="line">##   -------</span><br><span class="line">##   seqinfo: no sequences</span><br><span class="line">## </span><br><span class="line">## $gene_2</span><br><span class="line">## GRanges object with 0 ranges and 0 metadata columns:</span><br><span class="line">##    seqnames    ranges strand</span><br><span class="line">##       &lt;Rle&gt; &lt;IRanges&gt;  &lt;Rle&gt;</span><br><span class="line">##   -------</span><br><span class="line">##   seqinfo: no sequences</span><br><span class="line">## </span><br><span class="line">## $gene_3</span><br><span class="line">## GRanges object with 0 ranges and 0 metadata columns:</span><br><span class="line">##    seqnames    ranges strand</span><br><span class="line">##       &lt;Rle&gt; &lt;IRanges&gt;  &lt;Rle&gt;</span><br><span class="line">##   -------</span><br><span class="line">##   seqinfo: no sequences</span><br><span class="line">## </span><br><span class="line">## ...</span><br><span class="line">## &lt;7 more elements&gt;</span><br></pre></td></tr></table></figure><p>同样类似于数据框，可以按位置、名称取子集：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sce[c(<span class="string">&quot;gene_1&quot;</span>, <span class="string">&quot;gene_4&quot;</span>), ]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## class: SingleCellExperiment </span><br><span class="line">## dim: 2 3 </span><br><span class="line">## metadata(0):</span><br><span class="line">## assays(1): counts</span><br><span class="line">## rownames(2): gene_1 gene_4</span><br><span class="line">## rowData names(2): mean detected</span><br><span class="line">## colnames(3): cell_1 cell_2 cell_3</span><br><span class="line">## colData names(9): batch sum ... total more_stuff</span><br><span class="line">## reducedDimNames(0):</span><br><span class="line">## altExpNames(0):</span><br></pre></td></tr></table></figure><h3 id="Other-metadata"><a href="#Other-metadata" class="headerlink" title="Other metadata"></a>Other metadata</h3><h4 id="metadata-信息"><a href="#metadata-信息" class="headerlink" title="metadata 信息"></a><code>metadata</code> 信息</h4><p>除了以上介绍的，还有一些重要的元数据信息需要储存，这些可以用<code>metadata</code>来表示  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_genes &lt;- c(<span class="string">&quot;gene_1&quot;</span>, <span class="string">&quot;gene_5&quot;</span>)</span><br><span class="line">metadata(sce) &lt;- list(favorite_genes = my_genes)</span><br><span class="line">metadata(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## $favorite_genes</span><br><span class="line">## [1] &quot;gene_1&quot; &quot;gene_5&quot;</span><br></pre></td></tr></table></figure><p>我们可以用<code>$</code>对其进行扩展  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">your_genes &lt;- c(<span class="string">&quot;gene_4&quot;</span>, <span class="string">&quot;gene_8&quot;</span>)</span><br><span class="line">metadata(sce)$your_genes &lt;- your_genes</span><br><span class="line">metadata(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## $favorite_genes</span><br><span class="line">## [1] &quot;gene_1&quot; &quot;gene_5&quot;</span><br><span class="line">## </span><br><span class="line">## $your_genes</span><br><span class="line">## [1] &quot;gene_4&quot; &quot;gene_8&quot;</span><br></pre></td></tr></table></figure><h4 id="对样本进行归一化：sizeFactors"><a href="#对样本进行归一化：sizeFactors" class="headerlink" title="对样本进行归一化：sizeFactors"></a>对样本进行归一化：<code>sizeFactors</code></h4><p>这里面装了根据样本文库计算的文库大小因子，是一个数值型向量，用于后面的归一化  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- scran::computeSumFactors(sce)</span><br><span class="line">sizeFactors(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 0.5272727 0.5878788 1.8848485</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 手动添加</span></span><br><span class="line">sizeFactors(sce) &lt;- scater::librarySizeFactors(sce)</span><br><span class="line">sizeFactors(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##    cell_1    cell_2    cell_3 </span><br><span class="line">## 0.5272727 0.5878788 1.8848485</span><br></pre></td></tr></table></figure><p>前面提到的：<code>assays</code> (primary data), <code>colData</code> (sample metadata),<code>rowData</code>/<code>rowRanges</code> (feature metadata), and <code>sizeFactors</code> 。其实这其中前三个都来自于<code>SummarizedExperiment</code>这个对象。还有一些基于<code>SummarizedExperiment</code>计算得到的信息同样可以一起储存在<code>SummarizedExperiment</code>对象当中。  </p><h4 id="降维结果：reducedDims"><a href="#降维结果：reducedDims" class="headerlink" title="降维结果：reducedDims"></a>降维结果：<code>reducedDims</code></h4><p>存储了原始矩阵的降维结果，可以通过PCA、tSNE、UMAP等得到，它是一个数值型矩阵的list，行名是原来矩阵的列名（就是细胞、样本），它的列就是各种维度信息  </p><p>它和<code>assays</code>一样，也可以包含许多降维的结果，例如用<code>scater</code>包计算PCA：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- scater::logNormCounts(sce)</span><br><span class="line">sce &lt;- scater::runPCA(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning in check_numbers(k &#x3D; k, nu &#x3D; nu, nv &#x3D; nv, limit &#x3D; min(dim(x)) - : more singular</span><br><span class="line">## values&#x2F;vectors requested than available</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning in (function (A, nv &#x3D; 5, nu &#x3D; nv, maxit &#x3D; 1000, work &#x3D; nv + 7, reorth &#x3D; TRUE, : You&#39;re</span><br><span class="line">## computing too large a percentage of total singular values, use a standard svd instead.</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reducedDim(sce, <span class="string">&quot;PCA&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">##              PC1        PC2</span><br><span class="line">## cell_1 -0.792842 -0.6994112</span><br><span class="line">## cell_2  1.113535 -0.2302468</span><br><span class="line">## cell_3 -0.320693  0.9296580</span><br><span class="line">## attr(,&quot;percentVar&quot;)</span><br><span class="line">## [1] 58.36254 41.63746</span><br><span class="line">## attr(,&quot;rotation&quot;)</span><br><span class="line">##                   PC1         PC2</span><br><span class="line">## gene_4   0.5826349629  0.28228727</span><br><span class="line">## gene_7  -0.4778380724  0.30732611</span><br><span class="line">## gene_8  -0.3790515744  0.41216988</span><br><span class="line">## gene_2   0.0818326382  0.51529505</span><br><span class="line">## gene_6   0.4106910258  0.03126769</span><br><span class="line">## gene_5  -0.2856972185 -0.23213641</span><br><span class="line">## gene_9  -0.1228230993 -0.35271423</span><br><span class="line">## gene_3  -0.0002291474 -0.31414168</span><br><span class="line">## gene_10  0.1263935133 -0.24605811</span><br><span class="line">## gene_1  -0.0219019212 -0.22792469</span><br></pre></td></tr></table></figure><p>除了PCA，tSNE的结果也是存储在这里：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sce &lt;- scater::runTSNE(sce, perplexity = <span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Perplexity should be lower than K!</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reducedDim(sce, <span class="string">&quot;TSNE&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">##             [,1]       [,2]</span><br><span class="line">## cell_1  2121.516 -5285.0599</span><br><span class="line">## cell_2  3516.243  4479.8174</span><br><span class="line">## cell_3 -5637.759   805.2426</span><br></pre></td></tr></table></figure><p>查看下全部的结果都包含什么：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reducedDims(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## List of length 2</span><br><span class="line">## names(2): PCA TSNE</span><br></pre></td></tr></table></figure><p><strong>调取方法也十分类似</strong>：<code>assay</code>，数据矩阵存储在<code>assays</code>，而调用是<code>assay</code>；这里的降维结果存储在<code>reducedDims</code>，调用是<code>reducedDim</code>  </p><p>同样的这些信息可以通过其他包计算后直接添加到对象中  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u &lt;- uwot::umap(t(logcounts(sce)), n_neighbors = <span class="number">2</span>)</span><br><span class="line">reducedDim(sce, <span class="string">&quot;UMAP_uwot&quot;</span>) &lt;- u</span><br><span class="line">reducedDims(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## List of length 3</span><br><span class="line">## names(3): PCA TSNE UMAP_uwot</span><br></pre></td></tr></table></figure><h4 id="对列添加label"><a href="#对列添加label" class="headerlink" title="对列添加label"></a>对列添加label</h4><p>使用<code>colLabels()</code> ，尤其在非监督聚类过程中对细胞添加label，进行分组  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">colLabels(sce) &lt;- LETTERS[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">colLabels(sce)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot;</span><br></pre></td></tr></table></figure><p>例如<code>scran::findMarkers</code>就是通过<code>colLabels()</code>来提取细胞信息的</p><hr><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><p><a href="https://osca.bioconductor.org/">Orchestrating Single-Cell Analysis with Bioconductor</a>  </p>]]></content>
      
      
      <categories>
          
          <category> SingleCell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SingleCell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R 语言统计检验函数汇总</title>
      <link href="2020/07/31/r-stats/"/>
      <url>2020/07/31/r-stats/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="连续型数据"><a href="#连续型数据" class="headerlink" title="连续型数据"></a>连续型数据</h2><h3 id="基于分布的检验"><a href="#基于分布的检验" class="headerlink" title="基于分布的检验"></a>基于分布的检验</h3><h4 id="T检验"><a href="#T检验" class="headerlink" title="T检验"></a>T检验</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(<span class="number">1</span>:<span class="number">10</span>, <span class="number">10</span>:<span class="number">20</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Welch Two Sample t-test</span><br><span class="line">## </span><br><span class="line">## data:  1:10 and 10:20</span><br><span class="line">## t &#x3D; -7, df &#x3D; 19, p-value &#x3D; 2e-06</span><br><span class="line">## alternative hypothesis: true difference in means is not equal to 0</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  -12.4  -6.6</span><br><span class="line">## sample estimates:</span><br><span class="line">## mean of x mean of y </span><br><span class="line">##       5.5      15.0</span><br></pre></td></tr></table></figure><p>配对 t 检验：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(rnorm(<span class="number">10</span>), rnorm(<span class="number">10</span>, mean = <span class="number">1</span>), paired = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Paired t-test</span><br><span class="line">## </span><br><span class="line">## data:  rnorm(10) and rnorm(10, mean &#x3D; 1)</span><br><span class="line">## t &#x3D; -2, df &#x3D; 9, p-value &#x3D; 0.03</span><br><span class="line">## alternative hypothesis: true difference in means is not equal to 0</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  -1.981 -0.096</span><br><span class="line">## sample estimates:</span><br><span class="line">## mean of the differences </span><br><span class="line">##                   -1.04</span><br></pre></td></tr></table></figure><p>使用公式表示：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df &lt;- data.frame(</span><br><span class="line">  value = c(rnorm(<span class="number">10</span>), rnorm(<span class="number">10</span>, mean = <span class="number">1</span>)),</span><br><span class="line">  group = c(rep(<span class="string">&quot;case&quot;</span>, <span class="number">10</span>), rep(<span class="string">&quot;control&quot;</span>, <span class="number">10</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">t.test(value ~ group, data = df)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Welch Two Sample t-test</span><br><span class="line">## </span><br><span class="line">## data:  value by group</span><br><span class="line">## t &#x3D; -0.7, df &#x3D; 18, p-value &#x3D; 0.5</span><br><span class="line">## alternative hypothesis: true difference in means is not equal to 0</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  -0.933  0.447</span><br><span class="line">## sample estimates:</span><br><span class="line">##    mean in group case mean in group control </span><br><span class="line">##                 0.539                 0.782</span><br></pre></td></tr></table></figure><p>假设方差同质化：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.test(value ~ group, data = df, var.equal = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Two Sample t-test</span><br><span class="line">## </span><br><span class="line">## data:  value by group</span><br><span class="line">## t &#x3D; -0.7, df &#x3D; 18, p-value &#x3D; 0.5</span><br><span class="line">## alternative hypothesis: true difference in means is not equal to 0</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  -0.933  0.447</span><br><span class="line">## sample estimates:</span><br><span class="line">##    mean in group case mean in group control </span><br><span class="line">##                 0.539                 0.782</span><br></pre></td></tr></table></figure><h4 id="总体方差比较"><a href="#总体方差比较" class="headerlink" title="总体方差比较"></a>总体方差比较</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var.test(value ~ group, data = df)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## F test to compare two variances</span><br><span class="line">## </span><br><span class="line">## data:  value by group</span><br><span class="line">## F &#x3D; 0.8, num df &#x3D; 9, denom df &#x3D; 9, p-value &#x3D; 0.8</span><br><span class="line">## alternative hypothesis: true ratio of variances is not equal to 1</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  0.202 3.269</span><br><span class="line">## sample estimates:</span><br><span class="line">## ratio of variances </span><br><span class="line">##              0.812</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bartlett.test(value ~ group, data = df)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Bartlett test of homogeneity of variances</span><br><span class="line">## </span><br><span class="line">## data:  value by group</span><br><span class="line">## Bartlett&#39;s K-squared &#x3D; 0.09, df &#x3D; 1, p-value &#x3D; 0.8</span><br></pre></td></tr></table></figure><h4 id="多个组间均值的比较"><a href="#多个组间均值的比较" class="headerlink" title="多个组间均值的比较"></a>多个组间均值的比较</h4><p>两组以上的比较要使用ANOVA  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aov(wt ~ factor(cyl), data = mtcars)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## Call:</span><br><span class="line">##    aov(formula &#x3D; wt ~ factor(cyl), data &#x3D; mtcars)</span><br><span class="line">## </span><br><span class="line">## Terms:</span><br><span class="line">##                 factor(cyl) Residuals</span><br><span class="line">## Sum of Squares         18.2      11.5</span><br><span class="line">## Deg. of Freedom           2        29</span><br><span class="line">## </span><br><span class="line">## Residual standard error: 0.63</span><br><span class="line">## Estimated effects may be unbalanced</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看详细的信息</span></span><br><span class="line">model.tables(aov(wt ~ factor(cyl), data = mtcars))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## Tables of effects</span><br><span class="line">## </span><br><span class="line">##  factor(cyl) </span><br><span class="line">##           4       6      8</span><br><span class="line">##     -0.9315 -0.1001  0.782</span><br><span class="line">## rep 11.0000  7.0000 14.000</span><br></pre></td></tr></table></figure><p>ANOVA 分析假设各组样本数据的方差是相等的，如果知道（或怀疑）不相等，可以使用 <code>oneway.test()</code> 函数。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oneway.test(wt ~ cyl, data = mtcars)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## One-way analysis of means (not assuming equal variances)</span><br><span class="line">## </span><br><span class="line">## data:  wt and cyl</span><br><span class="line">## F &#x3D; 20, num df &#x3D; 2, denom df &#x3D; 19, p-value &#x3D; 2e-05</span><br></pre></td></tr></table></figure><h4 id="多组样本的配对-t-检验"><a href="#多组样本的配对-t-检验" class="headerlink" title="多组样本的配对 t 检验"></a>多组样本的配对 t 检验</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pairwise.t.test(mtcars$wt, mtcars$cyl)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Pairwise comparisons using t tests with pooled SD </span><br><span class="line">## </span><br><span class="line">## data:  mtcars$wt and mtcars$cyl </span><br><span class="line">## </span><br><span class="line">##   4     6   </span><br><span class="line">## 6 0.01  -   </span><br><span class="line">## 8 6e-07 0.01</span><br><span class="line">## </span><br><span class="line">## P value adjustment method: holm</span><br></pre></td></tr></table></figure><h4 id="正态性检验"><a href="#正态性检验" class="headerlink" title="正态性检验"></a>正态性检验</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shapiro.test(rnorm(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Shapiro-Wilk normality test</span><br><span class="line">## </span><br><span class="line">## data:  rnorm(30)</span><br><span class="line">## W &#x3D; 1, p-value &#x3D; 0.6</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qqnorm(rnorm(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><p><img src="figure/unnamed-chunk-1-1.png" alt="plot of chunk unnamed-chunk-1"></p><h4 id="分布的对称性检验"><a href="#分布的对称性检验" class="headerlink" title="分布的对称性检验"></a>分布的对称性检验</h4><p>用 Kolmogorov-Smirnov 检验查看一个向量是否来自一个对称的分布（不限于正态分布）。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ks.test(rnorm(<span class="number">10</span>), pnorm)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## One-sample Kolmogorov-Smirnov test</span><br><span class="line">## </span><br><span class="line">## data:  rnorm(10)</span><br><span class="line">## D &#x3D; 0.3, p-value &#x3D; 0.2</span><br><span class="line">## alternative hypothesis: two-sided</span><br></pre></td></tr></table></figure><blockquote><p>函数第 1 个参数指定待检验的数据，第 2个参数指定对称分布的类型，可以是数值型向量、指定概率分布函数的字符串或一个分布函数。  </p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ks.test(rnorm(<span class="number">10</span>), <span class="string">&quot;pnorm&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## One-sample Kolmogorov-Smirnov test</span><br><span class="line">## </span><br><span class="line">## data:  rnorm(10)</span><br><span class="line">## D &#x3D; 0.3, p-value &#x3D; 0.3</span><br><span class="line">## alternative hypothesis: two-sided</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ks.test(rpois(<span class="number">10</span>, lambda = <span class="number">1</span>), <span class="string">&quot;pnorm&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning in ks.test(rpois(10, lambda &#x3D; 1), &quot;pnorm&quot;): ties should not be present for the</span><br><span class="line">## Kolmogorov-Smirnov test</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## One-sample Kolmogorov-Smirnov test</span><br><span class="line">## </span><br><span class="line">## data:  rpois(10, lambda &#x3D; 1)</span><br><span class="line">## D &#x3D; 0.5, p-value &#x3D; 0.006</span><br><span class="line">## alternative hypothesis: two-sided</span><br></pre></td></tr></table></figure><h4 id="检验两个向量是否服从同一分布"><a href="#检验两个向量是否服从同一分布" class="headerlink" title="检验两个向量是否服从同一分布"></a>检验两个向量是否服从同一分布</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ks.test(rnorm(<span class="number">20</span>), rnorm(<span class="number">30</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Two-sample Kolmogorov-Smirnov test</span><br><span class="line">## </span><br><span class="line">## data:  rnorm(20) and rnorm(30)</span><br><span class="line">## D &#x3D; 0.2, p-value &#x3D; 0.4</span><br><span class="line">## alternative hypothesis: two-sided</span><br></pre></td></tr></table></figure><h4 id="相关性分析"><a href="#相关性分析" class="headerlink" title="相关性分析"></a>相关性分析</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor.test(mtcars$mpg, mtcars$wt)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Pearson&#39;s product-moment correlation</span><br><span class="line">## </span><br><span class="line">## data:  mtcars$mpg and mtcars$wt</span><br><span class="line">## t &#x3D; -10, df &#x3D; 30, p-value &#x3D; 1e-10</span><br><span class="line">## alternative hypothesis: true correlation is not equal to 0</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  -0.934 -0.744</span><br><span class="line">## sample estimates:</span><br><span class="line">##    cor </span><br><span class="line">## -0.868</span><br></pre></td></tr></table></figure><h3 id="不依赖分布的检验"><a href="#不依赖分布的检验" class="headerlink" title="不依赖分布的检验"></a>不依赖分布的检验</h3><h4 id="均值检验"><a href="#均值检验" class="headerlink" title="均值检验"></a>均值检验</h4><p>Wilcoxon 检验是 t 检验的非参数版本  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 秩和检验</span></span><br><span class="line">wilcox.test(<span class="number">1</span>:<span class="number">10</span>, <span class="number">10</span>:<span class="number">20</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Warning in wilcox.test.default(1:10, 10:20): cannot compute exact p-value with ties</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Wilcoxon rank sum test with continuity correction</span><br><span class="line">## </span><br><span class="line">## data:  1:10 and 10:20</span><br><span class="line">## W &#x3D; 0.5, p-value &#x3D; 1e-04</span><br><span class="line">## alternative hypothesis: true location shift is not equal to 0</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 符号秩检验</span></span><br><span class="line">wilcox.test(<span class="number">1</span>:<span class="number">10</span>, <span class="number">10</span>:<span class="number">19</span>, paired = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning in wilcox.test.default(1:10, 10:19, paired &#x3D; TRUE): cannot compute exact p-value with</span><br><span class="line">## ties</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Wilcoxon signed rank test with continuity correction</span><br><span class="line">## </span><br><span class="line">## data:  1:10 and 10:19</span><br><span class="line">## V &#x3D; 0, p-value &#x3D; 0.002</span><br><span class="line">## alternative hypothesis: true location shift is not equal to 0</span><br></pre></td></tr></table></figure><h4 id="多均值比较"><a href="#多均值比较" class="headerlink" title="多均值比较"></a>多均值比较</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Kruskal-Wallis 秩和检验</span></span><br><span class="line">kruskal.test(wt ~ factor(cyl), data = mtcars)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Kruskal-Wallis rank sum test</span><br><span class="line">## </span><br><span class="line">## data:  wt by factor(cyl)</span><br><span class="line">## Kruskal-Wallis chi-squared &#x3D; 23, df &#x3D; 2, p-value &#x3D; 1e-05</span><br></pre></td></tr></table></figure><h4 id="方差检验"><a href="#方差检验" class="headerlink" title="方差检验"></a>方差检验</h4><p>使用Fligner-Killeen（中位数）检验完成不同组别的方差比较  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fligner.test(wt ~ cyl, data = mtcars)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Fligner-Killeen test of homogeneity of variances</span><br><span class="line">## </span><br><span class="line">## data:  wt by cyl</span><br><span class="line">## Fligner-Killeen:med chi-squared &#x3D; 0.5, df &#x3D; 2, p-value &#x3D; 0.8</span><br></pre></td></tr></table></figure><h2 id="离散数据"><a href="#离散数据" class="headerlink" title="离散数据"></a>离散数据</h2><h3 id="比例检验"><a href="#比例检验" class="headerlink" title="比例检验"></a>比例检验</h3><p>使用 <code>prop.test()</code> 比较两组观测值发生的概率是否有差异。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">heads &lt;- rbinom(<span class="number">1</span>, size = <span class="number">100</span>, prob = <span class="number">.5</span>)</span><br><span class="line">prop.test(heads, <span class="number">100</span>)  </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## 1-sample proportions test with continuity correction</span><br><span class="line">## </span><br><span class="line">## data:  heads out of 100, null probability 0.5</span><br><span class="line">## X-squared &#x3D; 2, df &#x3D; 1, p-value &#x3D; 0.1</span><br><span class="line">## alternative hypothesis: true p is not equal to 0.5</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  0.477 0.677</span><br><span class="line">## sample estimates:</span><br><span class="line">##    p </span><br><span class="line">## 0.58</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prop.test(heads, <span class="number">100</span>, p = <span class="number">0.3</span>, correct = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## 1-sample proportions test without continuity correction</span><br><span class="line">## </span><br><span class="line">## data:  heads out of 100, null probability 0.3</span><br><span class="line">## X-squared &#x3D; 37, df &#x3D; 1, p-value &#x3D; 1e-09</span><br><span class="line">## alternative hypothesis: true p is not equal to 0.3</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  0.482 0.672</span><br><span class="line">## sample estimates:</span><br><span class="line">##    p </span><br><span class="line">## 0.58</span><br></pre></td></tr></table></figure><h3 id="二项式检验"><a href="#二项式检验" class="headerlink" title="二项式检验"></a>二项式检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binom.test(c(<span class="number">682</span>, <span class="number">243</span>), p = <span class="number">3</span>/<span class="number">4</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Exact binomial test</span><br><span class="line">## </span><br><span class="line">## data:  c(682, 243)</span><br><span class="line">## number of successes &#x3D; 682, number of trials &#x3D; 925, p-value &#x3D; 0.4</span><br><span class="line">## alternative hypothesis: true probability of success is not equal to 0.75</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  0.708 0.765</span><br><span class="line">## sample estimates:</span><br><span class="line">## probability of success </span><br><span class="line">##                  0.737</span><br></pre></td></tr></table></figure><h3 id="列联表"><a href="#列联表" class="headerlink" title="列联表"></a>列联表</h3><p>确定两个分类变量是否相关  </p><h4 id="Fisher精确检验"><a href="#Fisher精确检验" class="headerlink" title="Fisher精确检验"></a>Fisher精确检验</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TeaTasting &lt;-</span><br><span class="line">matrix(c(<span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>),</span><br><span class="line">       nrow = <span class="number">2</span>,</span><br><span class="line">       dimnames = list(Guess = c(<span class="string">&quot;Milk&quot;</span>, <span class="string">&quot;Tea&quot;</span>),</span><br><span class="line">                       Truth = c(<span class="string">&quot;Milk&quot;</span>, <span class="string">&quot;Tea&quot;</span>)))</span><br><span class="line">fisher.test(TeaTasting, alternative = <span class="string">&quot;greater&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Fisher&#39;s Exact Test for Count Data</span><br><span class="line">## </span><br><span class="line">## data:  TeaTasting</span><br><span class="line">## p-value &#x3D; 0.2</span><br><span class="line">## alternative hypothesis: true odds ratio is greater than 1</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##  0.314   Inf</span><br><span class="line">## sample estimates:</span><br><span class="line">## odds ratio </span><br><span class="line">##       6.41</span><br></pre></td></tr></table></figure><p>当样本数比较多时，使用卡方检验代替  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisq.test(TeaTasting)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Warning in chisq.test(TeaTasting): Chi-squared approximation may be incorrect</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction</span><br><span class="line">## </span><br><span class="line">## data:  TeaTasting</span><br><span class="line">## X-squared &#x3D; 0.5, df &#x3D; 1, p-value &#x3D; 0.5</span><br></pre></td></tr></table></figure><p>对于三变量的混合影响，使用 Cochran-Mantel-Haenszel 检验。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Rabbits &lt;-</span><br><span class="line">array(c(<span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">5</span>,</span><br><span class="line">        <span class="number">3</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>,</span><br><span class="line">        <span class="number">6</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">4</span>,</span><br><span class="line">        <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">        <span class="number">2</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">      dim = c(<span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>),</span><br><span class="line">      dimnames = list(</span><br><span class="line">          Delay = c(<span class="string">&quot;None&quot;</span>, <span class="string">&quot;1.5h&quot;</span>),</span><br><span class="line">          Response = c(<span class="string">&quot;Cured&quot;</span>, <span class="string">&quot;Died&quot;</span>),</span><br><span class="line">          Penicillin.Level = c(<span class="string">&quot;1/8&quot;</span>, <span class="string">&quot;1/4&quot;</span>, <span class="string">&quot;1/2&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;4&quot;</span>)))</span><br><span class="line">Rabbits</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">## , , Penicillin.Level &#x3D; 1&#x2F;8</span><br><span class="line">## </span><br><span class="line">##       Response</span><br><span class="line">## Delay  Cured Died</span><br><span class="line">##   None     0    6</span><br><span class="line">##   1.5h     0    5</span><br><span class="line">## </span><br><span class="line">## , , Penicillin.Level &#x3D; 1&#x2F;4</span><br><span class="line">## </span><br><span class="line">##       Response</span><br><span class="line">## Delay  Cured Died</span><br><span class="line">##   None     3    3</span><br><span class="line">##   1.5h     0    6</span><br><span class="line">## </span><br><span class="line">## , , Penicillin.Level &#x3D; 1&#x2F;2</span><br><span class="line">## </span><br><span class="line">##       Response</span><br><span class="line">## Delay  Cured Died</span><br><span class="line">##   None     6    0</span><br><span class="line">##   1.5h     2    4</span><br><span class="line">## </span><br><span class="line">## , , Penicillin.Level &#x3D; 1</span><br><span class="line">## </span><br><span class="line">##       Response</span><br><span class="line">## Delay  Cured Died</span><br><span class="line">##   None     5    1</span><br><span class="line">##   1.5h     6    0</span><br><span class="line">## </span><br><span class="line">## , , Penicillin.Level &#x3D; 4</span><br><span class="line">## </span><br><span class="line">##       Response</span><br><span class="line">## Delay  Cured Died</span><br><span class="line">##   None     2    0</span><br><span class="line">##   1.5h     5    0</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mantelhaen.test(Rabbits)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Mantel-Haenszel chi-squared test with continuity correction</span><br><span class="line">## </span><br><span class="line">## data:  Rabbits</span><br><span class="line">## Mantel-Haenszel X-squared &#x3D; 4, df &#x3D; 1, p-value &#x3D; 0.05</span><br><span class="line">## alternative hypothesis: true common odds ratio is not equal to 1</span><br><span class="line">## 95 percent confidence interval:</span><br><span class="line">##   1.03 47.73</span><br><span class="line">## sample estimates:</span><br><span class="line">## common odds ratio </span><br><span class="line">##                 7</span><br></pre></td></tr></table></figure><h4 id="列联表非参数检验"><a href="#列联表非参数检验" class="headerlink" title="列联表非参数检验"></a>列联表非参数检验</h4><p>Friedman 秩和检验是一个非参数版本的双边 ANOVA 检验。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Hollander &amp; Wolfe (1973), p. 140ff.</span></span><br><span class="line"><span class="comment">## Comparison of three methods (&quot;round out&quot;, &quot;narrow angle&quot;, and</span></span><br><span class="line"><span class="comment">##  &quot;wide angle&quot;) for rounding first base.  For each of 18 players</span></span><br><span class="line"><span class="comment">##  and the three method, the average time of two runs from a point on</span></span><br><span class="line"><span class="comment">##  the first base line 35ft from home plate to a point 15ft short of</span></span><br><span class="line"><span class="comment">##  second base is recorded.</span></span><br><span class="line">RoundingTimes &lt;-</span><br><span class="line">matrix(c(<span class="number">5.40</span>, <span class="number">5.50</span>, <span class="number">5.55</span>,</span><br><span class="line">         <span class="number">5.85</span>, <span class="number">5.70</span>, <span class="number">5.75</span>,</span><br><span class="line">         <span class="number">5.20</span>, <span class="number">5.60</span>, <span class="number">5.50</span>,</span><br><span class="line">         <span class="number">5.55</span>, <span class="number">5.50</span>, <span class="number">5.40</span>,</span><br><span class="line">         <span class="number">5.90</span>, <span class="number">5.85</span>, <span class="number">5.70</span>,</span><br><span class="line">         <span class="number">5.45</span>, <span class="number">5.55</span>, <span class="number">5.60</span>,</span><br><span class="line">         <span class="number">5.40</span>, <span class="number">5.40</span>, <span class="number">5.35</span>,</span><br><span class="line">         <span class="number">5.45</span>, <span class="number">5.50</span>, <span class="number">5.35</span>,</span><br><span class="line">         <span class="number">5.25</span>, <span class="number">5.15</span>, <span class="number">5.00</span>,</span><br><span class="line">         <span class="number">5.85</span>, <span class="number">5.80</span>, <span class="number">5.70</span>,</span><br><span class="line">         <span class="number">5.25</span>, <span class="number">5.20</span>, <span class="number">5.10</span>,</span><br><span class="line">         <span class="number">5.65</span>, <span class="number">5.55</span>, <span class="number">5.45</span>,</span><br><span class="line">         <span class="number">5.60</span>, <span class="number">5.35</span>, <span class="number">5.45</span>,</span><br><span class="line">         <span class="number">5.05</span>, <span class="number">5.00</span>, <span class="number">4.95</span>,</span><br><span class="line">         <span class="number">5.50</span>, <span class="number">5.50</span>, <span class="number">5.40</span>,</span><br><span class="line">         <span class="number">5.45</span>, <span class="number">5.55</span>, <span class="number">5.50</span>,</span><br><span class="line">         <span class="number">5.55</span>, <span class="number">5.55</span>, <span class="number">5.35</span>,</span><br><span class="line">         <span class="number">5.45</span>, <span class="number">5.50</span>, <span class="number">5.55</span>,</span><br><span class="line">         <span class="number">5.50</span>, <span class="number">5.45</span>, <span class="number">5.25</span>,</span><br><span class="line">         <span class="number">5.65</span>, <span class="number">5.60</span>, <span class="number">5.40</span>,</span><br><span class="line">         <span class="number">5.70</span>, <span class="number">5.65</span>, <span class="number">5.55</span>,</span><br><span class="line">         <span class="number">6.30</span>, <span class="number">6.30</span>, <span class="number">6.25</span>),</span><br><span class="line">       nrow = <span class="number">22</span>,</span><br><span class="line">       byrow = <span class="literal">TRUE</span>,</span><br><span class="line">       dimnames = list(<span class="number">1</span> : <span class="number">22</span>,</span><br><span class="line">                       c(<span class="string">&quot;Round Out&quot;</span>, <span class="string">&quot;Narrow Angle&quot;</span>, <span class="string">&quot;Wide Angle&quot;</span>)))</span><br><span class="line">friedman.test(RoundingTimes)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Friedman rank sum test</span><br><span class="line">## </span><br><span class="line">## data:  RoundingTimes</span><br><span class="line">## Friedman chi-squared &#x3D; 11, df &#x3D; 2, p-value &#x3D; 0.004</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R Docker tutorial</title>
      <link href="2020/07/31/r-docker-tutorial/"/>
      <url>2020/07/31/r-docker-tutorial/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p>这是专门为具有 R 和 RStudio 知识的朋友设计的 Docker 教程。该介绍旨在帮助需要 Docker 进行项目的人们。我们首先解释 Docker 是什么以及为什么有用。然后，我们将详细介绍如何将其用于可复制的分析项目。  </p><h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>在开始之前，请根据下面的指南安装需要的Docker：  </p><ul><li><a href="https://docs.docker.com/mac/step_one/">mac</a>  </li><li><a href="https://docs.docker.com/linux/step_one/">linux</a>  </li><li><a href="https://docs.docker.com/windows/step_one/">windows</a>  </li></ul><h2 id="什么是-Docker？为什么我要使用它？"><a href="#什么是-Docker？为什么我要使用它？" class="headerlink" title="什么是 Docker？为什么我要使用它？"></a>什么是 Docker？为什么我要使用它？</h2><h3 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h3><ul><li>理解 Docker 的基本思想  </li><li>了解为什么 Docker 非常有用  </li></ul><h3 id="为什么要使用Docker"><a href="#为什么要使用Docker" class="headerlink" title="为什么要使用Docker"></a>为什么要使用Docker</h3><p>想象一下，你正在 R 中进行分析，然后将代码发送给朋友。你的朋友在完全相同的数据集上运行此代码，但结果略有不同。这可能有多种原因，例如操作系统不同，R 软件包的版本不同等。Docker 可以解决这样的问题。  </p><p><strong>可以将Docker容器视为你计算机内部的一台计算机</strong>。这个虚拟计算机的妙处在于你可以将其发送给你的朋友。当他们启动计算机并运行你的代码时，他们将获得与你完全相同的结果。  </p><p><img src="/images/r-docker-tutorial/computerception.jfif" alt="computerception">  </p><p>简单来说，你因为下面的一些原因使用 Docker：  </p><ul><li>它允许你解决从操作系统到R或latex版本上的依赖  </li><li>它使你的分析可重复  </li></ul><p>还有一些 Docker 可以发挥用处的地方：  </p><ul><li>可移植性：由于 Docker 容器可以轻松地发送到另一台机器，因此你可以在自己的计算机上设置好所有内容，然后在更强大的机器上运行分析。  </li><li>可共享性：你可以将 Docker 容器发送给任何知道如何使用 Docker 的人。  </li></ul><h3 id="基本词汇"><a href="#基本词汇" class="headerlink" title="基本词汇"></a>基本词汇</h3><p>下面会经常出现<strong>镜像</strong>和<strong>容器</strong>这两个词。镜像的实例称为容器。镜像是虚拟计算机的设置。如果运行此镜像，将拥有它的一个实例，我们将其称为容器。可以有多个运行相同镜像的容器。  </p><h2 id="在-Docker-中启动-RStudio"><a href="#在-Docker-中启动-RStudio" class="headerlink" title="在 Docker 中启动 RStudio"></a>在 Docker 中启动 RStudio</h2><h3 id="学习目标-1"><a href="#学习目标-1" class="headerlink" title="学习目标"></a>学习目标</h3><ul><li>在 Docker 中启动 RStudio  </li><li>将磁盘与 Docker 镜像链接  </li><li>载入容器  </li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>首先参考 <a href="https://docs.docker.com/get-started/">install Docker</a> 进行安装，没有必要完成链接中所有的教程，有需要再回看它们。  </p><h3 id="在-Docker-中启动-RStudio-1"><a href="#在-Docker-中启动-RStudio-1" class="headerlink" title="在 Docker 中启动 RStudio"></a>在 Docker 中启动 RStudio</h3><p>要启动 Docker，我们需要做的第一件事是打开一个 <code>Unix Shell</code>。如果你在<code>Mac</code>或<code>Windows</code> 上，在最后一步，你安装了一个叫<em>Docker快速启动终端</em>;现在打开它——它看起来应该像一个普通的 shell 提示符(<code>~$</code>)，但实际上它指向的是一个 Docker 默认运行的 linux 虚拟机，而在本教程的其余部分，除非另有说明，你应该在这里完成所有操作。如果您在 linux 机器上，那么您可以使用旧的终端提示符。</p><p>在 <code>Mac</code>上，你也可以选择你的终端并配置 Docker使用。特别是如果你得到错误，不能连接到Docker守护进程。Docker 守护进程是否在此主机上运行?。在教程的某个时候，运行下面的命令可能会解决你的问题:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval &quot;$(docker-machine env default)&quot;</span><br></pre></td></tr></table></figure><p>接下来，我们将让Docker运行一个已经存在的映像，我们会使用来自<a href="https://github.com/rocker-org/rocker/wiki">Rocker</a>的<code>verse</code>Docker镜像。它将允许我们在容器内运行RStudio，并且已经安装了许多有用的R包。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -p 8787:8787 rocker&#x2F;verse</span><br></pre></td></tr></table></figure><p><code>--rm</code>、<code>-p</code>是允许你自定义如何运行容器的标志。<code>-p</code>告诉 Docker 你将使用一个端口在你的浏览器中看到 RStudio(我们随后指定为端口<code>8787:8787</code>), <code>—rm</code> 确保当我们退出容器时，容器被删除。如果我们不这样做，每次我们运行一个容器，它的一个版本将被保存到我们的本地计算机。这最终会导致大量磁盘空间的浪费，直到我们手动删除这些容器。稍后，我们将向你展示如何保存容器(如果你想这样做的话)。  </p><p>如果你尝试运行一个没有在本地安装的 Docker 容器，那么Docker会自动在Docker Hub(一个在线的Docker 镜像存储库)上搜索该容器，如果它存在，就下载它。  </p><p>上面的命令将导致 RStudio-Server 不可见地启动。要连接到它，打开一个浏览器，输入<code>http://</code>，然后加上你的 <code>ip</code> 地址，再加上<code>:8787</code>。如果您运行的是 Mac 或 Windows 机器，您将在启动 Docker Quickstart终端时出现在终端中的第一行文本中找到 ip 地址。例如，你应该会看到:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">                        ##         .</span><br><span class="line">                  ## ## ##        &#x3D;&#x3D;</span><br><span class="line">               ## ## ## ## ##    &#x3D;&#x3D;&#x3D;</span><br><span class="line">           &#x2F;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\___&#x2F; &#x3D;&#x3D;&#x3D;</span><br><span class="line">      ~~~ &#123;~~ ~~~~ ~~~ ~~~~ ~~~ ~ &#x2F;  &#x3D;&#x3D;&#x3D;- ~~~</span><br><span class="line">           \______ o           __&#x2F;</span><br><span class="line">             \    \         __&#x2F;</span><br><span class="line">              \____\_______&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker is configured to use the default machine with IP 192.168.99.100</span><br><span class="line">For help getting started, check out the docs at https:&#x2F;&#x2F;docs.docker.com</span><br></pre></td></tr></table></figure><p>你应该在浏览器中键入 URL <code>http://192.168.99.100:8787</code>  </p><p>如果你在一台 Linux 机器上运行，你可以使用 localhost 作为 ip 地址，例如：<code>http://localhost:8787</code>  </p><p>这将会将你导向 RStudio 登录界面，使用下面的信息登录：  </p><p>username: <code>rstudio</code> password: <code>rstudio</code>  </p><p>现在你就可以在浏览器中使用 RStudio 工作了，就像你使用 Rstudio 桌面版一样。</p><p>下面是一个截图示例：  </p><p><img src="/images/r-docker-tutorial/Rstudio.png" alt="Rstudio">  </p><p>现在尝试查看虚拟计算机的文件(docker容器)。点击<code>File -&gt; Open File</code>,你将看到当前没有文件。原因是这个镜像现在没有文件。然后打开一个新的R脚本，例如：<code>file -&gt; New file -&gt; R Script</code>，然后j键入以下脚本，并保存：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># make x the numbers from 1 to 5, and y the numbers from 6-10</span><br><span class="line">x &lt;- 1:5</span><br><span class="line">y &lt;- 6:10</span><br><span class="line"></span><br><span class="line"># plot x against y</span><br><span class="line">plot(x, y)</span><br></pre></td></tr></table></figure><p>如果您现在再次查看您的文件，您将看到建立的脚本文件。  </p><p>因为我们刚才启动镜像时使用了 <code>--rm</code> 标记，所以在这个机器上创建的任何东西在关闭后都会消失。你可以试试将上面的代码保存为一个文件，然后关闭浏览器，在终端上用 <code>Ctrl+C</code> 关掉容器，然后重新启动容器，看是否创建的文件是否依然存在。  </p><h3 id="将磁盘与-Docker-镜像连接以便于访问和保存数据文件"><a href="#将磁盘与-Docker-镜像连接以便于访问和保存数据文件" class="headerlink" title="将磁盘与 Docker 镜像连接以便于访问和保存数据文件"></a>将磁盘与 Docker 镜像连接以便于访问和保存数据文件</h3><p>这就引出了一个问题，如果在退出容器时删除了容器，我们如何保存我们的工作?一种解决方案是将卷(例如本地硬盘驱动器)链接到容器，这样您就可以访问那里的数据并在那里保存数据。  </p><p>这一次当我们启动容器时使用 <code>-v</code> 标记指定我们项目的根目录，如下所示（你的目录可能有所不同），:左边是你本地计算机的路径，右边是容器里的路径，一般以 /home/rstudio/ 开始（这个镜像已经默认创建了用户名 RStudio 和进行了相关配置）  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -p 8787:8787 -v &#x2F;Users&#x2F;tiffanytimbers&#x2F;Documents&#x2F;DC&#x2F;r-docker-tutorial:&#x2F;home&#x2F;rstudio&#x2F;r-docker-tutorial rocker&#x2F;verse</span><br></pre></td></tr></table></figure><p>然后你就可以再一次的在浏览器中打开Rstudio  </p><p>这一次你在 Docker 容器中启动 RStudio 后，你可以查看到下面映射的文件目录。然后就可以载入数据进行分析工作了：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># load gapminder data from a csv on your computer</span><br><span class="line">gap5yr &lt;- read.csv(file &#x3D; &#39;data&#x2F;gapminder-FiveYearData.csv&#39;)</span><br></pre></td></tr></table></figure><p>画一个分析图  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># load ggplot library</span><br><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line"># plot GDP against  life expectancy</span><br><span class="line">qplot(gap5yr$lifeExp, gap5yr$gdpPercap)</span><br><span class="line"></span><br><span class="line"># save the plot</span><br><span class="line">ggsave(filename &#x3D; &#39;data&#x2F;GDP_LifeExp.pdf&#39;)</span><br></pre></td></tr></table></figure><p>让我们将脚本保存为 <code>plot_GDP_LifeExp.R</code>，然后关闭容器，看在本地目录下是否能看到脚本和绘图文件。  </p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>在这节课中，我们学习了如何启动Docker容器来允许我们在浏览器中运行RStudio。我们知道在运行Docker时使用<code>-rm</code>标志会使容器短暂;这意味着它会在我们关闭容器后被自动删除。我们这样做是为了不在我们的机器上积累大量的容器和浪费空间。我们还了解到，如果我们想访问和保存数据、脚本和任何其他文件，我们可以将笔记本电脑的一个卷连接到Docker容器。  </p><p>我们使用的容器已经安装了R、RStudio和几个有用的R包。在后面的课程中，我们将学习如何修改这个容器来安装新的包，以及在哪里可以找到对我们的工作可能有用的其他Docker容器。  </p><h2 id="安装-R-包"><a href="#安装-R-包" class="headerlink" title="安装 R 包"></a>安装 R 包</h2><h3 id="在-RStudio-内安装-R-包"><a href="#在-RStudio-内安装-R-包" class="headerlink" title="在 RStudio 内安装 R 包"></a>在 RStudio 内安装 R 包</h3><p>您可以通过使用<code>install.packages()</code>在浏览器中使用RStudio安装R包，就像在桌面RStudio上一样。让我们像以前一样启动一个<code>verse</code> Docker容器来运行RStudio，并尝试安装<code>gapminder</code>包，加载它并查看数据。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># install package</span><br><span class="line">install.packages(&#39;gapminder&#39;)</span><br><span class="line"></span><br><span class="line"># load library</span><br><span class="line">library(gapminder)</span><br><span class="line"></span><br><span class="line"># peek at data</span><br><span class="line">head(gapminder)</span><br></pre></td></tr></table></figure><p>太好了！现在我们已经安装好包并可以进行工作。但是等等，如果我们退出了容器会发生什么？安装的包会被删除，因为我们没有保存这个版本的 Docker 镜像。我们需要创建一个镜像，这样当利用它创建一个新的容器时，<code>gapminder</code> 包也已经安装好了，可以直接使用。  </p><p>为了做到这一点，我们需要运行 <code>docker commit</code>（类似 <code>git commit</code>）保存修改。记住，这个操作需要在关闭容器前运行，一般我们另外打开一个终端进行这个操作。  </p><p>我们可以使用下面的命令进行查看（类似 linux <code>ps</code> 命令）：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>输出应该类似下面展示，哈希值记录了容器 ID：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4a6a528b35da        rocker&#x2F;verse        &quot;&#x2F;init&quot;             2 minutes ago       Up 2 minutes        0.0.0.0:8787-&gt;8787&#x2F;tcp   silly_meninsky</span><br></pre></td></tr></table></figure><p>现在我们在新的终端中运行下面命令，并记录修改信息：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m &quot;verse + gapminder&quot; 4a6a528b35da verse_gapminder</span><br></pre></td></tr></table></figure><p>为了保存这个Docker映像，我们必须提供一个提交消息来描述我们对映像所做的更改。我们通过传递<code>-m</code>标志，后跟引号中的消息来实现这一点。我们还需要为这个版本的容器(这里是<code>4a6a528b35da</code>)提供特定的散列。最后，我们还为新映像提供一个新名称。我们将这个新图像命名为<code>verse_gapminder</code>。  </p><p>我们可以看到，我们现在有两个Docker镜像保存在我们的电脑上  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY                           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">verse_gapminder                      latest              bb38976d03cf        57 seconds ago      1.955 GB</span><br><span class="line">rocker&#x2F;verse                         latest              0168d115f220        3 days ago          1.954 GB</span><br></pre></td></tr></table></figure><p>你可以通过从每个映像运行Docker容器来测试它是否工作。您将发现<code>Gapminder</code>包只安装在<code>verse_gapminder</code>映像上，而没有安装在<code>rocker/verse</code>映像上。  </p><h3 id="安装-R-系统外部依赖"><a href="#安装-R-系统外部依赖" class="headerlink" title="安装 R 系统外部依赖"></a>安装 R 系统外部依赖</h3><p>许多R包都有R外部的依赖关系，例如<code>GSL</code>、<code>GDAL</code>、<code>JAGS</code>等等。要在正在运行的rocker容器上安装这些文件，您需要进入docker命令行(在一个新的终端窗口中)并键入以下命令:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps # find the ID of the running container you want to add a package to</span><br><span class="line">docker exec -it &lt;container-id&gt; bash # a docker command to start a bash shell in your container</span><br><span class="line">apt-get install libgsl0-dev # install the package, in this case GSL</span><br></pre></td></tr></table></figure><p>如果您在运行<code>apt-get install libgsl0-dev</code>时报错，尝试先运行<code>apt-get update</code>。  </p><p>为了保存安装的依赖，依旧需要进行修改的提交：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m &quot;verse + gapminder + GSL&quot; &lt;container id&gt;  verse_gapminder_gsl</span><br></pre></td></tr></table></figure><p>现在，您可以进入输入<code>docker exec</code>命令的终端窗口，并通过输入<code>exit</code>关闭docker容器  </p><h2 id="对-Docker-Hub-推送或拉取镜像"><a href="#对-Docker-Hub-推送或拉取镜像" class="headerlink" title="对 Docker Hub 推送或拉取镜像"></a>对 Docker Hub 推送或拉取镜像</h2><h3 id="学习目标-2"><a href="#学习目标-2" class="headerlink" title="学习目标"></a>学习目标</h3><ul><li>理解镜像来自哪里  </li><li>从 Docker Hub 拉取镜像  </li><li>推送镜像到 Docker Hub  </li></ul><h3 id="从-Docker-Hub-获取镜像"><a href="#从-Docker-Hub-获取镜像" class="headerlink" title="从 Docker Hub 获取镜像"></a>从 Docker Hub 获取镜像</h3><p><a href="https://hub.docker.com/">Docker Hub</a> 是一个存储 Docker 镜像的地方，当我们运行下面的命令时，软件首选检查镜像是否存在于你的计算机上。如果不存在，它会自动去 Docker Hub 搜索和下载。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -p 8787:8787 rocker&#x2F;verse</span><br></pre></td></tr></table></figure><p>如果你想要从 Docker Hub 上拉取镜像而不运行它，可以使用命令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull rocker&#x2F;verse</span><br></pre></td></tr></table></figure><h3 id="将镜像放到-Docker-Hub"><a href="#将镜像放到-Docker-Hub" class="headerlink" title="将镜像放到 Docker Hub"></a>将镜像放到 Docker Hub</h3><p>想象一下如果你自己创建了一个镜像，然后想要与其他人分享，你可以在 <a href="https://hub.docker.com/">https://hub.docker.com/</a> 创建一个账号。验证完邮箱之后，你就可以将你的镜像上传了：  </p><ol><li>登录 <a href="https://hub.docker.com/">https://hub.docker.com/</a>  </li><li>点击创建仓库  </li><li>设置名字后点击创建  </li><li>使用命令行登录 Docker Hub  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login --username&#x3D;yourhubusername --email&#x3D;youremail@company.com</span><br></pre></td></tr></table></figure><p>当提示输入你的密码。如果一切正常，您将得到一个类似的消息  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: login credentials saved in &#x2F;home&#x2F;username&#x2F;.docker&#x2F;config.json</span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure><ol start="5"><li>检查镜像的 ID  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>然后你会看到类似下面的输出：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY              TAG       IMAGE ID         CREATED           SIZE</span><br><span class="line">verse_gapminder_gsl     latest    023ab91c6291     3 minutes ago     1.975 GB</span><br><span class="line">verse_gapminder         latest    bb38976d03cf     13 minutes ago    1.955 GB</span><br><span class="line">rocker&#x2F;verse            latest    0168d115f220     3 days ago        1.954 GB</span><br></pre></td></tr></table></figure><p>然后标记你的镜像  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag bb38976d03cf yourhubusername&#x2F;verse_gapminder:firsttry</span><br></pre></td></tr></table></figure><p>这里镜像 ID 必须匹配，<code>fisttry</code> 是标签，一般选择一些容易识别的标签。  </p><ol start="6"><li>推送你的镜像：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push yourhubusername&#x2F;verse_gapminder</span><br></pre></td></tr></table></figure><p>现在所有人都可以使用你的镜像了！  </p><h3 id="保存和加载镜像"><a href="#保存和加载镜像" class="headerlink" title="保存和加载镜像"></a>保存和加载镜像</h3><p>将镜像推送到 Docker Hub 非常使用，但它有些缺点：</p><ol><li>受带宽限制  </li><li>推送意味着发布（私密需要额外付费） </li><li>当在一些计算节点上工作时，如果每一次你都拉取 Docker Hub 的镜像，速度会很慢  </li></ol><p>解决方案的在本地对你的镜像进行存档，这样你可以在需要的时候轻松载入。  </p><p>为了这一目的，你可以使用 <code>docker save</code> 命令。例如，让我们保存一个我们制作的<code>verse_gapminder</code> docker镜像的本地副本:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save verse_gapminder &gt; verse_gapminder.tar</span><br></pre></td></tr></table></figure><p>如果我们想要从存档中载入镜像，使用下面的命令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load --input verse_gapminder.tar</span><br></pre></td></tr></table></figure><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><p>前面我们学习了一个可以在 Docker 中运行 RStudio 的基础镜像，学习如何使用 <code>docker commit</code> 修改镜像的内容。这是一个非常棒的技术，它让我们可以进行重复，但如果我们想要更简单地修改镜像中的内容，并有一份清晰的记录，该怎么办呢？这在维护运行环境时非常有用，这些环境可能会随着项目的变化而发展，<code>Dockerfiles</code>可以帮助维护这些环境。  </p><p><code>Dockerfiles</code>是一组关于如何向基本映像添加内容的指令。它们在一系列层中构建自定义图像。在一个名为<code>Dockerfile</code>的新文件中，放入以下内容:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM rocker&#x2F;verse:latest</span><br></pre></td></tr></table></figure><p>这告诉 Docker 以 <code>rocker/verse</code> 基础镜像作为开始。<code>FROM</code> 命令必须是第一条指令。  </p><p>接下来，让我们基于该基础镜像添加一层，让 <code>gapminder</code> 提取安装好可以直接使用：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RUN R -e &quot;install.packages(&#39;gapminder&#39;, repos &#x3D; &#39;http:&#x2F;&#x2F;cran.us.r-project.org&#39;)&quot;</span><br></pre></td></tr></table></figure><p><code>RUN</code> 命令可以执行 Shell 命令，这个例子中，我们直接通过 Shell 调用包安装命令。保存你的 <code>Dockerfile</code>，返回终端，现在我们可以利用下面的命令构建一个自定义镜像：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t my-r-image .</span><br></pre></td></tr></table></figure><p><code>-t my-r-image</code>  指定镜像名字（要小写），. 指定构建镜像所需要的资源来源，这里指当前目录。查看镜像：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>你应该在列表中看到<code>my-r-image</code>。启动你的新镜像:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -p 8787:8787 my-r-image</span><br></pre></td></tr></table></figure><p>在 RStudio 控制台中尝使用<code>gapminder</code>：  </p><figure class="highlight plain"><figcaption><span>eval</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library(&#39;gapminder&#39;)</span><br><span class="line">gapminder</span><br></pre></td></tr></table></figure><p>现在，<code>gapminder</code>已经被预装好了，可以进入你的新docker镜像了。  </p><p>有时候我们想要添加一些静态文件到镜像中，这可以使用 <code>ADD</code> 命令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADD data&#x2F;gapminder-FiveYearData.csv &#x2F;home&#x2F;rstudio&#x2F;</span><br></pre></td></tr></table></figure><p>重新建立你的Docker镜像  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t my-r-image .</span><br></pre></td></tr></table></figure><p>然后再次启动它  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -p 8787:8787 my-r-image</span><br></pre></td></tr></table></figure><p>在浏览器中返回到RStudio, <code>gapmin - fiveyeardata .csv</code>将出现在RStudio可见的文件中。通过这种方式，我们可以捕获文件作为Docker映像的一部分，因此它们始终与映像的其余部分处于完全相同的状态。  </p><h3 id="高级技巧：缓存层"><a href="#高级技巧：缓存层" class="headerlink" title="高级技巧：缓存层"></a>高级技巧：缓存层</h3><p>在构建和重构建你的 Docker 镜像时，你可能注意到了类似下面的输出：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Step 2 : RUN R -e &quot;install.packages(&#39;gapminder&#39;, repos &#x3D; &#39;http:&#x2F;&#x2F;cran.us.r-project.org&#39;)&quot;</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; fa9be67b52d1</span><br></pre></td></tr></table></figure><p>注意到使用的是命令的缓存版本。当你重新构建映像时，Docker 会检查该映像的以前版本，以查看以前是否执行了相同的命令；每一个步骤都被保存为一个单独的层，Docker 非常聪明，可以重用那些层，如果它们没有改变，并且和前面一样的顺序。因此，一旦你弄清楚了你的安装过程的一部分(特别是如果它是一个缓慢的部分)，把它放在你的Dockerfile的顶部，不要在这些行上面或中间放任何东西，特别是那些经常变化的东西;这可以大大加快你的构建过程。  </p><blockquote><p>简单的说，重构建只修改有变动的步骤，如果很多命令没有问题，尽量放到顶部。  </p></blockquote><h2 id="共享你的所有分析"><a href="#共享你的所有分析" class="headerlink" title="共享你的所有分析"></a>共享你的所有分析</h2><p>现在我们已经学习了如何使用dockerfile，我们可以将所有分析发送给协作者。我们将共享一个包含运行分析、数据和分析所需的所有依赖项的映像。  </p><p>我们将通过dockerfile构建此镜像。我们以基础的<code>verse rocker</code>镜像开始。这一次我们希望拥有一个特定的R版本(3.3.2)。可以通过给镜像加上标签实现。这对于我们重现是非常有用的。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FROM rocker&#x2F;verse:3.3.2</span><br></pre></td></tr></table></figure><p>作为我们分析的一部分，我们将使用<code>gapminder</code>数据。我们需要将这个包安装到docker映像中。让我们通过修改dockerfile来安装这个包。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RUN R -e &quot;install.packages(&#39;gapminder&#39;, repos &#x3D; &#39;http:&#x2F;&#x2F;cran.us.r-project.org&#39;)&quot;</span><br></pre></td></tr></table></figure><p>现在我们只需要进行数据分析并将其添加到dockerfile中。  </p><p>为了进行分析，我们将创建一个预期寿命与人均gdp的图表。  </p><p>在一个新的R脚本上，让我们写以下分析内容:  </p><figure class="highlight plain"><figcaption><span>eval</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line">library(gapminder)</span><br><span class="line"></span><br><span class="line">life_expentancy_plot &lt;- ggplot(data &#x3D; gapminder) + </span><br><span class="line">    geom_point(aes(x &#x3D; lifeExp, y &#x3D; gdpPercap, colour &#x3D; continent)) </span><br></pre></td></tr></table></figure><p>我们将把这个脚本保存为<code>analysis.R</code>并将其添加到dockerfile中。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADD analysis.R &#x2F;home&#x2F;rstudio&#x2F;</span><br></pre></td></tr></table></figure><p>现在，我们可以构建映像并检查是否有想要与协作者共享的所有内容。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t my-analysis .</span><br></pre></td></tr></table></figure><p>我们的镜像将出现在镜像列表当中  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>启动你的新镜像，检查你所有想要的信息:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dp 8787:8787 my-analysis</span><br></pre></td></tr></table></figure><p>所有的信息都包含在镜像里了。  </p><p>现在我们可以把我们的分析推到dockerhub。  </p><p>在DockerHub上点击创建仓库，选取一个仓库名字（例如：<code>gapminder_my_analysis</code>）和一个描述，点击创建  </p><p>从命令行登录到Docker Hub  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login --username&#x3D;yourhubusername --email&#x3D;youremail@company.com</span><br></pre></td></tr></table></figure><p>登录认证后检查本地的镜像ID：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>你将会看到类似的信息  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">my-analysis                      latest              dc63d4790eaa        2 minutes ago       3.164 GB</span><br></pre></td></tr></table></figure><p>标记你的镜像  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag dc63d4790eaa yourhubusername&#x2F;gapminder_my_analysis:firsttry</span><br></pre></td></tr></table></figure><p>将映像推到创建的存储库  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push yourhubusername&#x2F;gapminder_my_analysis</span><br></pre></td></tr></table></figure><p>现在每个人都可以使用你的镜像。  </p><p>其他人可以使用以下命令获取你的镜像  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull yourhubusername&#x2F;gapminder_my_analysis:firsttry</span><br></pre></td></tr></table></figure><p>现在他们就拥有了你所有的信息。  </p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://ropenscilabs.github.io/r-docker-tutorial/">http://ropenscilabs.github.io/r-docker-tutorial/</a>  </p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 学习笔记(一)</title>
      <link href="2020/06/08/docker-i/"/>
      <url>2020/06/08/docker-i/</url>
      
        <content type="html"><![CDATA[<a id="more"></a> <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><strong>Docker</strong> 是一个开源的应用容器引擎，基于 <strong>Go 语言</strong> 并遵从 <code>Apache2.0</code> 协议开源。  </p><p><strong>Docker</strong> 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。  </p><h3 id="Docker的应用场景"><a href="#Docker的应用场景" class="headerlink" title="Docker的应用场景"></a>Docker的应用场景</h3><ul><li>Web 应用的自动化打包和发布。  </li><li>自动化测试和持续集成、发布。  </li><li>在服务型环境中部署和调整数据库或其他的后台应用。  </li><li>从头编译或者扩展现有的 OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。  </li></ul><h2 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h2><p><code>Docker</code> 的旧版本被称为 <code>docker</code>，<code>docker.io</code> 或 <code>docker-engine</code> 。如果已安装，请卸载它们：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure><p>首先安装依赖:  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common</span><br></pre></td></tr></table></figure><p>添加信任 Docker 的 GPG 公钥:  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>对于 amd64 架构的计算机，添加软件仓库:  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   <span class="string">&quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string">   <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable&quot;</span></span><br></pre></td></tr></table></figure><p>最后安装  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker --version</span><br><span class="line"><span class="comment">## Docker version 19.03.11, build 42e35e61f3</span></span><br></pre></td></tr></table></figure><h2 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h2><p><code>Docker</code> 允许你在容器内运行应用程序， 使用 <code>docker run</code> 命令来在容器内运行一个应用程序。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run ubuntu:15.10 /bin/<span class="built_in">echo</span> <span class="string">&quot;Hello world&quot;</span></span><br><span class="line"><span class="comment">## hello world</span></span><br></pre></td></tr></table></figure><p>参数解析：  </p><ul><li><strong>docker</strong> : Docker 的执行命令  </li><li><strong>run</strong> : 与<code>docker</code>命令组合运行一个特定的容器  </li><li><strong>ubuntu:15.10</strong> : 指定要运行的镜像，<code>Docker</code> 首先从本地主机上查找镜像是否存在，如果不存在，<code>Docker</code> 就会从镜像仓库 <code>Docker Hub</code> 下载公共镜像。  </li><li><strong>/bin/echo “Hello world”</strong> : 在启动的容器里执行的命令  </li></ul><p>连起来就是：<code>Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo &quot;Hello world&quot;，然后输出结果。</code>  </p><h2 id="交互运行"><a href="#交互运行" class="headerlink" title="交互运行"></a>交互运行</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-11-ubuntu:~$ sudo docker run -i -t ubuntu:15.10 /bin/bash</span><br><span class="line">root@2401df9ef044:/<span class="comment"># </span></span><br></pre></td></tr></table></figure><ul><li><strong>-t</strong>: 在新容器内指定一个伪终端或终端。  </li><li><strong>-i</strong>: 允许你对容器内的标准输入进行交互。  </li></ul><p>通过运行 <code>exit</code> 命令或者使用 <code>CTRL+D</code> 来退出容器。  </p><h2 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-11-ubuntu:~$ sudo docker run -d ubuntu:15.10 /bin/sh -c <span class="string">&quot;while true; do echo hello world; sleep 1; done&quot;</span></span><br><span class="line">9db349c972802d3a7627b27d3c9eb0c58888ad0c80a001b5d7e6f08813eed876</span><br></pre></td></tr></table></figure><p>输出的长字符串叫做容器 ID，对每个容器来说都是唯一的，我们可以通过容器 ID 来查看对应的容器发生了什么  </p><p>可以通过 <code>docker ps</code> 来查看容器的运行情况  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-11-ubuntu:~$ sudo docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">9db349c97280        ubuntu:15.10        <span class="string">&quot;/bin/sh -c &#x27;while t…&quot;</span>   11 seconds ago      Up 10 seconds                           tender_black</span><br></pre></td></tr></table></figure><p>输出详情介绍:  </p><ul><li><strong>CONTAINER ID</strong>: 容器 ID。  </li><li><strong>IMAGE</strong>: 使用的镜像。  </li><li><strong>COMMAND</strong>: 启动容器时运行的命令。  </li><li><strong>CREATED</strong>: 容器的创建时间。  </li><li><strong>STATUS</strong>: 容器状态。  </li><li><strong>PORTS</strong>: 容器的端口信息和使用的连接类型（tcp\udp）。  </li><li><strong>NAMES</strong>: 自动分配的容器名称。  </li></ul><blockquote><p>docker 运行有七种状态  </p><ul><li>created（已创建）  </li><li>restarting（重启中）  </li><li>running（运行中）  </li><li>removing（迁移中）  </li><li>paused（暂停）  </li><li>exited（停止）  </li><li>dead（死亡）  </li></ul></blockquote><p>使用<code>docker logs</code>查看输出结果  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-11-ubuntu:~$ sudo docker logs tender_black</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>使用<code>docker stop</code>停止容器  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-11-ubuntu:~$ sudo docker stop tender_black</span><br><span class="line">tender_black</span><br></pre></td></tr></table></figure><h2 id="docker-用户"><a href="#docker-用户" class="headerlink" title="docker 用户"></a>docker 用户</h2><p>docker进程使用Unix Socket而不是TCP端口。而默认情况下，Unix socket属于root用户，需要root权限才能访问。  </p><p>解决方案：  </p><ol><li>使用sudo获取管理员权限，运行docker命令  </li><li>docker守护进程启动的时候，会默认赋予名字为docker的用户组读写Unix socket的权限，因此只要创建docker用户组，并将当前用户加入到docker用户组中，那么当前用户就有权限访问Unix socket了，进而也就可以执行docker相关命令  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker     <span class="comment">#添加docker用户组</span></span><br><span class="line">sudo gpasswd -a <span class="variable">$USER</span> docker     <span class="comment">#将登陆用户加入到docker用户组中</span></span><br><span class="line">newgrp docker     <span class="comment">#更新用户组</span></span><br><span class="line">docker ps    <span class="comment">#测试docker命令是否可以使用sudo正常使用</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分类变量和连续变量的相关性计算</title>
      <link href="2020/06/01/classificated-continonus/"/>
      <url>2020/06/01/classificated-continonus/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在实际的应用过程中，我们往往需要计算两个变量之间的相关性。但是有一个问题————一般会有两类变量：连续型变量(continuous variable) 和 分类变量（categorical variable）。因此我们需要各自不同的统计度量来计算两两之间的相关性（continuous-continuous, categorical-categorical, continuous-categorical）  </p><p>而相关性问题又可以分成两个不同的子问题，即：  </p><ol><li>检验两个变量之间是否显著相关;  </li><li>定量两个变量之间的关联性  </li></ol><h2 id="categorical-categorical"><a href="#categorical-categorical" class="headerlink" title="categorical-categorical"></a>categorical-categorical</h2><p>当比较两个分类变量时，我们可以通过计算分类的频率从而构建出列联表。比如：我们想要知道性别（Gender）和获得基金资助（Grant）之间是否存在相关性。可能数据包含两列：(1) Gender（Male/Female）(2) Grant （Yes/No）。通过计算他们各自的频率可以得到列联表    </p><table>    <tr>        <td> </td>        <td> </td>        <th colspan="2">Gender</th>    </tr>    <tr>        <td> </td>        <td> </td>        <td>Male</td>        <td>Female</td>    </tr>    <tr>        <th rowspan="2">Grant</th>        <td>Yes</td>        <td>100</td>        <td>40</td>    </tr>    <tr>        <td>No</td>        <td>600</td>        <td>500</td>    </tr></table><p>通常情况下，我们一般使用卡方检验去检验两者之间是否有显著的相关性，然而我们去衡量两者之间的关系强弱的时候可以使用以下统计量：  </p><ol><li><a href="https://en.wikipedia.org/wiki/Goodman_and_Kruskal's_lambda">Goodman Kruskal’s lambda</a>  </li><li><a href="https://en.wikipedia.org/wiki/Phi_coefficient">Phi co-efficient</a> (uses chi-squared statistic)  </li><li><a href="https://en.wikipedia.org/wiki/Cram%C3%A9r's_V">Cramer’s V</a> (uses chi-squared statistic)  </li><li><a href="https://en.wikipedia.org/wiki/Tschuprow's_T">Tschuprow’s <em>T</em></a> (uses chi-squared statistic)  </li><li><a href="http://www.statisticshowto.com/contingency-coefficient/">Contingency coefficient C</a> (uses chi-squared statistic)  </li></ol><h2 id="continuous-categorical"><a href="#continuous-categorical" class="headerlink" title="continuous-categorical"></a><strong>continuous</strong>-<strong>categorical</strong></h2><p>对于此类事件，计算相关性的方法主要分为以下三种：  </p><h3 id="Point-biserial-Correlation"><a href="#Point-biserial-Correlation" class="headerlink" title="Point biserial Correlation"></a><strong>Point biserial Correlation</strong></h3><p><code>point biserial</code>相关系数是皮尔森相关系数的特例。需要</p><h3 id="Logistic-Regression"><a href="#Logistic-Regression" class="headerlink" title="Logistic Regression"></a><strong>Logistic Regression</strong></h3><h3 id="Kruskal-Wallis-H-Test"><a href="#Kruskal-Wallis-H-Test" class="headerlink" title="Kruskal-Wallis H Test"></a><strong>Kruskal-Wallis H Test</strong></h3>]]></content>
      
      
      <categories>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> correlation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言基础设置</title>
      <link href="2020/06/01/r-base-set/"/>
      <url>2020/06/01/r-base-set/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <p>在R语言中，为了方便使用，可以对其进行个性化设置，优化使用体验。    </p><p><a href="%E5%8E%BB%E6%8E%89%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E5%8A%A0%E5%8F%B7">去掉控制台的加号</a><br><a href="%E6%9B%B4%E6%94%B9%E6%98%BE%E7%A4%BA%E5%B0%8F%E6%95%B0%E7%82%B9%E4%BD%8D%E6%95%B0">更改显示小数点位数</a>  </p><h2 id="去掉控制台的加号"><a href="#去掉控制台的加号" class="headerlink" title="去掉控制台的加号"></a>去掉控制台的加号</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file.edit(<span class="string">&quot;~/.Rprofile&quot;</span>)</span><br><span class="line">options(continue = <span class="string">&quot;  &quot;</span>) <span class="comment">## 使用两个空格代替+</span></span><br></pre></td></tr></table></figure><p>使用效果：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a &lt;- <span class="number">1</span></span><br><span class="line">b &lt;- <span class="number">2</span></span><br><span class="line">a +</span><br><span class="line">  b</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 3</span><br></pre></td></tr></table></figure><h2 id="更改显示小数点位数"><a href="#更改显示小数点位数" class="headerlink" title="更改显示小数点位数"></a>更改显示小数点位数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options(digits = <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>使用效果：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a &lt;- <span class="number">3.1415926</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 3.14</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法说明</title>
      <link href="2020/05/30/markdown-synathx/"/>
      <url>2020/05/30/markdown-synathx/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h1 id="Markdown-文件"><a href="#Markdown-文件" class="headerlink" title="Markdown 文件"></a>Markdown 文件</h1><p><img src="http://markdown.tw/images/208x128.png" alt="Markdown"></p><p><strong>NOTE:</strong>  本文是简体中文意译,英文原文见 <a href="http://daringfireball.net/projects/markdown/syntax">Markdown: Syntax</a>.</p><h1 id="Markdown-语法-syntax"><a href="#Markdown-语法-syntax" class="headerlink" title="Markdown: 语法(syntax)"></a>Markdown: 语法(syntax)</h1><ul><li><a href="#overview">概述</a><ul><li><a href="#philosophy">宗旨</a></li><li><a href="#html">兼容 HTML</a></li><li><a href="#autoescape">特殊字符自动转换</a></li></ul></li><li><a href="#block">区块元素</a><ul><li><a href="#p">段落和换行</a></li><li><a href="#header">标题</a></li><li><a href="#blockquote">区块引用</a></li><li><a href="#list">列表</a></li><li><a href="#precode">代码区块</a></li><li><a href="#hr">分隔线</a></li></ul></li><li><a href="#span">区段元素</a><ul><li><a href="#link">链接</a></li><li><a href="#em">强调</a></li><li><a href="#code">代码</a></li><li><a href="#img">图片</a></li></ul></li><li><a href="#misc">其它</a><ul><li><a href="#autolink">自动链接</a></li><li><a href="#backslash">反斜杠</a></li></ul></li></ul><p><strong>注意</strong>:这份文件是用 Markdown 写的，你可以<a href="https://github.com/osokay/markdown-syntax-zh/edit/master/syntax_zh.md">看看它的原始档</a> 。</p><hr><h2 id="overview">概述</h2><h3 id="philosophy">宗旨</h3> <p>Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 [Setext] <a href="http://docutils.sourceforge.net/mirror/setext.html">1</a>、[atx] <a href="http://www.aaronsw.com/2002/atx/">2</a>、[Textile] <a href="http://textism.com/tools/textile/">3</a>、[reStructuredText] <a href="http://docutils.sourceforge.net/rst.html">4</a>、[Grutatext] <a href="http://www.triptico.com/software/grutatxt.html">5</a> 和 [EtText] <a href="http://ettext.taint.org/doc/">6</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="html">兼容 HTML</h3><p>Markdown 的格式语法只涵盖纯文本可以涵盖的范围，不在 Markdown 涵盖范围之内的标签，都可以直接在文件里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>只有区块元素──比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，而且这些（元素）的开始与结尾标签，不可以用制表符或空格来缩进。Markdown 的生成器足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code> 标签。</p><p>举例来说，在 Markdown 文件里加上一段 HTML 表格：</p><pre><code>This is a regular paragraph.&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;Foo&lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;This is another regular paragraph.</code></pre><p>Markdown 语法在 HTML 区块标签中将不会被进行处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 则不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的  <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>请注意，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="autoescape">特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p><code>&amp;</code> 符号其实很容易让写作网络文件的人感到困扰，如果你要打「AT&amp;T」 ，你必须要写成「<code>AT&amp;amp;T</code>」 ，而且网址中的 <code>&amp;</code> 字符也要转换。如果你要链接到：</p><pre><code>http://images.google.com/images?num=30&amp;q=larry+bird</code></pre><p>你必须要把网址写成：</p><pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code></pre><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。</p><p>Markdown 可以自动处理这些符号，如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp</code>;。<br>所以你如果要在文件中插入一个著作权的符号，你可以这样写：</p><pre><code>&amp;copy;</code></pre><p>Markdown 将不会对这段文字做修改，但是如果你这样写：</p><pre><code>AT&amp;T</code></pre><p>Markdown 就会将它转为：</p><pre><code>AT&amp;amp;T</code></pre><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 支持 <a href="#html">兼容 HTML</a> ，如果你是使用 <code>&lt;</code> 符号作为 HTML 标签使用，那 Markdown 也不会对它做任何转换，但是如果你是写：</p><pre><code>4 &lt; 5</code></pre><p>Markdown 将会把它转换为：</p><pre><code>4 &amp;lt; 5</code></pre><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都<strong>一定</strong>会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><hr><h2 id="block">区块元素</h2><h3 id="p">段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。</p><p>如果你<strong>真的</strong>想要插入 <code>&lt;br /&gt;</code> 标签的话，在行尾加上两个以上的格然后回车。</p><p>是的，这确实需要花比较多功夫来插入 <code>&lt;br /&gt;</code> ，但是「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="#blockquote">区块引用</a> 和多段落的 <a href="#list">列表</a> 在使用换行来排版的时候，不但更好用，还更好阅读。</p><h3 id="header">标题</h3><p>Markdown 支持两种标题的语法，类 [Setext] <a href="http://docutils.sourceforge.net/mirror/setext.html">1</a> 和类 [atx] <a href="http://www.aaronsw.com/2002/atx/">2</a> 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p><pre><code>This is an H1=============This is an H2-------------</code></pre><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p><pre><code># This is an H1## This is an H2###### This is an H6</code></pre><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字数量决定标题的阶数）：</p><pre><code># This is an H1 ### This is an H2 ##### This is an H3 ######</code></pre><h3 id="blockquote">Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing.</code></pre><p>Markdown 也允许你只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</code></pre><p>区块引用可以有嵌套（例如：引用内的引用），只要根据层数加上不同数量的 <code>&gt;</code> ：</p><pre><code>&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.</code></pre><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><pre><code>&gt; ## This is a header.&gt; &gt; 1.   This is the first list item.&gt; 2.   This is the second list item.&gt; &gt; Here&#39;s some example code:&gt; &gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><p>任何标准的文本编辑器都能简单地建立 email 样式的引用，例如 BBEdit ，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="list">列表</h3><p>Markdown 支持有序列表和无序列表。</p><p>无序清单使用星号、加号或是减号作为列表标记：</p><pre><code>*   Red*   Green*   Blue</code></pre><p>等同于：</p><pre><code>+   Red+   Green+   Blue</code></pre><p>也等同于：</p><pre><code>-   Red-   Green-   Blue</code></pre><p>有序列表则使用数字接着一个英文句点：</p><pre><code>1.  Bird2.  McHale3.  Parish</code></pre><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><pre><code>&lt;ol&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;McHale&lt;/li&gt;&lt;li&gt;Parish&lt;/li&gt;&lt;/ol&gt;</code></pre><p>如果你的列表标记写成：</p><pre><code>1.  Bird1.  McHale1.  Parish</code></pre><p>或甚至是：</p><pre><code>3. Bird1. McHale8. Parish</code></pre><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,    viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.    Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>但是如果你很懒，那也行：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果列表项目间用空行分开， 在输出 HTML 时 Markdown 会把项目的内容在输出时用 <code>&lt;p&gt;</code><br>标签包起来，举例来说：</p><pre><code>*   Bird*   Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;Magic&lt;/li&gt;&lt;/ul&gt;</code></pre><p>但是这个：</p><pre><code>*   Bird*   Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</code></pre><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor    sit amet, consectetuer adipiscing elit. Aliquam hendrerit    mi posuere lectus.    Vestibulum enim wisi, viverra nec, fringilla in, laoreet    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum    sit amet velit.2.  Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果你每行都有缩进，看起来会看好很多，当然，Markdown 也允许：</p><pre><code>*   This is a list item with two paragraphs.    This is the second paragraph in the list item. You&#39;reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.*   Another item in the same list.</code></pre><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p><pre><code>*   A list item with a blockquote:    &gt; This is a blockquote    &gt; inside a list item.</code></pre><p>如果要放代码区块的话，该区块就需要缩排<strong>两次</strong>，也就是 8 个空格或是 2 个制表符：</p><pre><code>*   A list item with a code block:        &lt;code goes here&gt;</code></pre><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><pre><code>1986. What a great season.</code></pre><p>换句话说，也就是在行首出现<strong>数字-句点-空白</strong>，要避免这样的状况，你可以在句点前面加上反斜杠。</p><pre><code>1986\. What a great season.</code></pre><h3 id="precode">程序代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><pre><code>This is a normal paragraph:    This is a code block.</code></pre><p>Markdown 会转换成：</p><pre><code>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;This is a code block.&lt;/code&gt;&lt;/pre&gt;</code></pre><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><pre><code>Here is an example of AppleScript:    tell application &quot;Foo&quot;        beep    end tell</code></pre><p>会被转换为：</p><pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;    beepend tell&lt;/code&gt;&lt;/pre&gt;</code></pre><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><pre><code>    &lt;div class=&quot;footer&quot;&gt;        &amp;copy; 2004 Foo Corporation    &lt;/div&gt;</code></pre><p>会被转换为：</p><pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;    &amp;amp;copy; 2004 Foo Corporation&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;</code></pre><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="hr">分隔线</h3><p>你可以在一行中用三个或以上的星号、减号来建立一个分隔线，行内不能有其他东西。你也可以在星号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>* * *********- - ----------------------------------------</code></pre><hr><h2 id="span">区段元素</h2><h3 id="link">链接</h3><p>Markdown 支持两种形式的链接语法： <strong>行内式</strong>和<strong>参考式</strong>两种形式。</p><p>不管是哪一种，链接的文字都是用 [方括号] 来标记。</p><p>要建立一个<strong>行内式</strong>的链接，只要在方括号后面马上接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>会产生：</p><pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;an example&lt;/a&gt; inline link.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has notitle attribute.&lt;/p&gt;</code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><pre><code>See my [About](/about/) page for details.   </code></pre><p><strong>参考式</strong>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><pre><code>This is [an example][id] reference-style link.</code></pre><p>你也可以选择性地在两个方括号中间加上空格：</p><pre><code>This is [an example] [id] reference-style link.</code></pre><p>接着，在文件的任意处，你可以把这个标签的链接内容定义出来：</p><pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;</code></pre><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是圆括号包着</li></ul><p>下面这三种连结的定义都是相同：</p><pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;[foo]: http://example.com/  &#39;Optional Title Here&#39;[foo]: http://example.com/  (Optional Title Here)</code></pre><p><strong>请注意：</strong>有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用方括号包起来：</p><pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</code></pre><p>你也可以把 title 属性放到下一行，也可以加一些缩进，网址太长的话，这样会比较好看：</p><pre><code>[id]: http://example.com/longish/path/to/resource/here    &quot;Optional Title Here&quot;</code></pre><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨识标记可以有字母、数字、空白和标点符号，但是并<strong>不区分</strong>大小写，因此下面两个链接是一样的：</p><pre><code>[link text][a][link text][A]</code></pre><p><strong>隐式链接标记</strong>功能让你可以省略指定链接标记，这种情形下，链接标记和链接文字会视为相同，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><pre><code>[Google][]</code></pre><p>然后定义链接内容：</p><pre><code>[Google]: http://google.com/</code></pre><p>由于链接文字可能包含空白，所以这种简化的标记内也可以包含多个单词：</p><pre><code>Visit [Daring Fireball][] for more information.</code></pre><p>然后接着定义链接：</p><pre><code>[Daring Fireball]: http://daringfireball.net/</code></pre><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        &quot;Google&quot;  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;  [3]: http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>如果改成用链接名称的方式写：</p><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        &quot;Google&quot;  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</code></pre><p>上面两种写法都会产生下面的 HTML。</p><pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</code></pre><p>下面是用行内形式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</code></pre><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的连结却会增加到 176 个字符，如果是用纯 HTML 格式来写，会有 234 个字符，在 HTML 格式中，标签比文字还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的信息移到段落文字之外，你就可以增加连结而不让文章的阅读感觉被打断。</p><h3 id="em">强调</h3><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__</code></pre><p>会转成：</p><pre><code>&lt;em&gt;single asterisks&lt;/em&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;strong&gt;double underscores&lt;/strong&gt;</code></pre><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><pre><code>un*frigging*believable</code></pre><p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜杠：</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><h3 id="code">代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（<code>`</code>），例如：</p><pre><code>Use the `printf()` function.</code></pre><p>会产生：</p><pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</code></pre><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p><pre><code>``There is a literal backtick (`) here.``</code></pre><p>这段语法会产生：</p><pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</code></pre><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``</code></pre><p>会产生：</p><pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</code></pre><p>在代码区段内，<code>&amp;</code> 和方括号都会被转成 HTML 实体，这样会比较容易插入 HTML 原始码，Markdown 会把下面这段：</p><pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.</code></pre><p>转为：</p><pre><code>&lt;p&gt;Please don&#39;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;</code></pre><p>你也可以这样写：</p><pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</code></pre><p>以产生：</p><pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encodedequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</code></pre><h3 id="img">图片</h3><p>很明显地，要在纯文本应用中设计一个 「自然」的语法来插入图片是有一定难度的。</p><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <strong>行内式</strong>和<strong>参考式</strong>。</p><p>行内式图片的语法看起来像是：</p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></pre><p>详细叙述如下：</p><ul><li>一个惊叹号 <code>!</code></li><li>接着一对方括号，里面放上图片的替代文字</li><li>接着一对普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 文字。</li></ul><p>参考式的图片语法则长得像这样：</p><pre><code>![Alt text][id]</code></pre><p>「id」是图片参考的名称，图片参考的定义方式则和链接参考一样：</p><pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;</code></pre><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p><hr><h2 id="misc">其它</h2><h3 id="autolink">自动链接</h3><p>Markdown 支持比较简短的自动连结形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接，链接的文字就和链接位置一样，例如：</p><pre><code>&lt;http://example.com/&gt;</code></pre><p>Markdown 会转为：</p><pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;</code></pre><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p><pre><code>&lt;address@example.com&gt;</code></pre><p>Markdown 会转成：</p><pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</code></pre><p>在浏览器里面，这段字符串（其实是 <code>&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;</code>）会变成一个可以点击的「<a href="mailto:&#97;&#x64;&#100;&#114;&#101;&#x73;&#115;&#64;&#x65;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#46;&#99;&#x6f;&#109;">&#97;&#x64;&#100;&#114;&#101;&#x73;&#115;&#64;&#x65;&#x78;&#x61;&#109;&#x70;&#108;&#101;&#46;&#99;&#x6f;&#109;</a>」链接。</p><p>（这种作法虽然可以糊弄不少的机器人，但并无法全部挡下来，不过这样也比什么都不做好些。无论如何，公开你的信箱终究会引来广告信件的。）</p><h3 id="backslash">反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <code>&lt;em&gt;</code> 标签），你可以在星号的前面加上反斜杠：</p><pre><code>\*literal asterisks\*</code></pre><p>Markdown 支持在下面这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜杠`   反引号*   星号_   底线&#123;&#125;  大括号[]  方括号()  括号#   井字号+    加号-    减号.   英文句点!   惊叹号</code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基因ID转换相关知识</title>
      <link href="2020/05/29/id-convert/"/>
      <url>2020/05/29/id-convert/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="Ensembl-ID-辨识"><a href="#Ensembl-ID-辨识" class="headerlink" title="Ensembl ID 辨识"></a>Ensembl ID 辨识</h2><blockquote><ul><li>例如ENSG00000279928.1中，<strong>ENS</strong>是<strong>固定字符</strong>，表示它是属于Ensembl数据库的。默认物种是人，如果是小鼠就要用<strong>ENSMUS</strong>开头，关于物种代码：<a href="http://www.ensembl.org/info/genome/stable_ids/index.html">http://www.ensembl.org/info/genome/stable_ids/index.html</a>  </li><li><strong>G</strong>表示：这个ID指向一个基因；<strong>E</strong>指向Exon；<strong>FM</strong>指向 protein family；<strong>GT</strong>指向gene tree；<strong>P</strong>指向protein；R指向regulary feature；T指向transcript  </li><li>后面11位数字部分如00000279928 表示基因真正的编号  </li><li>小数点后不一定每个都有，<strong>表示这个ID在数据库中做了几次变更</strong>，比如.1做了1次变更，在分析时需要去除  </li></ul></blockquote><h2 id="Ensembl-ID-与-Symbol对应关系"><a href="#Ensembl-ID-与-Symbol对应关系" class="headerlink" title="Ensembl ID 与 Symbol对应关系"></a>Ensembl ID 与 Symbol对应关系</h2><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><p>在转换时会存在一个<code>Ensembl ID</code>对应多个<code>Symbol</code>的现象。此时，为了保证ID转换的准确性，需要对这些ID进行专门的转换，可以更换注释资源进行操作  </p><blockquote><p>不同的注释资源之间会有差别，有时并不可靠  </p></blockquote><h3 id="多对一"><a href="#多对一" class="headerlink" title="多对一"></a>多对一</h3><p>同样，会存在一些<code>Ensembl ID</code>对应同一个<code>Symbol</code>，此时，除了其中一个真正对应的外，其他的可以叫做<code>haplotypic regions</code>。像这样的ID需要检查ENSG对应的染色体位置进行辨别  </p><blockquote><p><strong>Haplotyptic regions</strong> are defined by the Genome Reference Consortium (GRC) and are visible on all their genome assemblies for human, mouse, and zebrafish.  They can also be called ‘<strong>alternate locus</strong>’, ‘<strong>partial chromosomes</strong>’, and ‘<strong>alternate alleles</strong>’ or ‘<strong>assembly exceptions</strong>’.<br>These regions can have small sequence differences, contain <strong>different gene structures or different genes entirely</strong>, or contain <strong>genes in a different order compared to the reference genome assembly</strong>.  </p></blockquote><h2 id="注释途径"><a href="#注释途径" class="headerlink" title="注释途径"></a>注释途径</h2><ul><li><input checked="" disabled="" type="checkbox"> bitr  </li><li><input checked="" disabled="" type="checkbox"> biomart  </li></ul>]]></content>
      
      
      <categories>
          
          <category> IDconvert </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gene </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dplyr学习笔记(三)</title>
      <link href="2020/05/28/dplyr-iii/"/>
      <url>2020/05/28/dplyr-iii/</url>
      
        <content type="html"><![CDATA[<p>对于数据进行操作时，往往不限于单个数据的操作，多数情况需要对数据进行整合，过滤，标准化。在<code>dplyr</code>包中，提供了一系列的快捷操作，用于两个数据之间的操作处理  </p><h2 id="合并-join-操作"><a href="#合并-join-操作" class="headerlink" title="合并(join)操作"></a>合并(join)操作</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">&quot;nycflights13&quot;</span>)</span><br><span class="line"><span class="comment"># Drop unimportant variables so it&#x27;s easier to understand the join results.</span></span><br><span class="line">flights2 &lt;- flights %&gt;% select(year:day, hour, origin, dest, tailnum, carrier)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 向前边的数据添加变量</span></span><br><span class="line">flights2 %&gt;% </span><br><span class="line">  left_join(airlines)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Joining, by &#x3D; &quot;carrier&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 9</span><br><span class="line">##     year month   day  hour origin dest  tailnum carrier name </span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;</span><br><span class="line">##  1  2013     1     1     5 EWR    IAH   N14228  UA      Unit~</span><br><span class="line">##  2  2013     1     1     5 LGA    IAH   N24211  UA      Unit~</span><br><span class="line">##  3  2013     1     1     5 JFK    MIA   N619AA  AA      Amer~</span><br><span class="line">##  4  2013     1     1     5 JFK    BQN   N804JB  B6      JetB~</span><br><span class="line">##  5  2013     1     1     6 LGA    ATL   N668DN  DL      Delt~</span><br><span class="line">##  6  2013     1     1     5 EWR    ORD   N39463  UA      Unit~</span><br><span class="line">##  7  2013     1     1     6 EWR    FLL   N516JB  B6      JetB~</span><br><span class="line">##  8  2013     1     1     6 LGA    IAD   N829AS  EV      Expr~</span><br><span class="line">##  9  2013     1     1     6 JFK    MCO   N593JB  B6      JetB~</span><br><span class="line">## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA      Amer~</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><h3 id="join变量参照"><a href="#join变量参照" class="headerlink" title="join变量参照"></a>join变量参照</h3><p>在进行join操作时，选取变量作为参照，对数据进行合并，在默认情况下时<code>NULL</code>，意思为根据所有变量进行合并  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flights2 %&gt;% left_join(weather)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Joining, by &#x3D; c(&quot;year&quot;, &quot;month&quot;, &quot;day&quot;, &quot;hour&quot;, &quot;origin&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 18</span><br><span class="line">##     year month   day  hour origin dest  tailnum carrier  temp</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1     5 EWR    IAH   N14228  UA       39.0</span><br><span class="line">##  2  2013     1     1     5 LGA    IAH   N24211  UA       39.9</span><br><span class="line">##  3  2013     1     1     5 JFK    MIA   N619AA  AA       39.0</span><br><span class="line">##  4  2013     1     1     5 JFK    BQN   N804JB  B6       39.0</span><br><span class="line">##  5  2013     1     1     6 LGA    ATL   N668DN  DL       39.9</span><br><span class="line">##  6  2013     1     1     5 EWR    ORD   N39463  UA       39.0</span><br><span class="line">##  7  2013     1     1     6 EWR    FLL   N516JB  B6       37.9</span><br><span class="line">##  8  2013     1     1     6 LGA    IAD   N829AS  EV       39.9</span><br><span class="line">##  9  2013     1     1     6 JFK    MCO   N593JB  B6       37.9</span><br><span class="line">## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA       39.9</span><br><span class="line">## # ... with 336,766 more rows, and 9 more variables:</span><br><span class="line">## #   dewp &lt;dbl&gt;, humid &lt;dbl&gt;, wind_dir &lt;dbl&gt;,</span><br><span class="line">## #   wind_speed &lt;dbl&gt;, wind_gust &lt;dbl&gt;, precip &lt;dbl&gt;,</span><br><span class="line">## #   pressure &lt;dbl&gt;, visib &lt;dbl&gt;, time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><p>同样，也可以设定特殊的列作为参考进行数据合并  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flights2 %&gt;% left_join(planes, by = <span class="string">&quot;tailnum&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 16</span><br><span class="line">##    year.x month   day  hour origin dest  tailnum carrier</span><br><span class="line">##     &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;  </span><br><span class="line">##  1   2013     1     1     5 EWR    IAH   N14228  UA     </span><br><span class="line">##  2   2013     1     1     5 LGA    IAH   N24211  UA     </span><br><span class="line">##  3   2013     1     1     5 JFK    MIA   N619AA  AA     </span><br><span class="line">##  4   2013     1     1     5 JFK    BQN   N804JB  B6     </span><br><span class="line">##  5   2013     1     1     6 LGA    ATL   N668DN  DL     </span><br><span class="line">##  6   2013     1     1     5 EWR    ORD   N39463  UA     </span><br><span class="line">##  7   2013     1     1     6 EWR    FLL   N516JB  B6     </span><br><span class="line">##  8   2013     1     1     6 LGA    IAD   N829AS  EV     </span><br><span class="line">##  9   2013     1     1     6 JFK    MCO   N593JB  B6     </span><br><span class="line">## 10   2013     1     1     6 LGA    ORD   N3ALAA  AA     </span><br><span class="line">## # ... with 336,766 more rows, and 8 more variables:</span><br><span class="line">## #   year.y &lt;int&gt;, type &lt;chr&gt;, manufacturer &lt;chr&gt;,</span><br><span class="line">## #   model &lt;chr&gt;, engines &lt;int&gt;, seats &lt;int&gt;, speed &lt;int&gt;,</span><br><span class="line">## #   engine &lt;chr&gt;</span><br></pre></td></tr></table></figure><p>当在两个数据中，需要参考的变量的名称不一样怎么办？使用<code>by = c(&quot;x&quot; = &quot;a&quot;)</code>进行操作  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flights2 %&gt;% left_join(airports, c(<span class="string">&quot;dest&quot;</span> = <span class="string">&quot;faa&quot;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 15</span><br><span class="line">##     year month   day  hour origin dest  tailnum carrier name </span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;</span><br><span class="line">##  1  2013     1     1     5 EWR    IAH   N14228  UA      Geor~</span><br><span class="line">##  2  2013     1     1     5 LGA    IAH   N24211  UA      Geor~</span><br><span class="line">##  3  2013     1     1     5 JFK    MIA   N619AA  AA      Miam~</span><br><span class="line">##  4  2013     1     1     5 JFK    BQN   N804JB  B6      &lt;NA&gt; </span><br><span class="line">##  5  2013     1     1     6 LGA    ATL   N668DN  DL      Hart~</span><br><span class="line">##  6  2013     1     1     5 EWR    ORD   N39463  UA      Chic~</span><br><span class="line">##  7  2013     1     1     6 EWR    FLL   N516JB  B6      Fort~</span><br><span class="line">##  8  2013     1     1     6 LGA    IAD   N829AS  EV      Wash~</span><br><span class="line">##  9  2013     1     1     6 JFK    MCO   N593JB  B6      Orla~</span><br><span class="line">## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA      Chic~</span><br><span class="line">## # ... with 336,766 more rows, and 6 more variables:</span><br><span class="line">## #   lat &lt;dbl&gt;, lon &lt;dbl&gt;, alt &lt;dbl&gt;, tz &lt;dbl&gt;, dst &lt;chr&gt;,</span><br><span class="line">## #   tzone &lt;chr&gt;</span><br></pre></td></tr></table></figure><h3 id="join的类型"><a href="#join的类型" class="headerlink" title="join的类型"></a>join的类型</h3><h4 id="inner-join"><a href="#inner-join" class="headerlink" title="inner_join()"></a>inner_join()</h4><p>合并后保留两个数据公有的观测值，保留所有unique的变量  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df1 &lt;- tibble(x = c(<span class="number">1</span>, <span class="number">2</span>), y = <span class="number">2</span>:<span class="number">1</span>)</span><br><span class="line">df2 &lt;- tibble(x = c(<span class="number">1</span>, <span class="number">3</span>), a = <span class="number">10</span>, b = <span class="string">&quot;a&quot;</span>)</span><br><span class="line">df1 %&gt;% inner_join(df2)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Joining, by &#x3D; &quot;x&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 1 x 4</span><br><span class="line">##       x     y     a b    </span><br><span class="line">##   &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;</span><br><span class="line">## 1     1     2    10 a</span><br></pre></td></tr></table></figure><h4 id="left-join"><a href="#left-join" class="headerlink" title="left_join()"></a>left_join()</h4><p>合并后包含第一个数据所有的观测值，第二个数据中没有的值用<code>NA</code>表示  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 %&gt;% left_join(df2)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Joining, by &#x3D; &quot;x&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 2 x 4</span><br><span class="line">##       x     y     a b    </span><br><span class="line">##   &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;</span><br><span class="line">## 1     1     2    10 a    </span><br><span class="line">## 2     2     1    NA &lt;NA&gt;</span><br></pre></td></tr></table></figure><h4 id="right-join"><a href="#right-join" class="headerlink" title="right_join()"></a>right_join()</h4><p>合并后保留第二个数据所有的观测值，等同于<code>left_join(y,x)</code>，不过变量顺序发生了改变  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 %&gt;% right_join(df2)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Joining, by &#x3D; &quot;x&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 2 x 4</span><br><span class="line">##       x     y     a b    </span><br><span class="line">##   &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;</span><br><span class="line">## 1     1     2    10 a    </span><br><span class="line">## 2     3    NA    10 a</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 %&gt;% left_join(df1)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Joining, by &#x3D; &quot;x&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 2 x 4</span><br><span class="line">##       x     a b         y</span><br><span class="line">##   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;int&gt;</span><br><span class="line">## 1     1    10 a         2</span><br><span class="line">## 2     3    10 a        NA</span><br></pre></td></tr></table></figure><h4 id="full-join"><a href="#full-join" class="headerlink" title="full_join()"></a>full_join()</h4><p>合并后包含两个数据所有的观测值，没有的值用<code>NA</code>补足  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 %&gt;% full_join(df2)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Joining, by &#x3D; &quot;x&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 3 x 4</span><br><span class="line">##       x     y     a b    </span><br><span class="line">##   &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;</span><br><span class="line">## 1     1     2    10 a    </span><br><span class="line">## 2     2     1    NA &lt;NA&gt; </span><br><span class="line">## 3     3    NA    10 a</span><br></pre></td></tr></table></figure><h4 id="semi-join"><a href="#semi-join" class="headerlink" title="semi_join()"></a>semi_join()</h4><p>合并后保留第一个数据中所有在第二个数据中匹配到的观测值  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df1 &lt;- tibble(x = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>), y = <span class="number">1</span>:<span class="number">4</span>)</span><br><span class="line">df2 &lt;- tibble(x = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>), z = c(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;a&quot;</span>))</span><br><span class="line">df1 %&gt;% semi_join(df2, by = <span class="string">&quot;x&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 2 x 2</span><br><span class="line">##       x     y</span><br><span class="line">##   &lt;dbl&gt; &lt;int&gt;</span><br><span class="line">## 1     1     1</span><br><span class="line">## 2     1     2</span><br></pre></td></tr></table></figure><h4 id="anti-join"><a href="#anti-join" class="headerlink" title="anti_join()"></a>anti_join()</h4><p>合并后保留第一个数据中所有在第二个数据中未匹配到的观测值 </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 %&gt;% anti_join(df2, by = <span class="string">&quot;x&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 2 x 2</span><br><span class="line">##       x     y</span><br><span class="line">##   &lt;dbl&gt; &lt;int&gt;</span><br><span class="line">## 1     3     3</span><br><span class="line">## 2     4     4</span><br></pre></td></tr></table></figure><h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><p>在基础R函数中的向量取集操作运用到data.frame水平  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1 &lt;- tibble(x = <span class="number">1</span>:<span class="number">2</span>, y = c(<span class="number">1L</span>, <span class="number">1L</span>))</span><br><span class="line">df2 &lt;- tibble(x = <span class="number">1</span>:<span class="number">2</span>, y = <span class="number">1</span>:<span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intersect(df1, df2)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 1 x 2</span><br><span class="line">##       x     y</span><br><span class="line">##   &lt;int&gt; &lt;int&gt;</span><br><span class="line">## 1     1     1</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union(df1, df2)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 3 x 2</span><br><span class="line">##       x     y</span><br><span class="line">##   &lt;int&gt; &lt;int&gt;</span><br><span class="line">## 1     1     1</span><br><span class="line">## 2     2     1</span><br><span class="line">## 3     2     2</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setdiff(df1, df2)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 1 x 2</span><br><span class="line">##       x     y</span><br><span class="line">##   &lt;int&gt; &lt;int&gt;</span><br><span class="line">## 1     2     1</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setdiff(df2, df1)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 1 x 2</span><br><span class="line">##       x     y</span><br><span class="line">##   &lt;int&gt; &lt;int&gt;</span><br><span class="line">## 1     2     2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tidyverse </tag>
            
            <tag> dplyr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggpubr使用指南(二)</title>
      <link href="2020/05/28/ggpubr-ii/"/>
      <url>2020/05/28/ggpubr-ii/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="使用ggmaplot函数绘制火山图"><a href="#使用ggmaplot函数绘制火山图" class="headerlink" title="使用ggmaplot函数绘制火山图"></a>使用ggmaplot函数绘制火山图</h2><h3 id="加载所需R包"><a href="#加载所需R包" class="headerlink" title="加载所需R包"></a>加载所需R包</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggpubr)</span><br></pre></td></tr></table></figure><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法:"></a>基本用法:</h3><p><strong>Usage</strong>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ggmaplot(data, fdr = <span class="number">0.05</span>, fc = <span class="number">1.5</span>, genenames = <span class="literal">NULL</span>, detection_call = <span class="literal">NULL</span>, size = <span class="literal">NULL</span>,</span><br><span class="line">  font.label = c(<span class="number">12</span>, <span class="string">&quot;plain&quot;</span>, <span class="string">&quot;black&quot;</span>), label.rectangle = <span class="literal">FALSE</span>, palette = c(<span class="string">&quot;#B31B21&quot;</span>, <span class="string">&quot;#1465AC&quot;</span>, <span class="string">&quot;darkgray&quot;</span>), top = <span class="number">15</span>, select.top.method = c(<span class="string">&quot;padj&quot;</span>, <span class="string">&quot;fc&quot;</span>), main = <span class="literal">NULL</span>, xlab = <span class="string">&quot;Log2 mean expression&quot;</span>,</span><br><span class="line">  ylab = <span class="string">&quot;Log2 fold change&quot;</span>, ggtheme = theme_classic(), <span class="keyword">...</span>)</span><br></pre></td></tr></table></figure><h3 id="常用参数："><a href="#常用参数：" class="headerlink" title="常用参数："></a>常用参数：</h3><p><strong>Arguments</strong>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">data    <span class="comment">#差异基因分析结果 an object of class DESeqResults, get_diff, DE_Results, matrix or data frame containing the columns baseMean, log2FoldChange, and padj. Rows are genes.</span></span><br><span class="line">        <span class="comment">#baseMean: the mean expression of genes in the two groups.</span></span><br><span class="line">        <span class="comment">#log2FoldChange: the log2 fold changes of group 2 compared to group 1</span></span><br><span class="line">        <span class="comment">#padj: the adjusted p-value of the used statiscal test.</span></span><br><span class="line">fdr     <span class="comment">#设定fdr阈值 Accepted false discovery rate for considering genes as differentially expressed.</span></span><br><span class="line">fc      <span class="comment">#设定fc阈值 the fold change threshold. Only genes with a fold change &gt;= fc and padj &lt;= fdr are considered as significantly differentially expressed.</span></span><br><span class="line">genenames    <span class="comment">#基因名 a character vector of length nrow(data) specifying gene names corresponding to each row. Used for point labels.</span></span><br><span class="line">detection_call    <span class="comment">#选出特定表达模式的基因进行展示 a numeric vector with length = nrow(data), specifying if the genes is expressed (value = 1) or not (value = 0). For example detection_call = c(1, 1, 0, 1, 0, 1). Default is NULL. If detection_call column is available in data, it will be used.</span></span><br><span class="line">size    <span class="comment">#points size.</span></span><br><span class="line">font.label    <span class="comment">#a vector of length 3 indicating respectively the size (e.g.: 14), the style (e.g.: &quot;plain&quot;, &quot;bold&quot;, &quot;italic&quot;, &quot;bold.italic&quot;) and the color (e.g.: &quot;red&quot;) of point labels. For example font.label = c(14, &quot;bold&quot;, &quot;red&quot;).</span></span><br><span class="line">label.rectangle    <span class="comment">#logical value. If TRUE, add rectangle underneath the text, making it easier to read.</span></span><br><span class="line">palette    <span class="comment">#the color palette to be used for coloring or filling by groups. Allowed values include &quot;grey&quot; for grey color palettes; brewer palettes e.g. &quot;RdBu&quot;, &quot;Blues&quot;, ...; or custom color palette e.g. c(&quot;blue&quot;, &quot;red&quot;); and scientific journal palettes from ggsci R package, e.g.: &quot;npg&quot;, &quot;aaas&quot;, &quot;lancet&quot;, &quot;jco&quot;, &quot;ucscgb&quot;, &quot;uchicago&quot;, &quot;simpsons&quot; and &quot;rickandmorty&quot;.</span></span><br><span class="line">top    <span class="comment">#选定top基因进行展示 the number of top genes to be shown on the plot. Use top = 0 to hide to gene labels.</span></span><br><span class="line">select.top.method    <span class="comment">#methods to be used for selecting top genes. Allowed values include &quot;padj&quot; and &quot;fc&quot; for selecting by adjusted p values or fold changes, respectively.</span></span><br><span class="line">main    <span class="comment">#plot main title.</span></span><br><span class="line">xlab    <span class="comment">#character vector specifying x axis labels. Use xlab = FALSE to hide xlab.</span></span><br><span class="line">ylab    <span class="comment">#character vector specifying y axis labels. Use ylab = FALSE to hide ylab.</span></span><br><span class="line">ggtheme    <span class="comment">#function, ggplot2 theme name. Default value is theme_pubr(). Allowed values include ggplot2 official themes: theme_gray(), theme_bw(), theme_minimal(), theme_classic(), theme_void()</span></span><br><span class="line"><span class="keyword">...</span>     <span class="comment">#other arguments to be passed to ggpar.</span></span><br></pre></td></tr></table></figure><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载数据集</span></span><br><span class="line">data(diff_express)</span><br><span class="line">head(diff_express)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##                     name     baseMean log2FoldChange         padj detection_call</span><br><span class="line">## ENSG00000000003   TSPAN6    0.1184475      0.0000000           NA              0</span><br><span class="line">## ENSG00000000419     DPM1 1654.4618144      0.6789538 5.280802e-02              1</span><br><span class="line">## ENSG00000000457    SCYL3  681.0463277      1.5263838 3.915112e-07              1</span><br><span class="line">## ENSG00000000460 C1orf112  389.7226640      3.8933573 1.180333e-14              1</span><br><span class="line">## ENSG00000000938      FGR  364.7810090     -2.3554014 1.559228e-04              1</span><br><span class="line">## ENSG00000000971      CFH    1.1346239      1.2932740 4.491812e-01              0</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p1 &lt;- ggmaplot(diff_express, fdr = <span class="number">0.05</span>, fc = <span class="number">2</span>, size = <span class="number">0.4</span>,</span><br><span class="line">               palette = c(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;green&quot;</span>, <span class="string">&quot;gray&quot;</span>))</span><br><span class="line">p1</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-ii/unnamed-chunk-4-1.png" alt="plot of chunk unnamed-chunk-4"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">p2 &lt;- ggmaplot(diff_express, main = expression(<span class="string">&quot;Group 1&quot;</span> %-&gt;% <span class="string">&quot;Group 2&quot;</span>),</span><br><span class="line">               fdr = <span class="number">0.05</span>, fc = <span class="number">2</span>, size = <span class="number">0.4</span>,</span><br><span class="line">               palette = c(<span class="string">&quot;#B31B21&quot;</span>, <span class="string">&quot;#1465AC&quot;</span>, <span class="string">&quot;darkgray&quot;</span>),</span><br><span class="line">               genenames = as.vector(diff_express$name),</span><br><span class="line">               xlab = <span class="string">&quot;M&quot;</span>, ylab = <span class="string">&quot;A&quot;</span>,</span><br><span class="line">               legend = <span class="string">&quot;top&quot;</span>, top = <span class="number">20</span>,</span><br><span class="line">               font.label = c(<span class="number">11</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;red&quot;</span>),</span><br><span class="line">               font.legend = <span class="string">&quot;bold&quot;</span>, font.main = <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">               ggtheme = ggplot2::theme_minimal())</span><br><span class="line">p2</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-ii/unnamed-chunk-5-1.png" alt="plot of chunk unnamed-chunk-5"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add rectangle around labels</span></span><br><span class="line">p3 &lt;- ggmaplot(diff_express, main = expression(<span class="string">&quot;Group 1&quot;</span> %-&gt;% <span class="string">&quot;Group 2&quot;</span>),</span><br><span class="line">               fdr = <span class="number">0.05</span>, fc = <span class="number">2</span>, size = <span class="number">0.4</span>,</span><br><span class="line">               palette = c(<span class="string">&quot;#B31B21&quot;</span>, <span class="string">&quot;#1465AC&quot;</span>, <span class="string">&quot;darkgray&quot;</span>),</span><br><span class="line">               genenames = as.vector(diff_express$name),</span><br><span class="line">               legend = <span class="string">&quot;top&quot;</span>, top = <span class="number">20</span>, font.label = c(<span class="string">&quot;bold&quot;</span>, <span class="number">11</span>),</span><br><span class="line">               label.rectangle = <span class="literal">TRUE</span>, font.legend = <span class="string">&quot;bold&quot;</span>, </span><br><span class="line">               select.top.method = <span class="string">&quot;padj&quot;</span>, font.main = <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">               ggtheme = ggplot2::theme_minimal())</span><br><span class="line">p3</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-ii/unnamed-chunk-6-1.png" alt="plot of chunk unnamed-chunk-6"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">p4 &lt;- ggmaplot(diff_express, main = expression(<span class="string">&quot;Group 1&quot;</span> %-&gt;% <span class="string">&quot;Group 2&quot;</span>),</span><br><span class="line">               fdr = <span class="number">0.05</span>, fc = <span class="number">2</span>, size = <span class="number">0.5</span>,</span><br><span class="line">               palette = c(<span class="string">&quot;#B31B21&quot;</span>, <span class="string">&quot;#1465AC&quot;</span>, <span class="string">&quot;darkgray&quot;</span>),</span><br><span class="line">               genenames = as.vector(diff_express$name),</span><br><span class="line">               legend = <span class="string">&quot;top&quot;</span>, top = <span class="number">20</span>, font.label = c(<span class="string">&quot;bold&quot;</span>, <span class="number">11</span>),</span><br><span class="line">               label.rectangle = <span class="literal">TRUE</span>, font.legend = <span class="string">&quot;bold&quot;</span>, </span><br><span class="line">               select.top.method = <span class="string">&quot;fc&quot;</span>, font.main = <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">               ggtheme = ggplot2::theme_minimal())</span><br><span class="line">p4</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-ii/unnamed-chunk-7-1.png" alt="plot of chunk unnamed-chunk-7"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessionInfo()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">## R version 4.0.2 (2020-06-22)</span><br><span class="line">## Platform: x86_64-w64-mingw32&#x2F;x64 (64-bit)</span><br><span class="line">## Running under: Windows 10 x64 (build 17763)</span><br><span class="line">## </span><br><span class="line">## Matrix products: default</span><br><span class="line">## </span><br><span class="line">## locale:</span><br><span class="line">## [1] LC_COLLATE&#x3D;Chinese (Simplified)_China.936  LC_CTYPE&#x3D;Chinese (Simplified)_China.936   </span><br><span class="line">## [3] LC_MONETARY&#x3D;Chinese (Simplified)_China.936 LC_NUMERIC&#x3D;C                              </span><br><span class="line">## [5] LC_TIME&#x3D;Chinese (Simplified)_China.936    </span><br><span class="line">## system code page: 65001</span><br><span class="line">## </span><br><span class="line">## attached base packages:</span><br><span class="line">## [1] stats     graphics  grDevices utils     datasets  methods   base     </span><br><span class="line">## </span><br><span class="line">## other attached packages:</span><br><span class="line">##  [1] ggpubr_0.4.0       nycflights13_1.0.1 forcats_0.5.0      stringr_1.4.0     </span><br><span class="line">##  [5] dplyr_1.0.2        purrr_0.3.4        readr_1.3.1        tidyr_1.1.2       </span><br><span class="line">##  [9] tibble_3.0.3       ggplot2_3.3.2      tidyverse_1.3.0   </span><br><span class="line">## </span><br><span class="line">## loaded via a namespace (and not attached):</span><br><span class="line">##  [1] ggrepel_0.8.2     Rcpp_1.0.5        lubridate_1.7.9   assertthat_0.2.1  digest_0.6.25    </span><br><span class="line">##  [6] utf8_1.1.4        R6_2.4.1          cellranger_1.1.0  backports_1.1.9   reprex_0.3.0     </span><br><span class="line">## [11] evaluate_0.14     httr_1.4.2        highr_0.8         pillar_1.4.6      rlang_0.4.7      </span><br><span class="line">## [16] curl_4.3          readxl_1.3.1      rstudioapi_0.11   data.table_1.13.0 car_3.0-9        </span><br><span class="line">## [21] blob_1.2.1        labeling_0.3      foreign_0.8-80    munsell_0.5.0     broom_0.7.0      </span><br><span class="line">## [26] compiler_4.0.2    modelr_0.1.8      xfun_0.17         pkgconfig_2.0.3   tidyselect_1.1.0 </span><br><span class="line">## [31] rio_0.5.16        fansi_0.4.1       crayon_1.3.4      dbplyr_1.4.4      withr_2.2.0      </span><br><span class="line">## [36] grid_4.0.2        jsonlite_1.7.1    gtable_0.3.0      lifecycle_0.2.0   DBI_1.1.0        </span><br><span class="line">## [41] magrittr_1.5      scales_1.1.1      zip_2.1.1         cli_2.0.2         stringi_1.5.3    </span><br><span class="line">## [46] carData_3.0-4     farver_2.0.3      ggsignif_0.6.0    fs_1.5.0          xml2_1.3.2       </span><br><span class="line">## [51] ellipsis_0.3.1    generics_0.0.2    vctrs_0.3.4       openxlsx_4.1.5    ggsci_2.9        </span><br><span class="line">## [56] tools_4.0.2       glue_1.4.2        hms_0.5.3         abind_1.4-5       colorspace_1.4-1 </span><br><span class="line">## [61] rstatix_0.6.0     rvest_0.3.6       knitr_1.29        haven_2.3.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ggpubr使用指南(一)</title>
      <link href="2020/05/28/ggpubr-i/"/>
      <url>2020/05/28/ggpubr-i/</url>
      
        <content type="html"><![CDATA[<p><code>ggpubr</code> 是由 <strong>Alboukadel Kassambara</strong> 开发的一款非常优秀的基于<code>ggplot2</code>作图的可视化R包，一行命令即可简单方便的绘制出符合出版物要求的图形。<a id="more"></a>  </p><blockquote><p>ggplot2 by Hadley Wickham is an excellent and flexible package for elegant data visualization in R. However the default generated plots requires some formatting before we can send them for publication. Furthermore, to customize a ggplot, the syntax is opaque and this raises the level of difficulty for researchers with no advanced R programming skills. The ‘ggpubr’ package provides some easy-to-use functions for creating and customizing ‘ggplot2’- based publication ready plots.  </p></blockquote><h3 id="R包安装"><a href="#R包安装" class="headerlink" title="R包安装"></a>R包安装</h3><figure class="highlight plain"><figcaption><span>echo</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">install.packages(&quot;ggpubr&quot;)</span><br><span class="line">library(ggpubr)</span><br><span class="line"></span><br><span class="line"># github安装</span><br><span class="line">if(!require(devtools)) install.packages(&quot;devtools&quot;)</span><br><span class="line">devtools::install_github(&quot;kassambara&#x2F;ggpubr&quot;)</span><br><span class="line">library(ggpubr)</span><br></pre></td></tr></table></figure><h3 id="常用图形绘制"><a href="#常用图形绘制" class="headerlink" title="常用图形绘制"></a>常用图形绘制</h3><h4 id="分布图绘制-Distribution"><a href="#分布图绘制-Distribution" class="headerlink" title="分布图绘制(Distribution)"></a>分布图绘制(Distribution)</h4><ol><li><strong>带有均值线和地毯线的密度图</strong>  </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#构建数据集set.seed(1234)</span></span><br><span class="line">df &lt;- data.frame( sex=factor(rep(c(<span class="string">&quot;f&quot;</span>, <span class="string">&quot;M&quot;</span>), each=<span class="number">200</span>)),</span><br><span class="line">                 weight=c(rnorm(<span class="number">200</span>, <span class="number">55</span>), rnorm(<span class="number">200</span>, <span class="number">58</span>)))</span><br><span class="line"><span class="comment"># 预览数据格式</span></span><br><span class="line">head(df)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##   sex   weight</span><br><span class="line">## 1   f 58.29504</span><br><span class="line">## 2   f 53.92389</span><br><span class="line">## 3   f 55.38073</span><br><span class="line">## 4   f 53.90834</span><br><span class="line">## 5   f 54.95872</span><br><span class="line">## 6   f 55.28395</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制密度图</span></span><br><span class="line"><span class="comment"># rug参数添加地毯线，add参数可以添加均值mean和中位数median，按性别”sex“分组标记边框线颜色和填充色，使用palette参数自定义颜色</span></span><br><span class="line">p1 &lt;- ggdensity(df, x=<span class="string">&quot;weight&quot;</span>, add = <span class="string">&quot;mean&quot;</span>, rug = <span class="literal">TRUE</span>, color = <span class="string">&quot;sex&quot;</span>, </span><br><span class="line">                fill = <span class="string">&quot;sex&quot;</span>,palette = c(<span class="string">&quot;#00AFBB&quot;</span>, <span class="string">&quot;#E7B800&quot;</span>)) </span><br><span class="line">p1</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-3-1.png" alt="plot of chunk unnamed-chunk-3"></p><ol start="2"><li><strong>带有均值线和边际地毯线的直方图</strong>  </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p2 &lt;- gghistogram(df, x=<span class="string">&quot;weight&quot;</span>, add = <span class="string">&quot;mean&quot;</span>, rug = <span class="literal">TRUE</span>, color = <span class="string">&quot;sex&quot;</span>, </span><br><span class="line">                  fill = <span class="string">&quot;sex&quot;</span>,palette = c(<span class="string">&quot;#00AFBB&quot;</span>, <span class="string">&quot;#E7B800&quot;</span>))</span><br><span class="line">p2</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-4-1.png" alt="plot of chunk unnamed-chunk-4"></p><h4 id="箱线-小提琴图绘制-barplot-violinplot"><a href="#箱线-小提琴图绘制-barplot-violinplot" class="headerlink" title="箱线/小提琴图绘制(barplot/violinplot)"></a>箱线/小提琴图绘制(barplot/violinplot)</h4><ol><li><strong>箱线图+分组形状+统计</strong>  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data(&quot;mtcars&quot;)</span><br><span class="line">#jitter参数添加扰动点，点的形状shape由dose变量映射</span><br><span class="line">p3 &lt;- ggboxplot(mtcars, x&#x3D;&quot;cyl&quot;, y&#x3D;&quot;drat&quot;, color &#x3D; &quot;cyl&quot;,</span><br><span class="line">                palette &#x3D; c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),</span><br><span class="line">                add &#x3D; &quot;jitter&quot;, shape&#x3D;&quot;cyl&quot;) </span><br><span class="line">p3</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-5-1.png" alt="plot of chunk unnamed-chunk-5"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># stat_compare_means参数比较不同组之间的均值，并增加不同组间比较的p-value值，可以自定义需要标注的组间比较</span></span><br><span class="line">my_comparisons &lt;- list(c(<span class="string">&quot;4&quot;</span>, <span class="string">&quot;6&quot;</span>), c(<span class="string">&quot;6&quot;</span>, <span class="string">&quot;8&quot;</span>), c(<span class="string">&quot;4&quot;</span>, <span class="string">&quot;8&quot;</span>))</span><br><span class="line">p4 &lt;- p3 + stat_compare_means(comparisons = my_comparisons)+</span><br><span class="line">  stat_compare_means(label.y = <span class="number">6</span>)</span><br><span class="line">p4</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-6-1.png" alt="plot of chunk unnamed-chunk-6"></p><ol start="2"><li><strong>内有箱线图的小提琴图+星标记</strong>  </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add = “boxplot”添加箱线图，stat_compare_means中设置lable=”p.signif”，即可添加星添加组间比较连线和统计P值按星分类add添加箱线图，label标注选择显著性标记（星号）</span></span><br><span class="line">p5 &lt;- ggviolin(mtcars, x=<span class="string">&quot;cyl&quot;</span>, y=<span class="string">&quot;drat&quot;</span>, fill = <span class="string">&quot;cyl&quot;</span>,</span><br><span class="line">               palette = c(<span class="string">&quot;#00AFBB&quot;</span>, <span class="string">&quot;#E7B800&quot;</span>, <span class="string">&quot;#FC4E07&quot;</span>),</span><br><span class="line">               add = <span class="string">&quot;boxplot&quot;</span>, add.params = list(fill=<span class="string">&quot;white&quot;</span>))+        </span><br><span class="line">  stat_compare_means(comparisons = my_comparisons, label = <span class="string">&quot;p.signif&quot;</span>) +         </span><br><span class="line">  stat_compare_means(label.y = <span class="number">6</span>)</span><br><span class="line">p5</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-7-1.png" alt="plot of chunk unnamed-chunk-7"></p><h4 id="条形-柱状图绘制-barplot"><a href="#条形-柱状图绘制-barplot" class="headerlink" title="条形/柱状图绘制(barplot)"></a>条形/柱状图绘制(barplot)</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df2 &lt;- mtcars</span><br><span class="line"><span class="comment"># 设置因子变量</span></span><br><span class="line">df2$cyl &lt;- factor(df2$cyl)</span><br><span class="line">df2$name &lt;- rownames(df2) <span class="comment">#添加一新列name</span></span><br><span class="line">head(df2[, c(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;wt&quot;</span>, <span class="string">&quot;mpg&quot;</span>, <span class="string">&quot;cyl&quot;</span>)])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##                                name    wt  mpg cyl</span><br><span class="line">## Mazda RX4                 Mazda RX4 2.620 21.0   6</span><br><span class="line">## Mazda RX4 Wag         Mazda RX4 Wag 2.875 21.0   6</span><br><span class="line">## Datsun 710               Datsun 710 2.320 22.8   4</span><br><span class="line">## Hornet 4 Drive       Hornet 4 Drive 3.215 21.4   6</span><br><span class="line">## Hornet Sportabout Hornet Sportabout 3.440 18.7   8</span><br><span class="line">## Valiant                     Valiant 3.460 18.1   6</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 颜色按nature配色方法(支持 ggsci包中的本色方案 ，如: “npg”, “aaas”, “lancet”, “jco”, “ucscgb”, “uchicago”, “simpsons” and “rickandmorty”)</span></span><br><span class="line">p6 &lt;- ggbarplot(df2, x=<span class="string">&quot;name&quot;</span>, y=<span class="string">&quot;mpg&quot;</span>, fill = <span class="string">&quot;cyl&quot;</span>, color = <span class="string">&quot;white&quot;</span>,</span><br><span class="line">         palette = <span class="string">&quot;npg&quot;</span>, <span class="comment">#杂志nature的配色         </span></span><br><span class="line">         sort.val = <span class="string">&quot;desc&quot;</span>, <span class="comment">#降序排序         </span></span><br><span class="line">         sort.by.groups=<span class="literal">FALSE</span>, <span class="comment">#不按组排序         </span></span><br><span class="line">         x.text.angle=<span class="number">60</span>)</span><br><span class="line">p6</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-8-1.png" alt="plot of chunk unnamed-chunk-8"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按组进行排序</span></span><br><span class="line">p7 &lt;- ggbarplot(df2, x=<span class="string">&quot;name&quot;</span>, y=<span class="string">&quot;mpg&quot;</span>, fill = <span class="string">&quot;cyl&quot;</span>, color = <span class="string">&quot;white&quot;</span>,</span><br><span class="line">         palette = <span class="string">&quot;aaas&quot;</span>, <span class="comment">#杂志Science的配色</span></span><br><span class="line">         sort.val = <span class="string">&quot;asc&quot;</span>, <span class="comment">#升序排序,区别于desc         </span></span><br><span class="line">         sort.by.groups=<span class="literal">TRUE</span>,x.text.angle=<span class="number">60</span>) <span class="comment">#按组排序 x.text.angl设置x轴标签旋转角度</span></span><br><span class="line">p7</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-9-1.png" alt="plot of chunk unnamed-chunk-9"></p><h4 id="ƫ��ͼ����-Deviation-graphs"><a href="#ƫ��ͼ����-Deviation-graphs" class="headerlink" title="ƫ��ͼ����(Deviation graphs)"></a>ƫ��ͼ����(Deviation graphs)</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df2$mpg_z &lt;- (df2$mpg-mean(df2$mpg))/sd(df2$mpg)    </span><br><span class="line"><span class="comment"># 相当于Zscore标准化，减均值，除标准差</span></span><br><span class="line">df2$mpg_grp &lt;- factor(ifelse(df2$mpg_z&lt;<span class="number">0</span>, <span class="string">&quot;low&quot;</span>, <span class="string">&quot;high&quot;</span>), levels = c(<span class="string">&quot;low&quot;</span>, <span class="string">&quot;high&quot;</span>))   </span><br><span class="line"><span class="comment">#设置分组因子</span></span><br><span class="line">head(df2[, c(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;wt&quot;</span>, <span class="string">&quot;mpg&quot;</span>, <span class="string">&quot;mpg_grp&quot;</span>, <span class="string">&quot;cyl&quot;</span>)])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##                                name    wt  mpg mpg_grp cyl</span><br><span class="line">## Mazda RX4                 Mazda RX4 2.620 21.0    high   6</span><br><span class="line">## Mazda RX4 Wag         Mazda RX4 Wag 2.875 21.0    high   6</span><br><span class="line">## Datsun 710               Datsun 710 2.320 22.8    high   4</span><br><span class="line">## Hornet 4 Drive       Hornet 4 Drive 3.215 21.4    high   6</span><br><span class="line">## Hornet Sportabout Hornet Sportabout 3.440 18.7     low   8</span><br><span class="line">## Valiant                     Valiant 3.460 18.1     low   6</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p8 &lt;- ggbarplot(df2, x=<span class="string">&quot;name&quot;</span>, y=<span class="string">&quot;mpg_z&quot;</span>, fill = <span class="string">&quot;mpg_grp&quot;</span>, color = <span class="string">&quot;white&quot;</span>,</span><br><span class="line">      palette = <span class="string">&quot;jco&quot;</span>, sort.val = <span class="string">&quot;asc&quot;</span>, sort.by.groups = <span class="literal">FALSE</span>,                   </span><br><span class="line">      x.text.angle=<span class="number">60</span>, ylab = <span class="string">&quot;MPG z-score&quot;</span>, xlab = <span class="literal">FALSE</span>)</span><br><span class="line">p8</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-11-1.png" alt="plot of chunk unnamed-chunk-11"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rotate设置x/y轴对换</span></span><br><span class="line">p9 &lt;- ggbarplot(df2, x=<span class="string">&quot;name&quot;</span>, y=<span class="string">&quot;mpg_z&quot;</span>, fill = <span class="string">&quot;mpg_grp&quot;</span>, color = <span class="string">&quot;white&quot;</span>,</span><br><span class="line">         palette = <span class="string">&quot;jco&quot;</span>, sort.val = <span class="string">&quot;desc&quot;</span>, sort.by.groups = <span class="literal">FALSE</span>,</span><br><span class="line">         x.text.angle=<span class="number">90</span>, ylab = <span class="string">&quot;MPG z-score&quot;</span>, xlab = <span class="literal">FALSE</span>,</span><br><span class="line">        rotate=<span class="literal">TRUE</span>, ggtheme = theme_minimal())   </span><br><span class="line">p9</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-12-1.png" alt="plot of chunk unnamed-chunk-12"></p><h4 id="棒棒糖图绘制-Lollipop-chart"><a href="#棒棒糖图绘制-Lollipop-chart" class="headerlink" title="棒棒糖图绘制(Lollipop chart)"></a>棒棒糖图绘制(Lollipop chart)</h4><p>棒棒图代替条形图展示数据  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p10 &lt;- ggdotchart(df2, x=<span class="string">&quot;name&quot;</span>, y=<span class="string">&quot;mpg&quot;</span>, color = <span class="string">&quot;cyl&quot;</span>,</span><br><span class="line">          palette = c(<span class="string">&quot;#00AFBB&quot;</span>, <span class="string">&quot;#E7B800&quot;</span>, <span class="string">&quot;#FC4E07&quot;</span>),          </span><br><span class="line">          sorting = <span class="string">&quot;ascending&quot;</span>,          </span><br><span class="line">          add = <span class="string">&quot;segments&quot;</span>, ggtheme = theme_pubr())</span><br><span class="line">p10</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-13-1.png" alt="plot of chunk unnamed-chunk-13"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置其他参数, dot.size = 6调整糖的大小，添加label标签，设置字体样式和方向</span></span><br><span class="line">p11 &lt;- ggdotchart(df2, x=<span class="string">&quot;name&quot;</span>, y=<span class="string">&quot;mpg&quot;</span>, color = <span class="string">&quot;cyl&quot;</span>, </span><br><span class="line">         palette = c(<span class="string">&quot;#00AFBB&quot;</span>, <span class="string">&quot;#E7B800&quot;</span>, <span class="string">&quot;#FC4E07&quot;</span>),          </span><br><span class="line">         sorting = <span class="string">&quot;descending&quot;</span>, add = <span class="string">&quot;segments&quot;</span>, rotate = <span class="literal">TRUE</span>,</span><br><span class="line">         group = <span class="string">&quot;cyl&quot;</span>, dot.size = <span class="number">6</span>,          </span><br><span class="line">         label = round(df2$mpg), font.label = list(color=<span class="string">&quot;white&quot;</span>,</span><br><span class="line">         size=<span class="number">9</span>, vjust=<span class="number">0.5</span>), ggtheme = theme_pubr())</span><br><span class="line">p11</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-14-1.png" alt="plot of chunk unnamed-chunk-14"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#棒棒糖偏差图</span></span><br><span class="line">p12 &lt;- ggdotchart(df2, x = <span class="string">&quot;name&quot;</span>, y = <span class="string">&quot;mpg_z&quot;</span>,</span><br><span class="line">                  color = <span class="string">&quot;cyl&quot;</span>, <span class="comment"># Color by groups                    </span></span><br><span class="line">                  palette = c(<span class="string">&quot;#00AFBB&quot;</span>, <span class="string">&quot;#E7B800&quot;</span>, <span class="string">&quot;#FC4E07&quot;</span>), <span class="comment"># Custom color palette                    </span></span><br><span class="line">                  sorting = <span class="string">&quot;descending&quot;</span>, <span class="comment"># Sort value in descending order                    </span></span><br><span class="line">                  add = <span class="string">&quot;segments&quot;</span>, <span class="comment"># Add segments from y = 0 to dots                    </span></span><br><span class="line">                  add.params = list(color = <span class="string">&quot;lightgray&quot;</span>, size = <span class="number">2</span>), <span class="comment"># Change segment color and size                    </span></span><br><span class="line">                  group = <span class="string">&quot;cyl&quot;</span>, <span class="comment"># Order by groups                   </span></span><br><span class="line">                  dot.size = <span class="number">6</span>, <span class="comment"># Large dot size                    </span></span><br><span class="line">                  label = round(df2$mpg_z,<span class="number">1</span>), <span class="comment"># Add mpg values as dot labels，设置一位小数                    </span></span><br><span class="line">                  font.label = list(color = <span class="string">&quot;white&quot;</span>, size = <span class="number">9</span>, vjust = <span class="number">0.5</span>), <span class="comment"># Adjust label parameters                    </span></span><br><span class="line">                  ggtheme = theme_pubr()) + </span><br><span class="line">                  geom_hline(yintercept = <span class="number">0</span>, linetype = <span class="number">2</span>, color = <span class="string">&quot;lightgray&quot;</span>)</span><br><span class="line">p12</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-15-1.png" alt="plot of chunk unnamed-chunk-15"></p><h4 id="Cleveland��ͼ����"><a href="#Cleveland��ͼ����" class="headerlink" title="Cleveland��ͼ����"></a>Cleveland��ͼ����</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># theme_cleveland()主题可设置为Cleveland点图样式</span></span><br><span class="line">p13 &lt;- ggdotchart(df2, x = <span class="string">&quot;name&quot;</span>, y = <span class="string">&quot;mpg&quot;</span>,</span><br><span class="line">                  color = <span class="string">&quot;cyl&quot;</span>, <span class="comment"># Color by groups                    </span></span><br><span class="line">                  palette = c(<span class="string">&quot;#00AFBB&quot;</span>, <span class="string">&quot;#E7B800&quot;</span>, <span class="string">&quot;#FC4E07&quot;</span>), <span class="comment"># Custom color palette                    </span></span><br><span class="line">                  sorting = <span class="string">&quot;descending&quot;</span>, <span class="comment"># Sort value in descending order                    </span></span><br><span class="line">                  rotate = <span class="literal">TRUE</span>, <span class="comment"># Rotate vertically                    </span></span><br><span class="line">                  dot.size = <span class="number">2</span>, <span class="comment"># Large dot size                    </span></span><br><span class="line">                  y.text.col = <span class="literal">TRUE</span>, <span class="comment"># Color y text by groups                    </span></span><br><span class="line">                  ggtheme = theme_pubr()) + </span><br><span class="line">       theme_cleveland() <span class="comment"># Add dashed grids</span></span><br><span class="line">p13</span><br></pre></td></tr></table></figure><p><img src="/images/ggpubr-i/unnamed-chunk-16-1.png" alt="plot of chunk unnamed-chunk-16"></p><h3 id="常用基本绘图函数及参数"><a href="#常用基本绘图函数及参数" class="headerlink" title="常用基本绘图函数及参数"></a>常用基本绘图函数及参数</h3><h4 id="基本绘图函数"><a href="#基本绘图函数" class="headerlink" title="基本绘图函数"></a>基本绘图函数</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">gghistogram        Histogram plot <span class="comment">#绘制直方图</span></span><br><span class="line">ggdensity        Density plot <span class="comment">#绘制密度图</span></span><br><span class="line">ggdotplot        Dot plot <span class="comment">#绘制点图</span></span><br><span class="line">ggdotchart        Cleveland<span class="string">&#x27;s Dot Plots #绘制Cleveland点图</span></span><br><span class="line"><span class="string">ggline        Line plot #绘制线图</span></span><br><span class="line"><span class="string">ggbarplot        Bar plot #绘制条形/柱状图</span></span><br><span class="line"><span class="string">ggerrorplot        Visualizing Error #绘制误差棒图</span></span><br><span class="line"><span class="string">ggstripchart        Stripcharts #绘制线带图</span></span><br><span class="line"><span class="string">ggboxplot        Box plot #绘制箱线图</span></span><br><span class="line"><span class="string">ggviolin        Violin plot #绘制小提琴图</span></span><br><span class="line"><span class="string">ggpie        Pie chart #绘制饼图</span></span><br><span class="line"><span class="string">ggqqplot        QQ Plots #绘制QQ图</span></span><br><span class="line"><span class="string">ggscatter        Scatter plot #绘制散点图</span></span><br><span class="line"><span class="string">ggmaplot        MA-plot from means and log fold changes #绘制M-A图</span></span><br><span class="line"><span class="string">ggpaired        Plot Paired Data #绘制配对数据</span></span><br><span class="line"><span class="string">ggecdf          Empirical cumulative density function  #绘制经验累积密度分布图</span></span><br></pre></td></tr></table></figure><h4 id="基本参数"><a href="#基本参数" class="headerlink" title="基本参数"></a>基本参数</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">ggtext        Text <span class="comment">#添加文本</span></span><br><span class="line">border        Set ggplot Panel Border Line <span class="comment">#设置画布边框线</span></span><br><span class="line">grids        Add Grids to a ggplot <span class="comment">#添加网格线</span></span><br><span class="line">font        Change the Appearance of Titles and Axis Labels <span class="comment">#设置字体类型</span></span><br><span class="line">bgcolor        Change ggplot Panel Background Color <span class="comment">#更改画布背景颜色</span></span><br><span class="line">background_image        Add Background Image to ggplot2 <span class="comment">#添加背景图片</span></span><br><span class="line">facet        Facet a ggplot into Multiple Panels <span class="comment">#设置分面</span></span><br><span class="line">ggpar        Graphical parameters <span class="comment">#添加画图参数</span></span><br><span class="line">ggparagraph        Draw a Paragraph of Text <span class="comment">#添加文本段落</span></span><br><span class="line">ggtexttable        Draw a Textual Table <span class="comment">#添加文本表格</span></span><br><span class="line">ggadd        Add Summary Statistics or a Geom onto a ggplot <span class="comment">#添加基本统计结果或其他几何图形</span></span><br><span class="line">ggarrange        Arrange Multiple ggplots <span class="comment">#排版多个图形</span></span><br><span class="line">annotate_figure          Annotate Arranged Figure <span class="comment">#添加注释信息</span></span><br><span class="line">gradient_color        Set Gradient Color <span class="comment">#设置连续型颜色</span></span><br><span class="line">xscale        Change Axis Scale: log2, log10 and more <span class="comment">#更改坐标轴的标度</span></span><br><span class="line">add_summary        Add Summary Statistics onto a ggplot <span class="comment">#添加基本统计结果</span></span><br><span class="line">set_palette        Set Color Palette <span class="comment">#设置画板颜色</span></span><br><span class="line">rotate        Rotate a ggplot Horizontally <span class="comment">#设置图形旋转</span></span><br><span class="line">rotate_axis_text        Rotate Axes Text <span class="comment">#旋转坐标轴文本</span></span><br><span class="line">stat_stars        Add Stars to a Scatter Plot <span class="comment">#添加散点图星标</span></span><br><span class="line">stat_cor        Add Correlation Coefficients with P-values to a Scatter Plot <span class="comment">#添加相关系数</span></span><br><span class="line">stat_compare_means        Add Mean Comparison P-values to a ggplot <span class="comment">#添加平均值比较的P值</span></span><br><span class="line">diff_express      Differential gene expression analysis results <span class="comment">#内置差异分析结果数据集</span></span><br><span class="line">ggexport    Export ggplots <span class="comment"># 导出图片</span></span><br><span class="line">theme_transparent        Create a ggplot with Transparent Background <span class="comment">#设置透明背景</span></span><br><span class="line">theme_pubr        Publication ready theme <span class="comment">#设置出版物主题</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dplyr学习笔记(二)</title>
      <link href="2020/05/27/dplyr-ii/"/>
      <url>2020/05/27/dplyr-ii/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <p>在<code>dplyr</code>中提供的动词语法与其他操作进行连接，可以实现更加复杂的数据操作  </p><h2 id="group操作"><a href="#group操作" class="headerlink" title="group操作"></a>group操作</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># group操作</span></span><br><span class="line">by_tailnum &lt;- group_by(flights, tailnum)</span><br><span class="line"></span><br><span class="line"><span class="comment"># group操作</span></span><br><span class="line">delay &lt;- summarise(by_tailnum,</span><br><span class="line">  count = n(),</span><br><span class="line">  dist = mean(distance, na.rm = <span class="literal">TRUE</span>),</span><br><span class="line">  delay = mean(arr_delay, na.rm = <span class="literal">TRUE</span>))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delay</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 4,044 x 4</span><br><span class="line">##    tailnum count  dist  delay</span><br><span class="line">##    &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt;</span><br><span class="line">##  1 D942DN      4  854. 31.5  </span><br><span class="line">##  2 N0EGMQ    371  676.  9.98 </span><br><span class="line">##  3 N10156    153  758. 12.7  </span><br><span class="line">##  4 N102UW     48  536.  2.94 </span><br><span class="line">##  5 N103US     46  535. -6.93 </span><br><span class="line">##  6 N104UW     47  535.  1.80 </span><br><span class="line">##  7 N10575    289  520. 20.7  </span><br><span class="line">##  8 N105UW     45  525. -0.267</span><br><span class="line">##  9 N107US     41  529. -5.73 </span><br><span class="line">## 10 N108UW     60  534. -1.25 </span><br><span class="line">## # ... with 4,034 more rows</span><br></pre></td></tr></table></figure><blockquote><p>在<code>summarise()</code>函数中可以与基础的R函数(如：<code>min()</code>)进行联合操作，同时<code>dplyr</code>同样提供了一系列的快捷操作：  </p><ul><li><code>n()</code>: 观测值的个数  </li><li><code>n_distinct(x)</code>: unique的观测值数目  </li><li><code>first(x)</code>,<code>last(x)</code>, <code>nth(x, n)</code>: 第一个、最后一个、第n个观测值  </li></ul></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">destinations &lt;- group_by(flights, dest)</span><br><span class="line">summarise(destinations,</span><br><span class="line">  planes = n_distinct(tailnum),</span><br><span class="line">  flights = n()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 105 x 3</span><br><span class="line">##    dest  planes flights</span><br><span class="line">##    &lt;chr&gt;  &lt;int&gt;   &lt;int&gt;</span><br><span class="line">##  1 ABQ      108     254</span><br><span class="line">##  2 ACK       58     265</span><br><span class="line">##  3 ALB      172     439</span><br><span class="line">##  4 ANC        6       8</span><br><span class="line">##  5 ATL     1180   17215</span><br><span class="line">##  6 AUS      993    2439</span><br><span class="line">##  7 AVL      159     275</span><br><span class="line">##  8 BDL      186     443</span><br><span class="line">##  9 BGR       46     375</span><br><span class="line">## 10 BHM       45     297</span><br><span class="line">## # ... with 95 more rows</span><br></pre></td></tr></table></figure><p>当依据多个变量进行分组时，可以根据<code>summarise()</code>层层递进，得出结果  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">daily &lt;- group_by(flights, year, month, day)</span><br><span class="line"></span><br><span class="line">per_day   &lt;- summarise(daily, flights = n())</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">per_month &lt;- summarise(per_day, flights = sum(flights))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">per_year  &lt;- summarise(per_month, flights = sum(flights))</span><br></pre></td></tr></table></figure><h2 id="select-操作"><a href="#select-操作" class="headerlink" title="select 操作"></a>select 操作</h2><p><code>select</code>函数可以接受数字和具体的列名，但需要注意的是，当有与列名相同的其他赋值时，不能进行操作  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select(flights, year)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 1</span><br><span class="line">##     year</span><br><span class="line">##    &lt;int&gt;</span><br><span class="line">##  1  2013</span><br><span class="line">##  2  2013</span><br><span class="line">##  3  2013</span><br><span class="line">##  4  2013</span><br><span class="line">##  5  2013</span><br><span class="line">##  6  2013</span><br><span class="line">##  7  2013</span><br><span class="line">##  8  2013</span><br><span class="line">##  9  2013</span><br><span class="line">## 10  2013</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select(flights, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 1</span><br><span class="line">##     year</span><br><span class="line">##    &lt;int&gt;</span><br><span class="line">##  1  2013</span><br><span class="line">##  2  2013</span><br><span class="line">##  3  2013</span><br><span class="line">##  4  2013</span><br><span class="line">##  5  2013</span><br><span class="line">##  6  2013</span><br><span class="line">##  7  2013</span><br><span class="line">##  8  2013</span><br><span class="line">##  9  2013</span><br><span class="line">## 10  2013</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">year &lt;- <span class="number">5</span></span><br><span class="line">select(flights, year)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 1</span><br><span class="line">##     year</span><br><span class="line">##    &lt;int&gt;</span><br><span class="line">##  1  2013</span><br><span class="line">##  2  2013</span><br><span class="line">##  3  2013</span><br><span class="line">##  4  2013</span><br><span class="line">##  5  2013</span><br><span class="line">##  6  2013</span><br><span class="line">##  7  2013</span><br><span class="line">##  8  2013</span><br><span class="line">##  9  2013</span><br><span class="line">## 10  2013</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><h2 id="Mutating-操作"><a href="#Mutating-操作" class="headerlink" title="Mutating 操作"></a>Mutating 操作</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df &lt;- select(flights, year:dep_time)</span><br><span class="line"></span><br><span class="line">mutate(df, <span class="string">&quot;year&quot;</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 6</span><br><span class="line">##     year month   day dep_time &#96;&quot;year&quot;&#96;   &#96;2&#96;</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt; &lt;chr&gt;    &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1      517 year         2</span><br><span class="line">##  2  2013     1     1      533 year         2</span><br><span class="line">##  3  2013     1     1      542 year         2</span><br><span class="line">##  4  2013     1     1      544 year         2</span><br><span class="line">##  5  2013     1     1      554 year         2</span><br><span class="line">##  6  2013     1     1      554 year         2</span><br><span class="line">##  7  2013     1     1      555 year         2</span><br><span class="line">##  8  2013     1     1      557 year         2</span><br><span class="line">##  9  2013     1     1      557 year         2</span><br><span class="line">## 10  2013     1     1      558 year         2</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mutate(df, year + <span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 5</span><br><span class="line">##     year month   day dep_time &#96;year + 10&#96;</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;       &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1      517        2023</span><br><span class="line">##  2  2013     1     1      533        2023</span><br><span class="line">##  3  2013     1     1      542        2023</span><br><span class="line">##  4  2013     1     1      544        2023</span><br><span class="line">##  5  2013     1     1      554        2023</span><br><span class="line">##  6  2013     1     1      554        2023</span><br><span class="line">##  7  2013     1     1      555        2023</span><br><span class="line">##  8  2013     1     1      557        2023</span><br><span class="line">##  9  2013     1     1      557        2023</span><br><span class="line">## 10  2013     1     1      558        2023</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var &lt;- seq(<span class="number">1</span>, nrow(df))</span><br><span class="line">mutate(df, new = var)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 5</span><br><span class="line">##     year month   day dep_time   new</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt; &lt;int&gt;</span><br><span class="line">##  1  2013     1     1      517     1</span><br><span class="line">##  2  2013     1     1      533     2</span><br><span class="line">##  3  2013     1     1      542     3</span><br><span class="line">##  4  2013     1     1      544     4</span><br><span class="line">##  5  2013     1     1      554     5</span><br><span class="line">##  6  2013     1     1      554     6</span><br><span class="line">##  7  2013     1     1      555     7</span><br><span class="line">##  8  2013     1     1      557     8</span><br><span class="line">##  9  2013     1     1      557     9</span><br><span class="line">## 10  2013     1     1      558    10</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><p><code>group_by()</code>的操作同样可以修改和创建变量，不同的时该变量是group之后的  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group_by(df, month)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 4</span><br><span class="line">## # Groups:   month [12]</span><br><span class="line">##     year month   day dep_time</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;</span><br><span class="line">##  1  2013     1     1      517</span><br><span class="line">##  2  2013     1     1      533</span><br><span class="line">##  3  2013     1     1      542</span><br><span class="line">##  4  2013     1     1      544</span><br><span class="line">##  5  2013     1     1      554</span><br><span class="line">##  6  2013     1     1      554</span><br><span class="line">##  7  2013     1     1      555</span><br><span class="line">##  8  2013     1     1      557</span><br><span class="line">##  9  2013     1     1      557</span><br><span class="line">## 10  2013     1     1      558</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group_by(df, month = as.factor(month))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 4</span><br><span class="line">## # Groups:   month [12]</span><br><span class="line">##     year month   day dep_time</span><br><span class="line">##    &lt;int&gt; &lt;fct&gt; &lt;int&gt;    &lt;int&gt;</span><br><span class="line">##  1  2013 1         1      517</span><br><span class="line">##  2  2013 1         1      533</span><br><span class="line">##  3  2013 1         1      542</span><br><span class="line">##  4  2013 1         1      544</span><br><span class="line">##  5  2013 1         1      554</span><br><span class="line">##  6  2013 1         1      554</span><br><span class="line">##  7  2013 1         1      555</span><br><span class="line">##  8  2013 1         1      557</span><br><span class="line">##  9  2013 1         1      557</span><br><span class="line">## 10  2013 1         1      558</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group_by(df, day_binned = cut(day, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 5</span><br><span class="line">## # Groups:   day_binned [3]</span><br><span class="line">##     year month   day dep_time day_binned</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt; &lt;fct&gt;     </span><br><span class="line">##  1  2013     1     1      517 (0.97,11] </span><br><span class="line">##  2  2013     1     1      533 (0.97,11] </span><br><span class="line">##  3  2013     1     1      542 (0.97,11] </span><br><span class="line">##  4  2013     1     1      544 (0.97,11] </span><br><span class="line">##  5  2013     1     1      554 (0.97,11] </span><br><span class="line">##  6  2013     1     1      554 (0.97,11] </span><br><span class="line">##  7  2013     1     1      555 (0.97,11] </span><br><span class="line">##  8  2013     1     1      557 (0.97,11] </span><br><span class="line">##  9  2013     1     1      557 (0.97,11] </span><br><span class="line">## 10  2013     1     1      558 (0.97,11] </span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><h2 id="pipe-操作"><a href="#pipe-操作" class="headerlink" title="pipe 操作"></a>pipe 操作</h2><p>当进行多重的动词语法操作时，可以把一系列的操作进行融合，不过因此会损害代码的可读性  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 鎸笺父鏄笺工鎴笺父鏄笺付鎸笺功鏀笺赴同鎴笺傅牟鎼笺腹鎼笺阜鏄笺阜 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># method 1</span></span><br><span class="line">a1 &lt;- group_by(flights, year, month, day)</span><br><span class="line">a2 &lt;- select(a1, arr_delay, dep_delay)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Adding missing grouping variables: &#96;year&#96;, &#96;month&#96;, &#96;day&#96;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a3 &lt;- summarise(a2,</span><br><span class="line">  arr = mean(arr_delay, na.rm = <span class="literal">TRUE</span>),</span><br><span class="line">  dep = mean(dep_delay, na.rm = <span class="literal">TRUE</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;summarise()&#96; regrouping output by &#39;year&#39;, &#39;month&#39; (override with &#96;.groups&#96; argument)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a4 &lt;- filter(a3, arr &gt; <span class="number">30</span> | dep &gt; <span class="number">30</span>)</span><br><span class="line">a4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 49 x 5</span><br><span class="line">## # Groups:   year, month [11]</span><br><span class="line">##     year month   day   arr   dep</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;</span><br><span class="line">##  1  2013     1    16  34.2  24.6</span><br><span class="line">##  2  2013     1    31  32.6  28.7</span><br><span class="line">##  3  2013     2    11  36.3  39.1</span><br><span class="line">##  4  2013     2    27  31.3  37.8</span><br><span class="line">##  5  2013     3     8  85.9  83.5</span><br><span class="line">##  6  2013     3    18  41.3  30.1</span><br><span class="line">##  7  2013     4    10  38.4  33.0</span><br><span class="line">##  8  2013     4    12  36.0  34.8</span><br><span class="line">##  9  2013     4    18  36.0  34.9</span><br><span class="line">## 10  2013     4    19  47.9  46.1</span><br><span class="line">## # ... with 39 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># method 2</span></span><br><span class="line">filter(</span><br><span class="line">  summarise(</span><br><span class="line">    select(</span><br><span class="line">      group_by(flights, year, month, day),</span><br><span class="line">      arr_delay, dep_delay</span><br><span class="line">    ),</span><br><span class="line">    arr = mean(arr_delay, na.rm = <span class="literal">TRUE</span>),</span><br><span class="line">    dep = mean(dep_delay, na.rm = <span class="literal">TRUE</span>)</span><br><span class="line">  ),</span><br><span class="line">  arr &gt; <span class="number">30</span> | dep &gt; <span class="number">30</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Adding missing grouping variables: &#96;year&#96;, &#96;month&#96;, &#96;day&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;summarise()&#96; regrouping output by &#39;year&#39;, &#39;month&#39; (override with &#96;.groups&#96; argument)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 49 x 5</span><br><span class="line">## # Groups:   year, month [11]</span><br><span class="line">##     year month   day   arr   dep</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;</span><br><span class="line">##  1  2013     1    16  34.2  24.6</span><br><span class="line">##  2  2013     1    31  32.6  28.7</span><br><span class="line">##  3  2013     2    11  36.3  39.1</span><br><span class="line">##  4  2013     2    27  31.3  37.8</span><br><span class="line">##  5  2013     3     8  85.9  83.5</span><br><span class="line">##  6  2013     3    18  41.3  30.1</span><br><span class="line">##  7  2013     4    10  38.4  33.0</span><br><span class="line">##  8  2013     4    12  36.0  34.8</span><br><span class="line">##  9  2013     4    18  36.0  34.9</span><br><span class="line">## 10  2013     4    19  47.9  46.1</span><br><span class="line">## # ... with 39 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># method 3</span></span><br><span class="line"></span><br><span class="line">flights %&gt;%</span><br><span class="line">  group_by(year, month, day) %&gt;%</span><br><span class="line">  select(arr_delay, dep_delay) %&gt;%</span><br><span class="line">  summarise(</span><br><span class="line">    arr = mean(arr_delay, na.rm = <span class="literal">TRUE</span>),</span><br><span class="line">    dep = mean(dep_delay, na.rm = <span class="literal">TRUE</span>)</span><br><span class="line">  ) %&gt;%</span><br><span class="line">  filter(arr &gt; <span class="number">30</span> | dep &gt; <span class="number">30</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Adding missing grouping variables: &#96;year&#96;, &#96;month&#96;, &#96;day&#96;</span><br><span class="line">## &#96;summarise()&#96; regrouping output by &#39;year&#39;, &#39;month&#39; (override with &#96;.groups&#96; argument)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 49 x 5</span><br><span class="line">## # Groups:   year, month [11]</span><br><span class="line">##     year month   day   arr   dep</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;</span><br><span class="line">##  1  2013     1    16  34.2  24.6</span><br><span class="line">##  2  2013     1    31  32.6  28.7</span><br><span class="line">##  3  2013     2    11  36.3  39.1</span><br><span class="line">##  4  2013     2    27  31.3  37.8</span><br><span class="line">##  5  2013     3     8  85.9  83.5</span><br><span class="line">##  6  2013     3    18  41.3  30.1</span><br><span class="line">##  7  2013     4    10  38.4  33.0</span><br><span class="line">##  8  2013     4    12  36.0  34.8</span><br><span class="line">##  9  2013     4    18  36.0  34.9</span><br><span class="line">## 10  2013     4    19  47.9  46.1</span><br><span class="line">## # ... with 39 more rows</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tidyverse </tag>
            
            <tag> dplyr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dplyr学习笔记(一)</title>
      <link href="2020/05/27/dplyr-i/"/>
      <url>2020/05/27/dplyr-i/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="dplyr"><a href="#dplyr" class="headerlink" title="dplyr"></a>dplyr</h1><p><code>dplyr</code>是<code>tidyverse</code>数据科学包中的重要成员，提供了许多数据操控(data manipulation)的语法，用于快速处理数据。  </p><h2 id="Verbs-语法"><a href="#Verbs-语法" class="headerlink" title="Verbs 语法"></a>Verbs 语法</h2><p>在<code>dplyr</code>包中，提供了一致的动词语法，帮助解决最常见的数据操作:  </p><ul><li><code>filter()</code>: 根据值筛选数据  </li><li><code>arrange()</code>: 数据排序  </li><li><code>select()</code> 和 <code>rename()</code>: 根据名字选择变量  </li><li><code>mutate()</code> 和 <code>transmute()</code>: 修改数据  </li><li><code>summarise()</code>: 数据摘要  </li><li><code>sample_n()</code>和<code>sample_frac()</code>: 随机选择样本  </li></ul><h3 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(nycflights13)</span><br><span class="line">dim(flights)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 336776     19</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flights</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 19</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1      517            515         2</span><br><span class="line">##  2  2013     1     1      533            529         4</span><br><span class="line">##  3  2013     1     1      542            540         2</span><br><span class="line">##  4  2013     1     1      544            545        -1</span><br><span class="line">##  5  2013     1     1      554            600        -6</span><br><span class="line">##  6  2013     1     1      554            558        -4</span><br><span class="line">##  7  2013     1     1      555            600        -5</span><br><span class="line">##  8  2013     1     1      557            600        -3</span><br><span class="line">##  9  2013     1     1      557            600        -3</span><br><span class="line">## 10  2013     1     1      558            600        -2</span><br><span class="line">## # ... with 336,766 more rows, and 13 more variables:</span><br><span class="line">## #   arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,</span><br><span class="line">## #   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,</span><br><span class="line">## #   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><p>根据条件筛选行：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter(flights, month == <span class="number">1</span>, day == <span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 842 x 19</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1      517            515         2</span><br><span class="line">##  2  2013     1     1      533            529         4</span><br><span class="line">##  3  2013     1     1      542            540         2</span><br><span class="line">##  4  2013     1     1      544            545        -1</span><br><span class="line">##  5  2013     1     1      554            600        -6</span><br><span class="line">##  6  2013     1     1      554            558        -4</span><br><span class="line">##  7  2013     1     1      555            600        -5</span><br><span class="line">##  8  2013     1     1      557            600        -3</span><br><span class="line">##  9  2013     1     1      557            600        -3</span><br><span class="line">## 10  2013     1     1      558            600        -2</span><br><span class="line">## # ... with 832 more rows, and 13 more variables:</span><br><span class="line">## #   arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,</span><br><span class="line">## #   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,</span><br><span class="line">## #   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><p>这等价于<code>flights[flights$month == 1 &amp; flights$day == 1, ]</code>  </p><h3 id="arrange"><a href="#arrange" class="headerlink" title="arrange()"></a>arrange()</h3><p>数据排序  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrange(flights, year, month, day)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 19</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1      517            515         2</span><br><span class="line">##  2  2013     1     1      533            529         4</span><br><span class="line">##  3  2013     1     1      542            540         2</span><br><span class="line">##  4  2013     1     1      544            545        -1</span><br><span class="line">##  5  2013     1     1      554            600        -6</span><br><span class="line">##  6  2013     1     1      554            558        -4</span><br><span class="line">##  7  2013     1     1      555            600        -5</span><br><span class="line">##  8  2013     1     1      557            600        -3</span><br><span class="line">##  9  2013     1     1      557            600        -3</span><br><span class="line">## 10  2013     1     1      558            600        -2</span><br><span class="line">## # ... with 336,766 more rows, and 13 more variables:</span><br><span class="line">## #   arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,</span><br><span class="line">## #   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,</span><br><span class="line">## #   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><p>降序排列  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrange(flights, desc(arr_delay))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 19</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     9      641            900      1301</span><br><span class="line">##  2  2013     6    15     1432           1935      1137</span><br><span class="line">##  3  2013     1    10     1121           1635      1126</span><br><span class="line">##  4  2013     9    20     1139           1845      1014</span><br><span class="line">##  5  2013     7    22      845           1600      1005</span><br><span class="line">##  6  2013     4    10     1100           1900       960</span><br><span class="line">##  7  2013     3    17     2321            810       911</span><br><span class="line">##  8  2013     7    22     2257            759       898</span><br><span class="line">##  9  2013    12     5      756           1700       896</span><br><span class="line">## 10  2013     5     3     1133           2055       878</span><br><span class="line">## # ... with 336,766 more rows, and 13 more variables:</span><br><span class="line">## #   arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,</span><br><span class="line">## #   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,</span><br><span class="line">## #   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><h4 id="select"><a href="#select" class="headerlink" title="select()"></a>select()</h4><p>变量筛选  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Select columns by name</span></span><br><span class="line">select(flights, year, month, day)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 3</span><br><span class="line">##     year month   day</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;</span><br><span class="line">##  1  2013     1     1</span><br><span class="line">##  2  2013     1     1</span><br><span class="line">##  3  2013     1     1</span><br><span class="line">##  4  2013     1     1</span><br><span class="line">##  5  2013     1     1</span><br><span class="line">##  6  2013     1     1</span><br><span class="line">##  7  2013     1     1</span><br><span class="line">##  8  2013     1     1</span><br><span class="line">##  9  2013     1     1</span><br><span class="line">## 10  2013     1     1</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Select all columns between year and day (inclusive)</span></span><br><span class="line">select(flights, year:day)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 3</span><br><span class="line">##     year month   day</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;</span><br><span class="line">##  1  2013     1     1</span><br><span class="line">##  2  2013     1     1</span><br><span class="line">##  3  2013     1     1</span><br><span class="line">##  4  2013     1     1</span><br><span class="line">##  5  2013     1     1</span><br><span class="line">##  6  2013     1     1</span><br><span class="line">##  7  2013     1     1</span><br><span class="line">##  8  2013     1     1</span><br><span class="line">##  9  2013     1     1</span><br><span class="line">## 10  2013     1     1</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Select all columns except those from year to day (inclusive)</span></span><br><span class="line">select(flights, -(year:day))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 16</span><br><span class="line">##    dep_time sched_dep_time dep_delay arr_time sched_arr_time</span><br><span class="line">##       &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;</span><br><span class="line">##  1      517            515         2      830            819</span><br><span class="line">##  2      533            529         4      850            830</span><br><span class="line">##  3      542            540         2      923            850</span><br><span class="line">##  4      544            545        -1     1004           1022</span><br><span class="line">##  5      554            600        -6      812            837</span><br><span class="line">##  6      554            558        -4      740            728</span><br><span class="line">##  7      555            600        -5      913            854</span><br><span class="line">##  8      557            600        -3      709            723</span><br><span class="line">##  9      557            600        -3      838            846</span><br><span class="line">## 10      558            600        -2      753            745</span><br><span class="line">## # ... with 336,766 more rows, and 11 more variables:</span><br><span class="line">## #   arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,</span><br><span class="line">## #   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><p>利用<code>select</code>和其他辅助函数进行组合，进行更多类型的操作  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取变量并重命名</span></span><br><span class="line">select(flights, tail_num = tailnum)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 1</span><br><span class="line">##    tail_num</span><br><span class="line">##    &lt;chr&gt;   </span><br><span class="line">##  1 N14228  </span><br><span class="line">##  2 N24211  </span><br><span class="line">##  3 N619AA  </span><br><span class="line">##  4 N804JB  </span><br><span class="line">##  5 N668DN  </span><br><span class="line">##  6 N39463  </span><br><span class="line">##  7 N516JB  </span><br><span class="line">##  8 N829AS  </span><br><span class="line">##  9 N593JB  </span><br><span class="line">## 10 N3ALAA  </span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><h3 id="mutate"><a href="#mutate" class="headerlink" title="mutate()"></a>mutate()</h3><p>基于已有变量，添加新变量  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mutate(flights,</span><br><span class="line">  gain = arr_delay - dep_delay,</span><br><span class="line">  speed = distance / air_time * <span class="number">60</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 21</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1      517            515         2</span><br><span class="line">##  2  2013     1     1      533            529         4</span><br><span class="line">##  3  2013     1     1      542            540         2</span><br><span class="line">##  4  2013     1     1      544            545        -1</span><br><span class="line">##  5  2013     1     1      554            600        -6</span><br><span class="line">##  6  2013     1     1      554            558        -4</span><br><span class="line">##  7  2013     1     1      555            600        -5</span><br><span class="line">##  8  2013     1     1      557            600        -3</span><br><span class="line">##  9  2013     1     1      557            600        -3</span><br><span class="line">## 10  2013     1     1      558            600        -2</span><br><span class="line">## # ... with 336,766 more rows, and 15 more variables:</span><br><span class="line">## #   arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,</span><br><span class="line">## #   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,</span><br><span class="line">## #   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;, gain &lt;dbl&gt;, speed &lt;dbl&gt;</span><br></pre></td></tr></table></figure><p>并且，可以依据刚建立的新列进行操作  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mutate(flights,</span><br><span class="line">  gain = arr_delay - dep_delay,</span><br><span class="line">  gain_per_hour = gain / (air_time / <span class="number">60</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 21</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     1     1      517            515         2</span><br><span class="line">##  2  2013     1     1      533            529         4</span><br><span class="line">##  3  2013     1     1      542            540         2</span><br><span class="line">##  4  2013     1     1      544            545        -1</span><br><span class="line">##  5  2013     1     1      554            600        -6</span><br><span class="line">##  6  2013     1     1      554            558        -4</span><br><span class="line">##  7  2013     1     1      555            600        -5</span><br><span class="line">##  8  2013     1     1      557            600        -3</span><br><span class="line">##  9  2013     1     1      557            600        -3</span><br><span class="line">## 10  2013     1     1      558            600        -2</span><br><span class="line">## # ... with 336,766 more rows, and 15 more variables:</span><br><span class="line">## #   arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,</span><br><span class="line">## #   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,</span><br><span class="line">## #   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;, gain &lt;dbl&gt;, gain_per_hour &lt;dbl&gt;</span><br></pre></td></tr></table></figure><p>若只想保留新列，可以使用<code>transmute()</code>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">transmute(flights,</span><br><span class="line">  gain = arr_delay - dep_delay,</span><br><span class="line">  gain_per_hour = gain / (air_time / <span class="number">60</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 336,776 x 2</span><br><span class="line">##     gain gain_per_hour</span><br><span class="line">##    &lt;dbl&gt;         &lt;dbl&gt;</span><br><span class="line">##  1     9          2.38</span><br><span class="line">##  2    16          4.23</span><br><span class="line">##  3    31         11.6 </span><br><span class="line">##  4   -17         -5.57</span><br><span class="line">##  5   -19         -9.83</span><br><span class="line">##  6    16          6.4 </span><br><span class="line">##  7    24          9.11</span><br><span class="line">##  8   -11        -12.5 </span><br><span class="line">##  9    -5         -2.14</span><br><span class="line">## 10    10          4.35</span><br><span class="line">## # ... with 336,766 more rows</span><br></pre></td></tr></table></figure><h3 id="summarise"><a href="#summarise" class="headerlink" title="summarise()"></a>summarise()</h3><p>根据要求提供数据概要  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">summarise(flights,</span><br><span class="line">  delay = mean(dep_delay, na.rm = <span class="literal">TRUE</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 1 x 1</span><br><span class="line">##   delay</span><br><span class="line">##   &lt;dbl&gt;</span><br><span class="line">## 1  12.6</span><br></pre></td></tr></table></figure><h2 id="sample-n-和-sample-frac"><a href="#sample-n-和-sample-frac" class="headerlink" title="sample_n() 和 sample_frac()"></a>sample_n() 和 sample_frac()</h2><p>随机选择变量  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取变量并重命名</span></span><br><span class="line">sample_n(flights, <span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 10 x 19</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     4    19     1948           1930        18</span><br><span class="line">##  2  2013     5    17     1328           1329        -1</span><br><span class="line">##  3  2013     6    27      732            600        92</span><br><span class="line">##  4  2013     7    17     1010           1014        -4</span><br><span class="line">##  5  2013     8    17     1241           1229        12</span><br><span class="line">##  6  2013     7    14      700            700         0</span><br><span class="line">##  7  2013     9    24     1015           1020        -5</span><br><span class="line">##  8  2013    11    14     1451           1455        -4</span><br><span class="line">##  9  2013     3    17      847            850        -3</span><br><span class="line">## 10  2013    11     9     1629           1630        -1</span><br><span class="line">## # ... with 13 more variables: arr_time &lt;int&gt;,</span><br><span class="line">## #   sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,</span><br><span class="line">## #   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,</span><br><span class="line">## #   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,</span><br><span class="line">## #   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按比例选择</span></span><br><span class="line">sample_frac(flights, <span class="number">0.01</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">## # A tibble: 3,368 x 19</span><br><span class="line">##     year month   day dep_time sched_dep_time dep_delay</span><br><span class="line">##    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;</span><br><span class="line">##  1  2013     4     2      812            815        -3</span><br><span class="line">##  2  2013     8     6      542            545        -3</span><br><span class="line">##  3  2013     2     6      608            610        -2</span><br><span class="line">##  4  2013    10     5     1138           1145        -7</span><br><span class="line">##  5  2013     6    14     1515           1455        20</span><br><span class="line">##  6  2013     7    17      608            609        -1</span><br><span class="line">##  7  2013    10     2     1214           1223        -9</span><br><span class="line">##  8  2013     6     9     1739           1629        70</span><br><span class="line">##  9  2013     6    13      651            700        -9</span><br><span class="line">## 10  2013    10     1     2026           2029        -3</span><br><span class="line">## # ... with 3,358 more rows, and 13 more variables:</span><br><span class="line">## #   arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,</span><br><span class="line">## #   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,</span><br><span class="line">## #   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,</span><br><span class="line">## #   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,</span><br><span class="line">## #   time_hour &lt;dttm&gt;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>dplyr</code>动词语法的操作规律：  </p><ol><li>第一个参数是data.frame  </li><li>第二个参数是要进行的操作  </li><li>最后返回一个data.frame</li></ol>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tidyverse </tag>
            
            <tag> dplyr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inferCNV 推断拷贝数</title>
      <link href="2020/01/09/inferCNV/"/>
      <url>2020/01/09/inferCNV/</url>
      
        <content type="html"><![CDATA[<h2 id="inferCNV使用流程"><a href="#inferCNV使用流程" class="headerlink" title="inferCNV使用流程"></a>inferCNV使用流程</h2><h3 id="inferCNV简介"><a href="#inferCNV简介" class="headerlink" title="inferCNV简介"></a>inferCNV简介</h3><p><strong>inferCNV</strong>可以被用于单细胞RNA-seq数据识别大规模的染色体拷贝数变异，如：整个染色体或是大染色体片段的获得和缺失。主要是通过与一组参考“正常”细胞相比，探索肿瘤基因组不同位置基因表达强度来实现。生成的热图可以显示每条染色体的相对表达强度。通过与正常细胞相比，很容易看出肿瘤基因组哪些区域表达过于丰富或者不够丰富。  </p><h3 id="inferCNV安装"><a href="#inferCNV安装" class="headerlink" title="inferCNV安装"></a>inferCNV安装</h3><p>安装inferCNV需要同时安装<a href="https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/">JAGS</a> package.  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">&quot;BiocManager&quot;</span>, quietly = <span class="literal">TRUE</span>))</span><br><span class="line">     install.packages(<span class="string">&quot;BiocManager&quot;</span>)</span><br><span class="line">BiocManager::install(<span class="string">&quot;infercnv&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="inferCNV运行"><a href="#inferCNV运行" class="headerlink" title="inferCNV运行"></a>inferCNV运行</h3><p>inferCNV可以通过两步进行运行：  </p><p><strong>首先需要创建一个inferCNV对象</strong>。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">infercnv_obj = CreateInfercnvObject(raw_counts_matrix=system.file(<span class="string">&quot;extdata&quot;</span>, <span class="string">&quot;oligodendroglioma_expression_downsampled.counts.matrix.gz&quot;</span>, package = <span class="string">&quot;infercnv&quot;</span>),</span><br><span class="line">                                    annotations_file=system.file(<span class="string">&quot;extdata&quot;</span>,            <span class="string">&quot;oligodendroglioma_annotations_downsampled.txt&quot;</span>, package = <span class="string">&quot;infercnv&quot;</span>),</span><br><span class="line">                                    delim=<span class="string">&quot;\t&quot;</span>,</span><br><span class="line">                                    gene_order_file=system.file(<span class="string">&quot;extdata&quot;</span>, <span class="string">&quot;gencode_downsampled.EXAMPLE_ONLY_DONT_REUSE.txt&quot;</span>, package = <span class="string">&quot;infercnv&quot;</span>), ref_group_names=c(<span class="string">&quot;Microglia/Macrophage&quot;</span>,<span class="string">&quot;Oligodendrocytes (non-malignant)&quot;</span>)) </span><br></pre></td></tr></table></figure><p>需要的输入文件有三个：  </p><ul><li><p><strong>Raw Counts Matrix for Genes x Cells</strong></p><p><strong>inferCNV</strong>可以兼容来自<code>smart-seq2</code>和<code>10x genmoic</code>等单细胞测序平台的数据，count矩阵必须行是基因，列是细胞的矩阵，格式如下：  </p><table><thead><tr><th></th><th>MGH54_P16_F12</th><th>MGH54_P12_C10</th><th>MGH54_P11_C11</th><th>MGH54_P15_D06</th><th>…</th></tr></thead><tbody><tr><td>A2M</td><td>0</td><td>0</td><td>0</td><td>0</td><td>…</td></tr><tr><td>AAAS</td><td>0</td><td>37</td><td>30</td><td>21</td><td>…</td></tr><tr><td>AACS</td><td>0</td><td>0</td><td>0</td><td>0</td><td>…</td></tr><tr><td>AADAT</td><td>0</td><td>0</td><td>0</td><td>0</td><td>…</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table></li><li><p><strong>Sample annotation file</strong>  </p><p>样本注释文件包括两列：第一列是细胞名字，第二列是细胞的类型，以<code>tab</code>分割。如果已知正常细胞的类型，可以给出具体的细胞类型，并且，在进行计算时，每一种细胞类型都将作为单独的正常细胞存在，而不是整合成一个正常的类型。同样，如果并不能详细的获得正常细胞的类型，可以将其统称为normal，作为统一的正常细胞类型。对于恶性细胞需要标记为<code>malignant_&#123;patient&#125;</code>的形式。使它们在聚类时可以聚在一起。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MGH54_P2_C12    Microglia&#x2F;Macrophage</span><br><span class="line">MGH36_P6_F03    Microglia&#x2F;Macrophage</span><br><span class="line">MGH54_P16_F12   Oligodendrocytes (non-malignant)</span><br><span class="line">MGH54_P12_C10   Oligodendrocytes (non-malignant)</span><br><span class="line">MGH36_P1_B02    malignant_MGH36</span><br><span class="line">MGH36_P1_H10    malignant_MGH36</span><br></pre></td></tr></table></figure></li><li><p><strong>Gene ordering file</strong>  </p><p>Gene ordering文件提供每个基因的染色体位置信息，使用<code>tab</code>分割。要分析的count矩阵中的每个基因都应该在这个基因排序文件中提供相应的基因名称和位置信息。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WASH7P  chr1    14363   29806</span><br><span class="line">LINC00115       chr1    761586  762902</span><br><span class="line">NOC2L   chr1    879584  894689</span><br><span class="line">MIR200A chr1    1103243 1103332</span><br><span class="line">SDF4    chr1    1152288 1167411</span><br><span class="line">UBE2J2  chr1    1189289 1209265</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注意，如果没有参考的正常细胞，可以设置<code>ref_group_names=NULL</code>，使用所有细胞的平均表达作为参考基线。</p><p>此外，inferCNV默认已经去除低质量的细胞，如果要进一步进行最大或最小count值的过滤，可以设置<code>min_max_counts_per_cell=c(1e5,1e6)</code>  </p></blockquote><p><strong>在创建<code>infercnv_obj</code>对象之后，使用内置的<code>infercnv::run()</code>方法运行标准的infercnv过程：</strong>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">infercnv_obj = infercnv::run(infercnv_obj,</span><br><span class="line">                             cutoff=<span class="number">1</span>, <span class="comment"># cutoff=1 works well for Smart-seq2, and cutoff=0.1 works well for 10x Genomics</span></span><br><span class="line">                             out_dir=tempfile(), </span><br><span class="line">                             cluster_by_groups=<span class="literal">TRUE</span>, </span><br><span class="line">                             denoise=<span class="literal">TRUE</span>,</span><br><span class="line">                             HMM=<span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><p><code>cutoff</code>决定了哪个基因可以被用于infercnv分析  </p><p><code>cluster_by_groups</code>可以根据细胞注释文件对细胞进行聚类  </p><h3 id="inferCNV降噪处理"><a href="#inferCNV降噪处理" class="headerlink" title="inferCNV降噪处理"></a>inferCNV降噪处理</h3><p>降噪处理可以降低噪声对与表达的影响，同时保留在肿瘤细胞中的表达  </p><ol><li><p>使用固定阈值过滤  </p><p>可以使用<code>noise_filter</code>参数设定一个特定的偏离均值的阈值  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">infercnv_obj = infercnv::run(infercnv_obj,</span><br><span class="line">                             cutoff=<span class="number">1</span>, <span class="comment"># cutoff=1 works well for Smart-seq2, and cutoff=0.1 works well for 10x Genomics</span></span><br><span class="line">                             out_dir=out_dir, </span><br><span class="line">                             cluster_by_groups=<span class="literal">T</span>, </span><br><span class="line">                             plot_steps=<span class="literal">F</span>,</span><br><span class="line">                             denoise=<span class="literal">T</span>, <span class="comment">## de noise</span></span><br><span class="line">                             noise_filter=<span class="number">0.1</span>   <span class="comment">## hard thresholds</span></span><br><span class="line">                             )</span><br></pre></td></tr></table></figure><p><img src="/images/inferCNV/denoise_hard_filter.png" alt="p1">  </p></li></ol><ol start="2"><li><p>使用动态阈值过滤  </p><p>默认情况下，用于去噪的硬边界是基于剩余的正常表达值的标准差来计算的。这个阈值可以使用<code>sd_amplifier</code>参数进行调整。例如，我们可以使用1.5 *标准差的过滤如下:  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">infercnv_obj = infercnv::run(infercnv_obj,</span><br><span class="line">                             cutoff=<span class="number">1</span>, <span class="comment"># cutoff=1 works well for Smart-seq2, and cutoff=0.1 works well for 10x Genomics</span></span><br><span class="line">                             out_dir=out_dir, </span><br><span class="line">                             cluster_by_groups=<span class="literal">T</span>, </span><br><span class="line">                             plot_steps=<span class="literal">F</span>,</span><br><span class="line">                             denoise=<span class="literal">T</span>,</span><br><span class="line">                             sd_amplifier=<span class="number">1.5</span>  <span class="comment">## set dynamic thresholding based on the standard deviation value.</span></span><br><span class="line">                             )</span><br></pre></td></tr></table></figure><p><img src="/images/inferCNV/denoise_dynamic_sd.png" alt="p2">    </p></li></ol><h3 id="基于HMM的CNV预测方法"><a href="#基于HMM的CNV预测方法" class="headerlink" title="基于HMM的CNV预测方法"></a>基于HMM的CNV预测方法</h3><p>inferCNV当前支持两种基于HMM的CNV预测方法（i3和i6）。两种方法可以通过<code>infercnv::run()</code>函数中的<code>HMM_type</code>参数进行设定，默认为<code>HMM_type=&#39;i6</code>  </p><p>两种方法的操作对象都是对<code>CreateInfercnvObject()</code>函数计算出来的<code>infercnv</code>对象进行处理。  </p><blockquote><p><a href="https://github.com/broadinstitute/infercnv/wiki/infercnv-i3-HMM-type">i3 HMM</a>: 包括CNV的三种状态： 拷贝数缺失（deletion）、拷贝数中立（neutral）、拷贝数扩增（amplification ）  </p><p><a href="https://github.com/broadinstitute/infercnv/wiki/infercnv-i6-HMM-type">i6 HMM</a>: 包括更加精细定义六种CNV改变状态：  </p><ul><li>0x: complete loss </li><li>0.5x: loss of one copy  </li><li>1x: neutral  </li><li>1.5x: addition of one copy  </li><li>2x: addition of two copies  </li><li>3x: essentially a placeholder for &gt;2x copies but modeled as 3x  </li></ul></blockquote><h3 id="CNV-region预测报告"><a href="#CNV-region预测报告" class="headerlink" title="CNV region预测报告"></a>CNV region预测报告</h3><p>CNV的推断预测结果包含在以下文件夹中：  </p><ul><li><p><code>HMM_CNV_predictions.*.pred_cnv_regions.dat</code> ：包含CNV区域坐标、状态分配和细胞分组的摘要信息。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cell_group_name                         cnv_name        state   chr     start   end</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     chr1    3696784 144612683</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_4   1.5     chr1    151336778       156213123</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr3-region_7   1.5     chr3    3168600 10285427</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr3-region_9   1.5     chr3    45429998        49460186</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr4-region_11  0.5     chr4    53179   187134610</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr5-region_13  1.5     chr5    134181370       177037348</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>HMM_CNV_predictions.*.cell_groupings</code>: 提供肿瘤subcluster和细胞成员的对应关系  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cell_group_name                         cell</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      MGH36_P3_E06</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      MGH36_P10_E07</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      MGH36_P3_C04</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      MGH36_P3_A09</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      MGH36_P2_A08</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      MGH36_P10_B08</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      MGH36_P8_H09</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>HMM_CNV_predictions.*.pred_cnv_genes.dat</code>: 包含每个细胞、每个基因的CNV状态分级情况  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cell_group_name                         gene_region_name state   gene    chr     start   end</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     DFFB    chr1    3696784 3713068</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     C1orf174        chr1    3773845 3801993</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     RPL22   chr1    3805689 3816857</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     ICMT    chr1    6241329 6269449</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     ACOT7   chr1    6281253 6296032</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     NOL9    chr1    6324329 6454451</span><br><span class="line">malignant_MGH36.malignant_MGH36_s1      chr1-region_2   0.5     KLHL21  chr1    6581407 6614595</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><ul><li><code>HMM_CNV_predictions.*.genes_used.dat</code>: 提供在分析中使用的基因列表  </li></ul><h3 id="推断肿瘤subclusters"><a href="#推断肿瘤subclusters" class="headerlink" title="推断肿瘤subclusters"></a>推断肿瘤subclusters</h3><p>通过设置 <code>infercnv::run(analysis_mode=&#39;subclusters&#39;)</code>, inferCNV会试着根据CNV改变的模式对细胞进行聚类。  </p><p>在inferCNV中，使用的聚类方式为层次聚类（hierarchical clustering），根据层次聚类树划分不同的subcluster。有三个参数可以影响层次聚类划分的结果：  </p><ul><li><code>infercnv::run(hclust_method=&#39;ward.D2&#39;)</code>：层次聚类使用的方法，支持所有的<code>hclust</code>方法。目前作者认为<code>ward.D2</code>的效果最好  </li><li><code>infercnv::run(tumor_subcluster_partition_method=&#39;random_trees&#39;)</code>：划分层次聚类树的方法。可选的方法为：<code>random_trees</code>, <code>qnorm</code>  </li><li><code>infercnv::run(tumor_subcluster_pval=0.05)</code>:用于确定分层树中的切割点的设置  </li></ul><h3 id="inferCNV的输出"><a href="#inferCNV的输出" class="headerlink" title="inferCNV的输出"></a>inferCNV的输出</h3><p>通过inferCNV的<code>run</code>函数运行后，会产生一些输出文件：  </p><ul><li><code>infercnv.preliminary.png</code>:初步的inferCNV图像  </li><li><code>infercnv.png </code>：采用去噪方法，生成最终的热图  </li><li><code>infercnv.references.txt</code>：“正常”细胞矩阵数据值  </li><li><code>infercnv.observations.txt</code>：肿瘤细胞数据值  </li><li><code>infercnv.observation_groupings.txt</code>：聚类后的肿瘤细胞关系  </li><li><code>infercnv.observations_dendrogram.txt </code>：肿瘤细胞聚类树状结构图  </li></ul><h3 id="解读inferCNV图像"><a href="#解读inferCNV图像" class="headerlink" title="解读inferCNV图像"></a>解读inferCNV图像</h3><p>通过inferCNV会得到类似于下面的聚类图：  </p><p><img src="/images/inferCNV/infercnv.png" alt="p3">    </p><p>正常细胞的表达值绘制在顶部的热图中，肿瘤细胞绘制在底部的热图中，基因从左到右排列在染色体上。将正常的细胞表达数据从肿瘤细胞表达数据中减去，产生差异，其中染色体区域扩增为红色块，染色体区域缺失为蓝色块。  </p><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/broadinstitute/infercnv/wiki">https://github.com/broadinstitute/infercnv/wiki</a>  </p>]]></content>
      
      
      <categories>
          
          <category> SingleCell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> inferCNV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复合饼图</title>
      <link href="2020/01/07/pie/"/>
      <url>2020/01/07/pie/</url>
      
        <content type="html"><![CDATA[<p>复合图形可以给出更多的信息，并且更能够观察数据之间的联系。一般所说的复合饼图包括以下两种：  </p><p><strong>散点复合饼图</strong>（compound scatter and pie chart）可以展示三个数据变量的信息：(x, y, P)，其中x和y决定气泡在直角坐标系中的位置，P表示饼图的数据信息，决定饼图中各个类别的占比情况，如图1(a)所示。  </p><p><strong>气泡复合饼图</strong>（compound bubble and pie chart）可以展示四个数据变量的信息：(x, y, z, P)，其中x和y决定气泡在直角坐标系中的位置，z决定气泡的大小，P表示饼图的数据信息，决定饼图中各个类别的占比情况，如图1(b)所示。  </p><div align="center">  <img src="/images/pie/P1.png" height="300" width = "300">  <img src="/images/pie/P2.png" height="300" width = "300" ></div><p>具体操作如下：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggforce)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">data_graph &lt;- read.table(text = <span class="string">&quot;x     y group    nb</span></span><br><span class="line"><span class="string">1     0     0     1  1060</span></span><br><span class="line"><span class="string">2     0     0     2   361</span></span><br><span class="line"><span class="string">3     0     0     3   267</span></span><br><span class="line"><span class="string">4     0     1     1   788</span></span><br><span class="line"><span class="string">5     0     1     2   215</span></span><br><span class="line"><span class="string">6     0     1     3    80</span></span><br><span class="line"><span class="string">7     1     0     1   485</span></span><br><span class="line"><span class="string">8     1     0     2   168</span></span><br><span class="line"><span class="string">9     1     0     3   101</span></span><br><span class="line"><span class="string">10     1     1     1  6306</span></span><br><span class="line"><span class="string">11     1     1     2  1501</span></span><br><span class="line"><span class="string">12     1     1     3   379&quot;</span>, header = <span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># make group a factor</span></span><br><span class="line">data_graph$group &lt;- factor(data_graph$group)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add case variable that separates the four pies</span></span><br><span class="line">data_graph &lt;- cbind(data_graph, case = rep(c(<span class="string">&quot;Aaaa&quot;</span>, <span class="string">&quot;Bbbb&quot;</span>, <span class="string">&quot;Cccc&quot;</span>, <span class="string">&quot;Dddd&quot;</span>), each = <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># calculate the start and end angles for each pie</span></span><br><span class="line">data_graph &lt;- left_join(data_graph,</span><br><span class="line">                        data_graph %&gt;% </span><br><span class="line">                          group_by(case) %&gt;%</span><br><span class="line">                          summarize(nb_total = sum(nb))) %&gt;%</span><br><span class="line">  group_by(case) %&gt;%</span><br><span class="line">  mutate(nb_frac = <span class="number">2</span>*pi*cumsum(nb)/nb_total,</span><br><span class="line">         start = lag(nb_frac, default = <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># position of the labels</span></span><br><span class="line">data_labels &lt;- data_graph %&gt;% </span><br><span class="line">  group_by(case) %&gt;%</span><br><span class="line">  summarize(x = x[<span class="number">1</span>], y = y[<span class="number">1</span>], nb_total = nb_total[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># overall scaling for pie size</span></span><br><span class="line">scale = <span class="number">.5</span>/sqrt(max(data_graph$nb_total))</span><br><span class="line"></span><br><span class="line"><span class="comment"># draw the pies</span></span><br><span class="line">ggplot(data_graph) + </span><br><span class="line">  geom_arc_bar(aes(x0 = x, y0 = y, r0 = <span class="number">0</span>, r = sqrt(nb_total)*scale,</span><br><span class="line">                   start = start, end = nb_frac, fill = group)) +</span><br><span class="line">  geom_text(data = data_labels,</span><br><span class="line">            aes(label = case, x = x, y = y + scale*sqrt(nb_total) + <span class="number">.05</span>),</span><br><span class="line">            size =<span class="number">11</span>/.pt, vjust = <span class="number">0</span>) +</span><br><span class="line">  coord_fixed() +</span><br><span class="line">  scale_x_continuous(breaks = c(<span class="number">0</span>, <span class="number">1</span>), labels = c(<span class="string">&quot;X0&quot;</span>, <span class="string">&quot;X1&quot;</span>), name = <span class="string">&quot;x axis&quot;</span>) +</span><br><span class="line">  scale_y_continuous(breaks = c(<span class="number">0</span>, <span class="number">1</span>), labels = c(<span class="string">&quot;Y0&quot;</span>, <span class="string">&quot;Y1&quot;</span>), name = <span class="string">&quot;y axis&quot;</span>) +</span><br><span class="line">  theme_minimal() +</span><br><span class="line">  theme(panel.grid.minor = element_blank())</span><br></pre></td></tr></table></figure><p>最终得到的图形如下所示：  </p><div align="center">  <img src="/images/pie/P3.png" height="100" width = "100"></div>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R graphics cookbook</title>
      <link href="2019/12/28/cookbook/"/>
      <url>2019/12/28/cookbook/</url>
      
        <content type="html"><![CDATA[<h2 id="R语言绘制基础图形"><a href="#R语言绘制基础图形" class="headerlink" title="R语言绘制基础图形"></a>R语言绘制基础图形</h2><p>R语言绘制图像主要有三种方式：（1）由<code>graphics</code>包提供的基础绘图方式；（2）基于<code>ggplot2</code>的<code>qplot()</code>快捷绘图函数；（3）<code>ggplot2</code>图层绘图风格  </p><h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">plot(mtcars$wt, mtcars$mpg)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">qplot(mtcars$wt, mtcars$mpg)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法三</span></span><br><span class="line">ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()</span><br></pre></td></tr></table></figure><div align="left">  <img src="/images/cookbook/P1.jpg" height="100" width = "100">  <img src="/images/cookbook/P2.jpg" height="100" width = "100" >    </div><h3 id="线图"><a href="#线图" class="headerlink" title="线图"></a>线图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">plot(pressure$temperature, pressure$pressure, type=<span class="string">&quot;l&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">qplot(pressure$temperature, pressure$pressure, geom=<span class="string">&quot;line&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法三</span></span><br><span class="line">ggplot(pressure, aes(x=temperature, y=pressure)) + geom_line()</span><br></pre></td></tr></table></figure><div align="left">  <img src="/images/cookbook/P4.jpg" height="100" width = "100">  <img src="/images/cookbook/P3.jpg" height="100" width = "100" >    </div><p>同时绘制点和线  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">lines(pressure$temperature, pressure$pressure, col=<span class="string">&quot;red&quot;</span>)</span><br><span class="line">points(pressure$temperature, pressure$pressure, col=<span class="string">&quot;red&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">qplot(temperature, pressure, data=pressure, geom=c(<span class="string">&quot;line&quot;</span>, <span class="string">&quot;point&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法三</span></span><br><span class="line">ggplot(pressure, aes(x=temperature, y=pressure)) + geom_line() + geom_point()</span><br></pre></td></tr></table></figure><div align="left">  <img src="/images/cookbook/P5.jpg" height="100" width = "100"></div><h3 id="条形图"><a href="#条形图" class="headerlink" title="条形图"></a>条形图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">barplot(table(mtcars$cyl))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">qplot(BOD$Time, BOD$demand, geom=<span class="string">&quot;bar&quot;</span>, stat=<span class="string">&quot;identity&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法三</span></span><br><span class="line">ggplot(BOD, aes(x=Time, y=demand)) + geom_bar(stat=<span class="string">&quot;identity&quot;</span>)</span><br></pre></td></tr></table></figure><div align="left">  <img src="/images/cookbook/P6.jpg" height="100" width = "100">  <img src="/images/cookbook/P7.jpg" height="100" width = "100"></div><h3 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">hist(mtcars$mpg)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">qplot(mpg, data=mtcars, binwidth=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法三</span></span><br><span class="line">ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=<span class="number">4</span>)</span><br></pre></td></tr></table></figure><div align="left">  <img src="/images/cookbook/P8.jpg" height="100" width = "100">  <img src="/images/cookbook/P9.jpg" height="100" width = "100"></div><h3 id="箱式图"><a href="#箱式图" class="headerlink" title="箱式图"></a>箱式图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">boxplot(len ~ supp, data = ToothGrowth)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">qplot(ToothGrowth$supp, ToothGrowth$len, geom=<span class="string">&quot;boxplot&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法三</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=supp, y=len)) + geom_boxplot()</span><br></pre></td></tr></table></figure><div align="left">  <img src="/images/cookbook/P10.jpg" height="100" width = "100">  <img src="/images/cookbook/P11.jpg" height="100" width = "100"></div><p>同时使用多个分组变量  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一</span></span><br><span class="line">boxplot(len ~ supp + dose, data = ToothGrowth)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法二</span></span><br><span class="line">qplot(interaction(supp, dose), len, data=ToothGrowth, geom=<span class="string">&quot;boxplot&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 方法三</span></span><br><span class="line">ggplot(ToothGrowth, aes(x=interaction(supp, dose), y=len)) + geom_boxplot()</span><br></pre></td></tr></table></figure><div align="left">  <img src="/images/cookbook/P12.jpg" height="100" width = "100">  <img src="/images/cookbook/P13.jpg" height="100" width = "100"></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>基于图层的<code>ggplot2</code>绘图风格是将图形中的每一个对象拆分开，然后根据不同的需求映射到图形中  </p><p><code>ggplot()</code>函数控制图像的整体格式，x、y轴的对象<br><code>geom_point</code>函数描述的是点图层的属性<br><code>geom_line</code>函数描述的是线图层的属性<br><code>geom_bar</code>函数是条形图的属性<br><code>geom_boxplot</code>函数控制的是箱线图图层的属性<br><code>geom_histogram</code>函数控制直方图图层的属性  </p><h2 id="ggplot2图形语法"><a href="#ggplot2图形语法" class="headerlink" title="ggplot2图形语法"></a>ggplot2图形语法</h2><p>必须的图表输入信息包括以下两部分：  </p><p>（1）ggplot()：底层绘图函数。DATA为数据集，主要是数据框（data.frame）格式的数据集；MAPPINGS变量的视觉通道映射，用来表示变量x和y，还可以用来控制颜色（color）、大小（size）或形状（shape）等视觉通道；STAT表示统计变换，与stat_×××()相对应，默认为”identity”（无数据变换）；POSITION表示绘图数据系列的位置调整，默认为”identity”（无位置调整）  </p><p>（2）geom_×××() | stat_×××()：几何图层或统计变换，比如常见的geom_point()（散点图）、geom_bar()（柱形图）、geom_histogram()（统计直方图）、geom_ boxplot()（箱形图）、geom_line()（折线图）等。我们通常使用geom_×××()函数就可以绘制大部分图表，有时候通过设定stat参数可以先实现统计变换。  </p><p>可选的图表输入信息包括如下5个部分，主要是实现图表的美化与变换等。  </p><p>(1) scale_×××()：度量调整，调整具体的度量，包括颜色（color）、大小（size）或形状（shape）等，跟MAPPINGS的映射变量相对应；<br>(2) coord_×××()：坐标变换，默认笛卡儿坐标系，还包括极坐标系、地理空间坐标系等；<br>(3) facet_×××()：分面系统，将某个变量进行分面变换，包括按行、列和网格等形式分面绘图，这部分内容具体可见第9章9.4节。<br>(4) guides()：图例调整，主要包括连续型和离散型两种类型的图例。<br>(5) theme()：主题设定，主要用于调整图表的细节，包括图表背景颜色、网格线的间隔与颜色等。  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> ggplot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础R操作</title>
      <link href="2019/12/28/baseR/"/>
      <url>2019/12/28/baseR/</url>
      
        <content type="html"><![CDATA[<h2 id="R-package信息查看"><a href="#R-package信息查看" class="headerlink" title="R package信息查看"></a>R package信息查看</h2><table><thead><tr><th><strong>命令</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>installed.packages()</code></td><td>返回一个矩阵，包含所有已安装的包信息</td></tr><tr><td><code>available.packages()</code></td><td>返回一个矩阵，包含远端库上所有可用的R包</td></tr><tr><td><code>old.packages()</code></td><td>返回一个矩阵，显示所有已安装的包中具有新版本的包</td></tr><tr><td><code>new.packages()</code></td><td>返回一个矩阵，包含所有已安装的包信息</td></tr><tr><td><code>download.packages()</code></td><td>下载一系列R包到本地目录</td></tr><tr><td><code>install.packages()</code></td><td>从远端库下载安装一系列R包</td></tr><tr><td><code>remove.packages()</code></td><td>移除一系列已安装的R包</td></tr></tbody></table><h2 id="公式的创建与使用"><a href="#公式的创建与使用" class="headerlink" title="公式的创建与使用"></a>公式的创建与使用</h2><p>最基础实用的方法就是调用函数 <code>as.formula()</code> :  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">as.formula(<span class="string">&quot;y ~ x1 + x2&quot;</span>)</span><br><span class="line"><span class="comment">#&gt; y ~ x1 + x2</span></span><br></pre></td></tr></table></figure><p>从公式中提取部分字符串  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">f &lt;- y ~ x1 + x2</span><br><span class="line">f[[<span class="number">1</span>]]</span><br><span class="line"><span class="comment">#&gt; `~`</span></span><br><span class="line">as.list(f)</span><br><span class="line"><span class="comment">#&gt; [[1]]</span></span><br><span class="line"><span class="comment">#&gt; `~`</span></span><br><span class="line"><span class="comment">#&gt; </span></span><br><span class="line"><span class="comment">#&gt; [[2]]</span></span><br><span class="line"><span class="comment">#&gt; y</span></span><br><span class="line"><span class="comment">#&gt; </span></span><br><span class="line"><span class="comment">#&gt; [[3]]</span></span><br><span class="line"><span class="comment">#&gt; x1 + x2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 博客搭建</title>
      <link href="2019/12/27/hexo/"/>
      <url>2019/12/27/hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用hexo + github pages 搭建博客的好处:  </p><ol><li>全是静态文件，访问速度快；  </li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；  </li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的  </li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；  </li><li>博客内容可以轻松打包、转移、发布到其它平台  </li></ol><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>有一个github账号，没有的话去注册一个；<br>安装了<code>node.js</code>、<code>npm</code><br>安装了git  </p><p>本文环境：  </p><blockquote><p>Windows 10<br>hexo: 4.1.1<br>node: 12.13.1<br>git: 2.24.0</p></blockquote><h1 id="创建github仓库"><a href="#创建github仓库" class="headerlink" title="创建github仓库"></a>创建github仓库</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>新建一个名为你的用户名<code>.github.io</code>的仓库，比如说，如果你的github用户名是<code>test</code>，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/">http://test.github.io</a> 了  </p><p>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。  </p><p>几个注意的地方：  </p><blockquote><ol><li>注册的邮箱一定要验证，否则不会成功；  </li><li>仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名；  </li></ol></blockquote><p>创建成功后，以后博客所有代码都是放在这个仓库里了  </p><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><p>配置ssh密钥是为了能够将本地仓库连接到github，详情请见：<a href="https://mooner.netlify.app/2018/09/25/more-github/">同一电脑配置多个Github账户</a>  </p><h2 id="测试是否连接成功"><a href="#测试是否连接成功" class="headerlink" title="测试是否连接成功"></a>测试是否连接成功</h2><p>使用命令行  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com # 注意邮箱地址不用改</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入<code>yes</code>，然后会看到：  </p><blockquote><p>Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access.  </p></blockquote><h1 id="搭建hexo博客"><a href="#搭建hexo博客" class="headerlink" title="搭建hexo博客"></a>搭建hexo博客</h1><h2 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h2><p>Hexo是一个简单、快速、强大的博客发布工具，支持Markdown格式，有众多优秀插件和主题。  </p><p>官网： <a href="http://hexo.io/">http://hexo.io</a>  </p><p>github: <a href="https://github.com/hexojs/hexo">https://github.com/hexojs/hexo</a>  </p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。  </p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote><ol><li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行  </li><li>hexo有2种<code>_config.yml</code>文件，一个是根目录下的全局的<code>_config.yml</code>，一个是各个theme下的<code>_config.yml</code>。为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>  </li></ol></blockquote><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在电脑的某个地方新建一个名为<code>hexo</code>的文件夹（名字可以随便取），比如我的是<code>F:\Workspaces\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。  </p><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图:  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g # 生成</span><br><span class="line">hexo s # 启动服务</span><br></pre></td></tr></table></figure><p>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：  </p><p><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容  </p><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><h3 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h3><p>默认主题很丑，那我们别的不做，首先来替换一个好看点的主题  </p><p><a href="https://hexo.io/themes/">官方主题</a>  </p><p>首先下载主题  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /f/Workspaces/hexo/</span><br><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>下载以后的主题全在<code>theme</code>文件夹下边  </p><p>打开根目录下站点配置文件<code>_config.yml</code>， 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>, 然后重新执行<code>hexo g</code>来重新生成。  </p><p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下<code>public</code>的内容，然后再来重新生成和发布。  </p><h2 id="github上传"><a href="#github上传" class="headerlink" title="github上传"></a>github上传</h2><p>如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。  </p><p>首先，<code>ssh key</code>肯定要配置好。其次，配置站点配置文件<code>_config.yml</code>中有关<code>deploy</code>的部分:  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/Jeason-Zhao/Jeason-Zhao.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><blockquote><p>注意：最新版本一定要是这种格式  </p></blockquote><p>最后需要安装一个插件:  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>打开<code>git bash</code>，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会  </p><h2 id="保留CNAME、README-md等文件"><a href="#保留CNAME、README-md等文件" class="headerlink" title="保留CNAME、README.md等文件"></a>保留CNAME、README.md等文件</h2><p>hexo默认会把所有md文件都转换成html，包括README.md，所以在上传之前配置站点配置文件<code>_config.yml</code>的<code>skip_render</code>部分：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><p>这样就会跳过该文件。  </p><h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><p>缩写：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>组合命令：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><h1 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h1><h2 id="写博客-1"><a href="#写博客-1" class="headerlink" title="写博客"></a>写博客</h2><p>定位到我们的hexo根目录，执行命令：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &#x27;my-first-blog&#x27;</span><br></pre></td></tr></table></figure><p>hexo会帮我们在<code>_posts</code>下生成相关md文件：  </p><p>我们只需要打开这个文件就可以开始写博客了，</p><p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。一般完整格式如下：  </p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><p>假如我新建一个名字为<code>about</code>的页面：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>在<code>source</code>文件夹下，将生成<code>about</code>文件夹  </p><p>部署后将在<code>public</code>文件夹生成一个新的<code>html</code>页面：hexo\public\about\index.html，通过访问https://用户名.github.io/about/访问这个页面：  </p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pheatmap使用指南</title>
      <link href="2019/12/23/pheatmap/"/>
      <url>2019/12/23/pheatmap/</url>
      
        <content type="html"><![CDATA[<h2 id="pheatmap包"><a href="#pheatmap包" class="headerlink" title="pheatmap包"></a>pheatmap包</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>官方介绍：<br>A function to draw clustered heatmaps where one has better control over some graphical parameters such as cell size, etc  </p><p>实际上，pheatmap是 Pretty Heatmaps 的缩写，是我认为目前最好用的绘制聚类热图的R包（尽管有很多其他的函数。。。）   </p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">pheatmap(mat, color = colorRampPalette(rev(brewer.pal(n = <span class="number">7</span>, name =</span><br><span class="line">  <span class="string">&quot;RdYlBu&quot;</span>)))(<span class="number">100</span>), kmeans_k = <span class="literal">NA</span>, breaks = <span class="literal">NA</span>, border_color = <span class="string">&quot;grey60&quot;</span>,</span><br><span class="line">  cellwidth = <span class="literal">NA</span>, cellheight = <span class="literal">NA</span>, scale = <span class="string">&quot;none&quot;</span>, cluster_rows = <span class="literal">TRUE</span>,</span><br><span class="line">  cluster_cols = <span class="literal">TRUE</span>, clustering_distance_rows = <span class="string">&quot;euclidean&quot;</span>,</span><br><span class="line">  clustering_distance_cols = <span class="string">&quot;euclidean&quot;</span>, clustering_method = <span class="string">&quot;complete&quot;</span>,</span><br><span class="line">  clustering_callback = identity2, cutree_rows = <span class="literal">NA</span>, cutree_cols = <span class="literal">NA</span>,</span><br><span class="line">  treeheight_row = ifelse((class(cluster_rows) == <span class="string">&quot;hclust&quot;</span>) || cluster_rows,</span><br><span class="line">  <span class="number">50</span>, <span class="number">0</span>), treeheight_col = ifelse((class(cluster_cols) == <span class="string">&quot;hclust&quot;</span>) ||</span><br><span class="line">  cluster_cols, <span class="number">50</span>, <span class="number">0</span>), legend = <span class="literal">TRUE</span>, legend_breaks = <span class="literal">NA</span>,</span><br><span class="line">  legend_labels = <span class="literal">NA</span>, annotation_row = <span class="literal">NA</span>, annotation_col = <span class="literal">NA</span>,</span><br><span class="line">  annotation = <span class="literal">NA</span>, annotation_colors = <span class="literal">NA</span>, annotation_legend = <span class="literal">TRUE</span>,</span><br><span class="line">  annotation_names_row = <span class="literal">TRUE</span>, annotation_names_col = <span class="literal">TRUE</span>,</span><br><span class="line">  drop_levels = <span class="literal">TRUE</span>, show_rownames = <span class="literal">T</span>, show_colnames = <span class="literal">T</span>, main = <span class="literal">NA</span>,</span><br><span class="line">  fontsize = <span class="number">10</span>, fontsize_row = fontsize, fontsize_col = fontsize,</span><br><span class="line">  angle_col = c(<span class="string">&quot;270&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;45&quot;</span>, <span class="string">&quot;90&quot;</span>, <span class="string">&quot;315&quot;</span>), display_numbers = <span class="literal">F</span>,</span><br><span class="line">  number_format = <span class="string">&quot;%.2f&quot;</span>, number_color = <span class="string">&quot;grey30&quot;</span>, fontsize_number = <span class="number">0.8</span></span><br><span class="line">  * fontsize, gaps_row = <span class="literal">NULL</span>, gaps_col = <span class="literal">NULL</span>, labels_row = <span class="literal">NULL</span>,</span><br><span class="line">  labels_col = <span class="literal">NULL</span>, filename = <span class="literal">NA</span>, width = <span class="literal">NA</span>, height = <span class="literal">NA</span>,</span><br><span class="line">  silent = <span class="literal">FALSE</span>, na_col = <span class="string">&quot;#DDDDDD&quot;</span>, <span class="keyword">...</span>)</span><br></pre></td></tr></table></figure><h3 id="常用参数介绍"><a href="#常用参数介绍" class="headerlink" title="常用参数介绍"></a>常用参数介绍</h3><h4 id="图形参数设置"><a href="#图形参数设置" class="headerlink" title="图形参数设置"></a>图形参数设置</h4><p><font color = 'blue'><strong>main</strong></font>: 图的标题<br><font color = 'blue'><strong>color</strong></font>: 表示颜色，赋值渐变颜色调色板<code>colorRampPalette</code>属性，选择“绿，黑，红”渐变，分为100个等级,，例：<code>color = colorRampPalette(c(“navy”, “white”, “firebrick3”))(100)</code><br><font color = 'blue'><strong>sclae</strong></font>: 表示值均一化的方向，或者按照行或列，或者没有，值可以是”row”, “column” 或者”none”<br><font color = 'blue'><strong>margins</strong></font>: 表示页边空白的大小<br><font color = 'blue'><strong>fontsize</strong></font>: 表示图中的字体大小<br><font color = 'blue'><strong>fontsize_row</strong></font>: 行名的字体大小<br><font color = 'blue'><strong>fontsize_col</strong></font>: 列名的字体大小<br><font color = 'blue'><strong>breaks</strong></font>: 一个数字序列向量，涵盖数据中值的范围，用来定义图例中color_bar的范围<br><font color = 'blue'><strong>angle_col</strong></font>: 列标签旋转的角度 (0, 45, 90, 270 and 315)<br><font color = 'blue'><strong>labels_row</strong></font>: 向量，用来替代原来的行名<br><font color = 'blue'><strong>labels_col</strong></font>: 向量，用来替代原来的列名  </p><h4 id="聚类参数设置"><a href="#聚类参数设置" class="headerlink" title="聚类参数设置"></a>聚类参数设置</h4><p><font color = 'blue'><strong>kmeans_k</strong></font>: 对行进行kmean聚类的个数，如果不设置，则不对行进行聚类<br><font color = 'blue'><strong>cluster_cols</strong></font>: 表示进行列的聚类，值可以是FALSE或TRUE<br><font color = 'blue'><strong>cluster_rows</strong></font>: 是否进行行的聚类，值可以是FALSE或TRUE<br><font color = 'blue'><strong>treeheight_row</strong></font>: 设置row方向的聚类树高<br><font color = 'blue'><strong>treeheight_col</strong></font>: 设置col方向的聚类树高<br><font color = 'blue'><strong>clustering_distance_rows</strong></font>: 表示行距离度量的方法<br><font color = 'blue'><strong>clustering_distance_cols</strong></font>: 表示列距离度量的方法<br><font color = 'blue'><strong>clustering_method</strong></font>: 表示聚类方法，值可以是hclust的任何一种，如”ward.D”,“single”, “complete”, “average”, “mcquitty”, “median”, “centroid”, “ward.D2”<br><font color = 'blue'><strong>cutree_rows</strong></font>: 一致性聚类中行聚类的数量，如果没有进行聚类就忽略<br><font color = 'blue'><strong>cutree_cols</strong></font>: 一致性聚类中列聚类的数量，如果没有进行聚类就忽略  </p><h4 id="图例参数设置"><a href="#图例参数设置" class="headerlink" title="图例参数设置"></a>图例参数设置</h4><p><font color = 'blue'><strong>legend</strong></font>: TRUE或者FALSE，表示是否显示图例<br><font color = 'blue'><strong>legend_breaks</strong></font>: 设置图例的断点，格式：vector<br><font color = 'blue'><strong>legend_labels</strong></font>: legend_breaks对应的标签，例：legend_breaks = -1:4, legend_labels = c(“0”,“1e-4”, “1e-3”, “1e-2”, “1e-1”, “1”)  </p><h4 id="单元格参数设置"><a href="#单元格参数设置" class="headerlink" title="单元格参数设置"></a>单元格参数设置</h4><p><font color = 'blue'><strong>border_color</strong></font>: 单元格边框的颜色，如果不需要则设为NA<br><font color = 'blue'><strong>cellwidth</strong></font>: 单元格的宽度，默认NA，为适应画布大小<br><font color = 'blue'><strong>cellheight</strong></font>: 单元格的高度，默认NA，为适应画布大小<br><font color = 'blue'><strong>na_col</strong></font>: 指定矩阵中NA值的单元格的颜色  </p><h4 id="单元格内字的设置"><a href="#单元格内字的设置" class="headerlink" title="单元格内字的设置"></a>单元格内字的设置</h4><p><font color = 'blue'><strong>display_numbers</strong></font>: 单元格中是否标注数值，如果是matrix，则用matrix中的值代替原始值<br><font color = 'blue'><strong>number_color</strong></font>: 字的颜色<br><font color = 'blue'><strong>number_format</strong></font>: 单元格中标注数值的格式<br><font color = 'blue'><strong>fontsize_number</strong></font>: 单元格中显示的数字的字体大小   </p><h4 id="热图分割参数设置"><a href="#热图分割参数设置" class="headerlink" title="热图分割参数设置"></a>热图分割参数设置</h4><p><font color = 'blue'><strong>cutree_rows</strong></font>: 基于层次聚类（使用cutree）划分行的簇数（如果未聚集行，则忽略参数）<br><font color = 'blue'><strong>cutree_cols</strong></font>: 基于层次聚类（使用cutree）划分列的簇数<br><font color = 'blue'><strong>gaps_row</strong></font>: 向量，指出在未进行行聚类时，在哪里对热图进行分割<br><font color = 'blue'><strong>gaps_col</strong></font>: 向量，指出在未进行列聚类时，在哪里对热图进行分割   </p><h4 id="行列注释参数设置"><a href="#行列注释参数设置" class="headerlink" title="行列注释参数设置"></a>行列注释参数设置</h4><p><font color = 'blue'><strong>annotation_row</strong></font>: 行的分组信息，需要使用相应的行名称来匹配数据和注释中的行，注意之后颜色设置会考虑离散值还是连续值，格式要求为数据框<br><font color = 'blue'><strong>annotation_col</strong></font>: 同上，列的分组信息<br><font color = 'blue'><strong>annotation_colors</strong></font>: 用于手动指定annotation_row和annotation_col track颜色的列表。<br><font color = 'blue'><strong>annotation_names_row</strong></font>: boolean值，显示是否应绘制行注释track的名称。<br><font color = 'blue'><strong>anotation_names_col</strong></font>: &nbsp;同上，显示是否应绘制列注释track的名称。    </p><h4 id="输出图形设置"><a href="#输出图形设置" class="headerlink" title="输出图形设置"></a>输出图形设置</h4><p><font color = 'blue'><strong>filename</strong></font>: 要保存图的名字<br><font color = 'blue'><strong>width</strong></font>: 输出图片的宽度（单位英寸）<br><font color = 'blue'><strong>height</strong></font>: 输出图片的高度（单位英寸）<br><font color = 'blue'><strong>silent</strong></font>: 不绘制图形，只输出<code>gtable</code>对象    </p><h3 id="实例介绍"><a href="#实例介绍" class="headerlink" title="实例介绍"></a>实例介绍</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create test matrix</span></span><br><span class="line">&gt; test = matrix(rnorm(<span class="number">200</span>), <span class="number">20</span>, <span class="number">10</span>)</span><br><span class="line">&gt; test[<span class="number">1</span>:<span class="number">10</span>, seq(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>)] = test[<span class="number">1</span>:<span class="number">10</span>, seq(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>)] + <span class="number">3</span></span><br><span class="line">&gt; test[<span class="number">11</span>:<span class="number">20</span>, seq(<span class="number">2</span>, <span class="number">10</span>, <span class="number">2</span>)] = test[<span class="number">11</span>:<span class="number">20</span>, seq(<span class="number">2</span>, <span class="number">10</span>, <span class="number">2</span>)] + <span class="number">2</span></span><br><span class="line">&gt; test[<span class="number">15</span>:<span class="number">20</span>, seq(<span class="number">2</span>, <span class="number">10</span>, <span class="number">2</span>)] = test[<span class="number">15</span>:<span class="number">20</span>, seq(<span class="number">2</span>, <span class="number">10</span>, <span class="number">2</span>)] + <span class="number">4</span></span><br><span class="line">&gt; colnames(test) = paste(<span class="string">&quot;Test&quot;</span>, <span class="number">1</span>:<span class="number">10</span>, sep = <span class="string">&quot;&quot;</span>)</span><br><span class="line">&gt; rownames(test) = paste(<span class="string">&quot;Gene&quot;</span>, <span class="number">1</span>:<span class="number">20</span>, sep = <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(pheatmap)</span><br><span class="line">&gt; pheatmap(test)</span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap1.png" alt="heatmap1">  </p><blockquote><p>默认参数是对行列均进行聚类（可设置cluster_row = F, cluster_col = F不进行聚类；如果聚类了，还可以通过设置treeheight_row=0, treeheight_col=0不显示聚类树），矩阵没有进行标准化（标准化参数为scale），热图的每个小块之间以灰色隔开（参数border_color），legend显示在右上方；热图的颜色可利用参数color调整  </p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pheatmap(test,kmeans_k = <span class="number">2</span>) <span class="comment"># 对行进行kmeans聚类 </span></span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap2.png" alt="heatmap2">  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; pheatmap(test, display_numbers = <span class="literal">TRUE</span>)</span><br><span class="line">&gt; pheatmap(test, display_numbers = <span class="literal">TRUE</span>, number_format = <span class="string">&quot;\%.1e&quot;</span>)</span><br><span class="line">&gt; pheatmap(test, display_numbers = matrix(ifelse(test &gt; <span class="number">5</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;&quot;</span>), nrow(test))) <span class="comment"># 可以设置显示的内容</span></span><br></pre></td></tr></table></figure><p><img src="/images/2019-03-06/heatmap3.png" alt="heatmap3"></p><blockquote><p>display_numbers将数值显示在热图的格子中，可通过number_format设置数值的格式，较常用的有”%.2f”（保留小数点后两位），”%.1e”（科学计数法显示，保留小数点后一位），number_color设置显示内容的颜色，fontsize_number设置字体的大小。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pheatmap(test, cluster_row = <span class="literal">FALSE</span>, legend_breaks = -<span class="number">1</span>:<span class="number">4</span>, legend_labels = c(<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1e-4&quot;</span>, <span class="string">&quot;1e-3&quot;</span>, <span class="string">&quot;1e-2&quot;</span>, <span class="string">&quot;1e-1&quot;</span>, <span class="string">&quot;1&quot;</span>)) <span class="comment"># 自己设置图例</span></span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap4.png" alt="heatmap4">  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pheatmap(test, cellwidth = <span class="number">15</span>, cellheight = <span class="number">12</span>, fontsize = <span class="number">8</span>, main = <span class="string">&quot;Example heatmap&quot;</span>, filename = <span class="string">&quot;test.pdf&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap5.png" alt="heatmap5">  </p><blockquote><p>main可设置热图的标题，fontsize设置字体大小，filename可直接将热图存出，支持格式png, pdf, tiff, bmp, jpeg，并且可以通过width, height设置图片的大小  </p></blockquote><p>对行、列添加注释分组信息  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; annotation_col = data.frame(CellType = factor(rep(c(<span class="string">&quot;CT1&quot;</span>, <span class="string">&quot;CT2&quot;</span>), <span class="number">5</span>)), Time = <span class="number">1</span>:<span class="number">5</span>)</span><br><span class="line">&gt; rownames(annotation_col) = paste(<span class="string">&quot;Test&quot;</span>, <span class="number">1</span>:<span class="number">10</span>, sep = <span class="string">&quot;&quot;</span>)</span><br><span class="line">&gt; annotation_row = data.frame(GeneClass = factor(rep(c(<span class="string">&quot;Path1&quot;</span>, <span class="string">&quot;Path2&quot;</span>, <span class="string">&quot;Path3&quot;</span>), c(<span class="number">10</span>, <span class="number">4</span>, <span class="number">6</span>))))</span><br><span class="line">&gt; rownames(annotation_row) = paste(<span class="string">&quot;Gene&quot;</span>, <span class="number">1</span>:<span class="number">20</span>, sep = <span class="string">&quot;&quot;</span>)</span><br><span class="line">&gt; pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row)</span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap6.png" alt="heatmap6">  </p><p>同样可以自己设置各个分组注释信息的颜色  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; ann_colors = list(Time = c(<span class="string">&quot;white&quot;</span>, <span class="string">&quot;firebrick&quot;</span>),</span><br><span class="line">    CellType = c(CT1 = <span class="string">&quot;#1B9E77&quot;</span>, CT2 = <span class="string">&quot;#D95F02&quot;</span>),</span><br><span class="line">    GeneClass = c(Path1 = <span class="string">&quot;#7570B3&quot;</span>, Path2 = <span class="string">&quot;#E7298A&quot;</span>, Path3 = <span class="string">&quot;#66A61E&quot;</span>)) <span class="comment"># 如果是连续型变量会形成渐变色，如：Time</span></span><br><span class="line">&gt; pheatmap(test, annotation_col = annotation_col, annotation_row = annotation_row, annotation_colors = ann_colors)</span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap7.png" alt="heatmap7">  </p><p>对于聚类图，可以使用<code>cutree_rows</code>, <code>cutree_cols</code>设置热图分割  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pheatmap(test,cutree_rows=<span class="number">3</span>,cutree_cols=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap8.png" alt="heatmap8">  </p><p>对于未进行聚类的图，可以使用<code>gaps_row</code>, <code>gaps_col</code>自己设定要分隔开的位置  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pheatmap(test, annotation_col = annotation_col, cluster_rows = <span class="literal">FALSE</span>, gaps_row = c(<span class="number">10</span>, <span class="number">14</span>), cutree_col = <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/pheatmap/heatmap9.png" alt="heatmap9">  </p><h3 id="pheatmap-函数返回结果"><a href="#pheatmap-函数返回结果" class="headerlink" title="pheatmap()函数返回结果"></a>pheatmap()函数返回结果</h3><p>返回一个<code>pheatmap</code>对象，但是该对象中包含以下内容：  </p><p><font color = 'blue'><strong>tree_row</strong></font> : 行聚类得到的<code>hclust</code>对象<br><font color = 'blue'><strong>tree_row</strong></font> : 列聚类得到的<code>hclust</code>对象<br><font color = 'blue'><strong>kmeans</strong></font> &nbsp;&nbsp;: kmeans聚类的k值<br><font color = 'blue'><strong>gtable</strong></font> &nbsp;&nbsp;&nbsp;&nbsp;: 热图的<code>gtable</code>对象，可以用来与其他<code>ggplot2</code>对象进行组合绘图    </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> heatmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell编程规范</title>
      <link href="2019/10/14/shell-format/"/>
      <url>2019/10/14/shell-format/</url>
      
        <content type="html"><![CDATA[<p>规范的编程格式既可以使代码更加整洁，又能帮助别人理解使用代码，下面是在使用shell脚本的过程中涉及到的一些代码编程规范  </p><h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><ol><li>命名只能使用字母,数字和下划线,首个字符不能以数字开头。  </li><li>中间不能有空格,不能使用标点符号,不能使用汉字,可以使用下划线 _ ,所以我们往往使用 _ 作为分词的标识 例如 user_name、city_id 等  </li><li>不能使用bash里的关键字(可用help命令查看保留关键字)  </li><li>脚本中的所有变量风格统一使用下划线命名风格  </li></ol><blockquote><p>目前关于命名使用较多的两种方式是<code>驼峰式</code> 和 <code>下划线式</code>，两种命名规则见仁见智  </p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span> userName=<span class="string">&quot;Jeason&quot;</span></span><br><span class="line"><span class="built_in">local</span> user_name=<span class="string">&quot;Jeason&quot;</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">log_info</span></span>()&#123;</span><br><span class="line">  <span class="comment"># todo</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">logInfo</span></span>()&#123;</span><br><span class="line">  <span class="comment"># todo</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">get_user_info</span></span>()&#123;</span><br><span class="line">  <span class="comment"># todo</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getUserInfo</span></span>()&#123;</span><br><span class="line">  <span class="comment"># todo</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="首行"><a href="#首行" class="headerlink" title="首行"></a>首行</h2><p>推荐使用<code>#!/usr/bin/env bash</code>，自动检测shell环境  </p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol><li>除脚本首行外,所有以 <code>#</code> 开头的语句都将成为注释。  </li><li>函数必须有注释标识该函数的用途、入参变量、函数的返回值类型,且必须简单在一行内写完。  </li><li>函数的注释 <code>#</code> 顶格写, 井号后面紧跟一个空格 ,对于该格式的要求是为了最后生成函数的帮助文档是用的(markdown语法),然后是注释的内容,注释尽量简短且在一行,最后跟的是函数的类型。  </li><li>函数内注释 <code>#</code> 与缩进格式对整齐。  </li><li>变量的注释紧跟在变量的后面  </li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主函数 []&lt;-()                  &lt;-------函数注释这样写</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">  <span class="built_in">local</span> var=<span class="string">&quot;Hello World!!!&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$&#123;var&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># info级别的日志 []&lt;-(msg:String)  &lt;-------带入参的函数注释</span></span><br><span class="line"><span class="function"><span class="title">log_info</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;[<span class="subst">$(date +&#x27;%Y-%m-%dT%H:%M:%S%z&#x27;)</span>][$$]: [info] $*&quot;</span> &gt;&amp;2</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># error级别的日志 []&lt;-(msg:String) &lt;-------带入参的函数注释</span></span><br><span class="line"><span class="function"><span class="title">log_error</span></span>()&#123;</span><br><span class="line">  <span class="comment"># todo [error]用红色显示         &lt;------函数内注释</span></span><br><span class="line">  <span class="built_in">local</span> msg=<span class="variable">$1</span> <span class="comment"># 将要输出的日志内容  &lt;------变量的注释紧跟在变量的后面</span></span><br><span class="line">  <span class="keyword">if</span> [[ x<span class="string">&quot;<span class="variable">$&#123;msg&#125;</span>&quot;</span> != x<span class="string">&quot;&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 注释                        &lt;-------函数内注释 `#` 与缩进格式对整齐</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;[<span class="subst">$(date +&#x27;%Y-%m-%dT%H:%M:%S%z&#x27;)</span>][$$]:[error] $*&quot;</span> &gt;&amp;2</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><ol><li>使用两个空格进行缩进,不适用tab缩进  </li><li>不在一行的时候使用 <code>\ </code>进行换行,使用 <code>\</code> 换行的原则是整齐美观  </li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment"># 脚本使用帮助文档 []&lt;-()</span></span><br><span class="line"><span class="function"><span class="title">manual</span></span>()&#123;</span><br><span class="line">  cat <span class="string">&quot;<span class="variable">$0</span>&quot;</span>|grep -v <span class="string">&quot;less \&quot;\$0\&quot;&quot;</span> \</span><br><span class="line">          |grep -B1 <span class="string">&quot;function &quot;</span>   \</span><br><span class="line">          |grep -v <span class="string">&quot;\\--&quot;</span>         \</span><br><span class="line">          |sed <span class="string">&quot;s/function //g&quot;</span>   \</span><br><span class="line">          |sed <span class="string">&quot;s/()&#123;//g&quot;</span>         \</span><br><span class="line">          |sed <span class="string">&quot;s/#//g&quot;</span>           \</span><br><span class="line">          |sed <span class="string">&#x27;N;s/\n/ /&#x27;</span>        \</span><br><span class="line">          |column -t              \</span><br><span class="line">          |awk <span class="string">&#x27;&#123;print $1,$3,$2&#125;&#x27;</span> \</span><br><span class="line">          |column -t</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">search_user_info</span></span>()&#123;</span><br><span class="line">  <span class="built_in">local</span> result=$(httpclient_get --cookie <span class="string">&quot;<span class="variable">$&#123;cookie&#125;</span>&quot;</span> \</span><br><span class="line">                                         <span class="string">&quot;<span class="variable">$&#123;url&#125;</span>/userName=<span class="variable">$&#123;user_name&#125;</span>&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ol><li>变量赋值使用 <code>=</code> 等号,左右不能留有空格  </li><li>使用变量的值用 <code>$</code> 取值符号  </li><li>使用变量的时候,变量名一定要用 <code>&#123;&#125;</code> 包裹  </li><li>使用变量的时候一定要用 双引号 <code>&quot;$&#123;&#125;&quot;</code> 包裹  </li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="string">&quot;Hello World&quot;</span>   <span class="comment">#正确,推荐使用双引号</span></span><br><span class="line">var2=<span class="string">&#x27;Hello World&#x27;</span>   <span class="comment">#正确,不推荐使用单引号</span></span><br><span class="line">var3=<span class="string">&quot;<span class="variable">$&#123;var1&#125;</span>&quot;</span>       <span class="comment">#应用前面定义的变量的时候也要使用双引号包裹</span></span><br><span class="line">var4=6            </span><br><span class="line">var5=6.70            <span class="comment">#小数</span></span><br><span class="line">var3=<span class="variable">$&#123;var1&#125;</span>         <span class="comment">#正确,不推荐</span></span><br></pre></td></tr></table></figure><ol start="5"><li>常量一定要定义成<code>readonly</code>,这种变量不能使用<code>source</code>跨shell使用  </li><li>函数中的变量要用<code>local</code>修饰,定义成局部变量,这样在外部遇到重名的变量也不会影响  </li><li>变量一经定义,不允许删除  </li></ol><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><ol><li>定义在函数中的我们称之为函数局部变量;定义在函数外部，shell脚本中变量我们称之为脚本全局变量  </li><li>环境变量 所有的程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。  </li></ol><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>函数定义形式：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">  <span class="comment">#函数执行的操作</span></span><br><span class="line">  <span class="comment">#函数的返回结果</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">  <span class="comment">#函数执行的操作</span></span><br><span class="line">  <span class="comment">#函数的返回结果</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>使用关键字 <code>function</code> 显示定义的函数为 <code>public</code> 的函数,可以供 外部脚本以 <code>sh 脚本 函数 函数入参</code> 的形式调用  </li><li>未使用关键字 <code>function</code> 显示定义的函数为 <code>privat</code> 的函数, 仅供本脚本内部调用,注意这种<code>privat</code>是人为规定的,并不是shell的语法,不推荐以 <code>sh 脚本 函数 函数入参</code> 的形式调用,注意是不推荐而不是不能。  </li><li>在函数内部首先使用有意义的变量名接受参数,然后在使用这些变量进行操作,禁止直接操作<code>$1</code>,<code>$2</code> 等，除非这些变量只用一次  </li><li>函数的注释  </li></ol><p>函数类型的概念是从函数编程语言中的概念偷过来的,shell函数的函数类型指的是函数的输入到函数的输入的映射关系  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主函数 []&lt;-()                  &lt;-------函数注释这样写</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">  <span class="built_in">local</span> var=<span class="string">&quot;Hello World!!!&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$&#123;var&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># info级别的日志 []&lt;-(msg:String)  &lt;-------带入参的函数注释</span></span><br><span class="line"><span class="function"><span class="title">log_info</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;[<span class="subst">$(date +&#x27;%Y-%m-%dT%H:%M:%S%z&#x27;)</span>][$$]: [info] $*&quot;</span> &gt;&amp;2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>main</code>函数的函数类型是 <code>[]&lt;-()</code> , <code>&lt;-</code> 左侧表的是函数的返回值类型 用<code>[]</code>包裹, 右侧是函数的参数类型 用<code>()</code>包裹,多个参数用 <code>,</code> 分隔,参数的描述是从 Scala 语言中偷过来, 先是参数名称 然后是参数类型 中间用<code>:</code>分隔  </p><p>对于<code>main</code>函数的注释来说, <code>#</code> 顶格写,后面紧跟一个空格,其实这样写是遵循的markdown的语法, 后面再跟一个空格,然后是 <code>[]&lt;-()</code>,代表这个函数没有入参也没有返回值,这个函数的目的就是执行这个这个函数中的命令,但我不关心这个函数的返回值。也就是利用函数的副作用来完成我们想要的操作  </p><p>对于<code>log_info</code> 也是一样 不过 最后的函数类型是 <code>[]&lt;-(msg:String)</code> 代表入参是一个<code>string</code>类型的信息,然后也没有返回值。关于函数的返回值,我理解的函数的返回值有两种形式,一种是显示的<code>return</code>一种是隐式的<code>echo</code>  </p><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><h3 id="显式return"><a href="#显式return" class="headerlink" title="显式return"></a>显式return</h3><ol><li>明确返回结果是在<code>[0-255]</code>之间的数值类型的时候使用显示 <code>reuturn</code> 返回结果  </li><li>返回结果类型是<code>Boolean</code>类型,也就是说函数的功能是起判断作用,返回结果是真或者假的时候使用显示 <code>return</code> 返回结果  </li></ol><h3 id="隐式echo"><a href="#隐式echo" class="headerlink" title="隐式echo"></a>隐式echo</h3><p>其他形式的输出使用<code>echo</code>  </p><h2 id="循环分支"><a href="#循环分支" class="headerlink" title="循环分支"></a>循环分支</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ condition ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ condition ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ condition ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">elif</span> [[ condition ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><ul><li><code>if</code> 后面的判断 使用 双中括号<code>[[]]</code>  </li><li><code>if [[ condition ]]; then</code> 写在一行  </li></ul><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> [[ condition ]]; <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r item ;<span class="keyword">do</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">done</span> &lt; <span class="string">&#x27;file_name&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="until"><a href="#until" class="headerlink" title="until"></a>until</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">until [[ condition ]]; <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( i = 0; i &lt; 10; i++ )); <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> <span class="variable">$&#123;array&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="case"><a href="#case" class="headerlink" title="case"></a>case</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> word <span class="keyword">in</span></span><br><span class="line">  pattern )</span><br><span class="line">    <span class="comment">#statements</span></span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">    <span class="comment">#statements</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.jianshu.com/p/161618366866">Shell编程规范–简书</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高通量测序常用概念</title>
      <link href="2019/10/09/NGS/"/>
      <url>2019/10/09/NGS/</url>
      
        <content type="html"><![CDATA[<p>高通量测序技术（High-throughput sequencing，HTS）是对传统Sanger测序（称为一代测序技术）革命性的改变,一次对几十万到几百万条核酸分子进行序列测定, 因此在有些文献中称其为下一代测序技术(next generation sequencing，NGS )足见其划时代的改变, 同时高通量测序使得对一个物种的转录组和基因组进行细致全貌的分析成为可能, 所以又被称为深度测序(Deep sequencing)。  </p><h2 id="什么是Sanger法测序（一代测序）"><a href="#什么是Sanger法测序（一代测序）" class="headerlink" title="什么是Sanger法测序（一代测序）"></a><strong>什么是Sanger法测序（一代测序）</strong></h2><p>Sanger法测序利用一种DNA聚合酶来延伸结合在待定序列模板上的引物。直到掺入一种链终止核苷酸为止。每一次序列测定由一套四个单独的反应构成，每个反应含有所有四种脱氧核苷酸三磷酸(dNTP)，并混入限量的一种不同的双脱氧核苷三磷酸(ddNTP)。由于ddNTP缺乏延伸所需要的3-OH基团，使延长的寡聚核苷酸选择性地在G、A、T或C处终止。终止点由反应中相应的双脱氧而定。每一种dNTPs和ddNTPs的相对浓度可以调整，使反应得到一组长几百至几千碱基的链终止产物。它们具有共同的起始点，但终止在不同的的核苷酸上，可通过高分辨率变性凝胶电泳分离大小不同的片段，凝胶处理后可用X-光胶片放射自显影或非同位素标记进行检测。  </p><h2 id="什么是基因组重测序（Genome-Re-sequencing）"><a href="#什么是基因组重测序（Genome-Re-sequencing）" class="headerlink" title="什么是基因组重测序（Genome Re-sequencing）"></a><strong>什么是基因组重测序（Genome Re-sequencing）</strong></h2><p>全基因组重测序是对基因组序列已知的个体进行基因组测序，并在个体或群体水平上进行差异性分析的方法。随着基因组测序成本的不断降低，人类疾病的致病突变研究由外显子区域扩大到全基因组范围。通过构建不同长度的插入片段文库和短序列、双末端测序相结合的策略进行高通量测序，实现在全基因组水平上检测疾病关联的常见、低频、甚至是罕见的突变位点，以及结构变异等，具有重大的科研和产业价值。  </p><h2 id="什么是de-novo测序"><a href="#什么是de-novo测序" class="headerlink" title="什么是de novo测序"></a><strong>什么是de novo测序</strong></h2><p>de novo测序也称为从头测序：其不需要任何现有的序列资料就可以对某个物 种进行测序，利用生物信息学分析手段对序列进行拼接，组装，从而获得该物种的基因组图谱。获得一个物种的全基因组序列是加快对此物种了解的重要捷径。随着新一代测序技术的飞速发展，基因组测序所需的成本和时间较传统技术都大大降低，大规模基因组测序渐入佳境，基因组学研究也迎来新的发展契机和革命性突破。利用新一代高通量、高效率测序技术以及强大的生物信息分析能力，可以高效、低成本地测定并分析所有生物的基因组序列。  </p><h2 id="什么是外显子测序（whole-exon-sequencing）"><a href="#什么是外显子测序（whole-exon-sequencing）" class="headerlink" title="什么是外显子测序（whole exon sequencing）"></a><strong>什么是外显子测序（whole exon sequencing）</strong></h2><p>外显子组测序是指利用序列捕获技术将全基因组外显子区域DNA捕捉并富集后进行高通量测序的基因组分析方法。外显子测序相对于基因组重测序成本较低，对研究已知基因的SNP、Indel等具有较大的优势，但无法研究基因组结构变异如染色体断裂重组等。  </p><h2 id="什么是mRNA测序-（RNA-seq）"><a href="#什么是mRNA测序-（RNA-seq）" class="headerlink" title="什么是mRNA测序 （RNA-seq）"></a><strong>什么是mRNA测序 （RNA-seq）</strong></h2><p>转录组学（transcriptomics）是在基因组学后新兴的一门学科，即研究特定细胞在某一功能状态下所能转录出来的所有RNA（包括mRNA和非编码RNA）的类型与拷贝数。Illumina提供的mRNA测序技术可在整个mRNA领域进行各种相关研究和新的发现。mRNA测序不对引物或探针进行设计，可自由提供关于转录的客观和权威信息。研究人员仅需要一次试验即可快速生成完整的poly-A尾的RNA完整序列信息，并分析基因表达、cSNP、全新的转录、全新异构体、剪接位点、等位基因特异性表达和罕见转录等最全面的转录组信息。简单的样品制备和数据分析软件支持在所有物种中的mRNA测序研究。  </p><h2 id="什么是Chip-seq"><a href="#什么是Chip-seq" class="headerlink" title="什么是Chip-seq"></a><strong>什么是Chip-seq</strong></h2><p>染色质免疫共沉淀技术（ChromatinImmunoprecipitation，ChIP）也称结合位点分析法，是研究体内蛋白质与DNA相互作用的有力工具，通常用于转录因子结合位点或组蛋白特异性修饰位点的研究。将ChIP与第二代测序技术相结合的ChIP-Seq技术，能够高效地在全基因组范围内检测与组蛋白、转录因子等互作的DNA区段。 ChIP-Seq的原理是：首先通过染色质免疫共沉淀技术（ChIP）特异性地富集目的蛋白结合的DNA片段，并对其进行纯化与文库构建；然后对富集得到的DNA片段进行高通量测序。研究人员通过将获得的数百万条序列标签精确定位到基因组上，从而获得全基因组范围内与组蛋白、转录因子等互作的DNA区段信息。  </p><h2 id="单核苷酸多态性"><a href="#单核苷酸多态性" class="headerlink" title="单核苷酸多态性"></a><strong>单核苷酸多态性</strong></h2><p>个体间基因组DNA序列同一位置单个核苷酸变异(替代、插入或缺失)所引起的多态性。不同物种、个体基因组DNA序列同一位置上的单个核苷酸存在差别的现象。有这种差别的基因座、DNA序列等可作为基因组作图的标志。人基因组上平均约每1000个核苷酸即可能出现1个单核苷酸多态性的变化，其中有些单核苷酸多态性可能与疾病有关，但可能大多数与疾病无关。单核苷酸多态性是研究人类家族和动植物品系遗传变异的重要依据。在研究癌症基因组变异时，相对于正常组织，癌症中特异的单核苷酸变异是一种体细胞突变（somatic mutation），称做SNV。  </p><h2 id="什么是copy-number-variation-（CNV）"><a href="#什么是copy-number-variation-（CNV）" class="headerlink" title="什么是copy number variation （CNV）"></a><strong>什么是copy number variation （CNV）</strong></h2><p>基因组拷贝数变异是基因组变异的一种形式，通常使基因组中大片段的DNA形成非正常的拷贝数量。例如人类正常染色体拷贝数是2，有些染色体区域拷贝数变成1或3，这样，该区域发生拷贝数缺失或增加，位于该区域内的基因表达量也会受到影响。如果把一条染色体分成A-B-C-D四个区域，则A-B-C-C-D/A-C-B-C-D/A-C-C-B-C-D/A-B-D分别发生了C区域的扩增及缺失，扩增的位置可以是连续扩增如A-B-C-C-D也可以是在其他位置的扩增，如A-C-B-C-D。  </p><h2 id="什么是structure-variation-（SV）"><a href="#什么是structure-variation-（SV）" class="headerlink" title="什么是structure variation （SV）"></a><strong>什么是structure variation （SV）</strong></h2><p>染色体结构变异是指在染色体上发生了大片段的变异。主要包括染色体大片段的插入和缺失（引起CNV的变化），染色体内部的某块区域发生翻转颠换，两条染色体之间发生重组（inter-chromosome trans-location）等。一般SV的展示利用Circos 软件。  </p><h2 id="什么是RPKM、FPKM"><a href="#什么是RPKM、FPKM" class="headerlink" title="什么是RPKM、FPKM"></a><strong>什么是RPKM、FPKM</strong></h2><p><strong>RPKM,Reads Per Kilobase of exon model per Million mapped reads, is defined in this way</strong> [Mortazavi etal., 2008]: 每1百万个map上的reads中map到外显子的每1K个碱基上的reads个数。  </p><p><strong>FPKM</strong>(<strong>fragments per kilobase of exon per million fragments mapped</strong>). FPKM与RPKM计算方法基本一致。不同点就是FPKM计算的是fragments，而RPKM计算的是reads。Fragment比read的含义更广，因此FPKM包含的意义也更广，可以是pair-end的一个fragment，也可以是一个read。  </p>]]></content>
      
      
      <categories>
          
          <category> bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> high throughput </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hemberg-lab单细胞转录组数据分析（一）</title>
      <link href="2019/10/09/Hemberg-lab1/"/>
      <url>2019/10/09/Hemberg-lab1/</url>
      
        <content type="html"><![CDATA[<h1 id="单细胞RNA-seq简介"><a href="#单细胞RNA-seq简介" class="headerlink" title="单细胞RNA-seq简介"></a>单细胞RNA-seq简介</h1><h2 id="Bulk-RNA-seq"><a href="#Bulk-RNA-seq" class="headerlink" title="Bulk RNA-seq"></a>Bulk RNA-seq</h2><ul><li>2000年末的重大技术突破，取代微阵列表达芯片被广泛使用  </li><li>通过混合大量细胞获取足够RNA用于建库测序，来定量每个基因的<strong>平均表达水平</strong>  </li><li>用于比较转录组，例如来自不同样本的同一组织  </li><li>用于定量整体的基因表达特征  </li><li>对于异质性的研究仍然是不够充足的  </li></ul><h2 id="scRNA-seq"><a href="#scRNA-seq" class="headerlink" title="scRNA-seq"></a>scRNA-seq</h2><ul><li>是一项由汤富酬等人在2009年首次发表的新技术。文章发表于Nature Method，测序了7个单细胞，两个卵裂球，两个野生型卵子，两个Dicer敲除的卵 子，一个Ago2敲除的卵子。  </li><li>这项技术在2013年被Nature评为年度技术,更简便的操作流程和较低的测序成本促成单细胞技术的广泛流行。2018年底，单细胞技术应用于胚胎发育追踪评为Science年度突破。  </li><li>检测每个基因在大量细胞中的表达水平分布。  </li><li>可以用于研究细胞类型特异性转录调控的新型生物问题  </li><li>研究中细胞数目范围从<strong>100</strong>个变到<strong>10^6</strong>个，且每年递增。  </li><li>目前有许多不同的单细胞Protocol，例如 <code>SMART-seq2</code> , <code>CELL-seq</code>  和 <code>Drop-seq</code>  </li><li>还有商业平台，包括 <code>Fluidigm C1</code>, <code>Wafergen ICELL8</code> 和 <code>10X Genomics Chromium</code>  </li><li>Bulk RNA-seq技术中一些计算分析方法可应用于单细胞分析  </li><li>多数情况下单细胞计算分析需要调整现有方法或者开发新方法  </li></ul><h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><p><img src="/images/lab1/RNA-Seq_workflow-5.pdf.jpg" alt="workflow">  </p><h2 id="计算分析"><a href="#计算分析" class="headerlink" title="计算分析"></a>计算分析</h2><p><img src="/images/lab1/flowchart.png" alt="flowchat">  </p><h2 id="单细胞测序方法"><a href="#单细胞测序方法" class="headerlink" title="单细胞测序方法"></a>单细胞测序方法</h2><p><img src="/images/lab1/moores-law.png" alt="moore">  </p><p>开发scRNA-seq的新实验方法和操作手册是目前很火的研究领域，而且最近这些年已经发表了一些改进方法。上图可以看出检测的细胞数目以指数形式增加，以下是一份不完全的统计：  </p><ul><li>STRT-seq  </li><li>Smart-seq  </li><li>CEL-seq  </li><li>MARS-seq  </li><li>SCRB-seq  </li><li>Smart-seq2  </li><li>Drop-seq  </li><li>InDrop-seq  </li><li>CEL-seq2  </li><li>Seq-well  </li><li>SMARTer  </li><li>Microwell-seq 【2018，郭国冀团队】  </li></ul><p>这些方法可以用不同的方式分类，但两个最主要的优化是：<strong>定量</strong>和<strong>捕获</strong>  </p><p>定量有两种类型—-全长型 (<strong>full-length</strong>)和标签型 (<strong>tag-based</strong>)。全长型力图捕获并均匀测序整条转录本，标签型只捕获转录本的<code>5&#39;</code>或<code>3&#39;</code>端。不同定量方式需要自己对应的计算分析方法。全长方案理论上可以对整个转录本进行均匀测序，但实际上总会有测序覆盖偏好性的存在。标签型的主要优点是可以与唯一的分子标识符(<strong>UMIs</strong>)结合进行更精确定量。其缺点是，测序限制在转录本的<code>5&#39;</code>或<code>3&#39;</code>端，可能会降低比对率，并且难以区分不同剪接体的表达。  </p><p>捕获的策略决定了实验通量、细胞如何被选择和除测序外的哪些额外信息可获得。最常用的三种捕获方式是基于微孔- (<strong>microwell-</strong>)，微流- (<strong>microfluidic-</strong>)，液滴- (<strong>droplet-</strong>)  </p><p>对于基于微孔的捕获平台，先用移液管或者激光切割的方式分离细胞并放到微流孔中。它的一个优点是可以结合流式细胞荧光分选（FACS, fluorescent activated cell sorting）根据表面Marker分选细胞。因此特别适合分选细胞子集用于测序。另一个优点是可以获得细胞形态全览图，提供多一个维度的信息，可用于鉴定微孔中是否有损伤的细胞或双份细胞，主要缺点是通量低且每个细胞所需的工作量相当大。  </p><p>微流型平台，比如Fluidigm’s C1，提供了一个更加整合的系统，同时可以捕获细胞和完成文库构建的准备过程。因此它们比微孔型平台通量更高。但是微流型平台大约只能捕获10%的细胞，不适合处理稀有细胞或者细胞量很少的情况。此外，微流控芯片相对昂贵，不过更小的反应体积可以节省试剂的费用。  </p><p>液滴型方法是将单独的细胞和一个包含建库所学酶的珠粒 (<strong>bead</strong>)包裹在一个纳米级液滴里面。特殊地，每个珠粒(<strong>bead</strong>)包含一段独特的条形码序列 (<strong>barcode</strong>)，会加到所有来自于液滴里面这个细胞的序列上，用于区分不同细胞的转录本。因此所有的液滴可以混合在一起测序，然后再根据<code>barcode</code>序列确定其是否归属于同一细胞。液滴型平台通常有最高的通量，因为文库的准备成本很低，约为0.05美元/每个细胞。随之而来的，测序成本往往是其限制因素，通常测序深度比较低，只检测几千个转录本的表达。  </p><hr><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><a href="https://scrnaseq-course.cog.sanger.ac.uk/website/index.html">https://scrnaseq-course.cog.sanger.ac.uk/website/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> SingleCell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SingleCell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下百度云快速下载</title>
      <link href="2019/09/19/baiduyun-ubuntu/"/>
      <url>2019/09/19/baiduyun-ubuntu/</url>
      
        <content type="html"><![CDATA[<p>记录一下找到的linux可用的百度云下载工具，项目地址：<a href="https://github.com/iikira/BaiduPCS-Go">https://github.com/iikira/BaiduPCS-Go</a></p><p>直接下载文件解压，进入文件夹，命令行下运行：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./BaiduPCS-Go</span><br></pre></td></tr></table></figure><p>即可进入BaiduPCS-Go的加护界面，使用<code>help</code>命令查看相关命令。  </p><h2 id="初级使用教程"><a href="#初级使用教程" class="headerlink" title="初级使用教程"></a>初级使用教程</h2><p>新手建议: <strong>双击运行程序</strong>, 进入仿 Linux shell 的 cli 交互模式;</p><p>cli交互模式下, 光标所在行的前缀应为 <code>BaiduPCS-Go &gt;</code>, 如果登录了百度帐号则格式为 <code>BaiduPCS-Go:&lt;工作目录&gt; &lt;百度ID&gt;$ </code></p><p>以下例子的命令, 均为 cli交互模式下的命令</p><p>运行命令的正确操作: <strong>输入命令, 按一下回车键 (键盘上的 Enter 键)</strong>, 程序会接收到命令并输出结果</p><h2 id="1-查看程序使用说明"><a href="#1-查看程序使用说明" class="headerlink" title="1. 查看程序使用说明"></a>1. 查看程序使用说明</h2><p>cli交互模式下, 运行命令 <code>help</code></p><h2 id="2-登录百度帐号-必做"><a href="#2-登录百度帐号-必做" class="headerlink" title="2. 登录百度帐号 (必做)"></a>2. 登录百度帐号 (必做)</h2><p>cli交互模式下, 运行命令 <code>login -h</code> (注意空格) 查看帮助</p><p>cli交互模式下, 运行命令 <code>login</code> 程序将会提示你输入百度用户名(手机号/邮箱/用户名)和密码, 必要时还可以在线验证绑定的手机号或邮箱</p><h2 id="3-切换网盘工作目录"><a href="#3-切换网盘工作目录" class="headerlink" title="3. 切换网盘工作目录"></a>3. 切换网盘工作目录</h2><p>cli交互模式下, 运行命令 <code>cd /我的资源</code> 将工作目录切换为 <code>/我的资源</code> (前提: 该目录存在于网盘)</p><p>目录支持通配符匹配, 所以你也可以这样: 运行命令 <code>cd /我的*</code> 或 <code>cd /我的??</code> 将工作目录切换为 <code>/我的资源</code>, 简化输入.</p><p>将工作目录切换为 <code>/我的资源</code> 成功后, 运行命令 <code>cd ..</code> 切换上级目录, 即将工作目录切换为 <code>/</code></p><p>为什么要这样设计呢, 举个例子,</p><p>假设 你要下载 <code>/我的资源</code> 内名为 <code>1.mp4</code> 和 <code>2.mp4</code> 两个文件, 而未切换工作目录, 你需要依次运行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d &#x2F;我的资源&#x2F;1.mp4</span><br><span class="line">d &#x2F;我的资源&#x2F;2.mp4</span><br></pre></td></tr></table></figure><p>而切换网盘工作目录之后, 依次运行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;我的资源</span><br><span class="line">d 1.mp4</span><br><span class="line">d 2.mp4</span><br></pre></td></tr></table></figure><p>这样就达到了简化输入的目的</p><h2 id="4-网盘内列出文件和目录"><a href="#4-网盘内列出文件和目录" class="headerlink" title="4. 网盘内列出文件和目录"></a>4. 网盘内列出文件和目录</h2><p>cli交互模式下, 运行命令 <code>ls -h</code> (注意空格) 查看帮助</p><p>cli交互模式下, 运行命令 <code>ls</code> 来列出当前所在目录的文件和目录</p><p>cli交互模式下, 运行命令 <code>ls /我的资源</code> 来列出 <code>/我的资源</code> 内的文件和目录</p><p>cli交互模式下, 运行命令 <code>ls ..</code> 来列出当前所在目录的上级目录的文件和目录</p><h2 id="5-下载文件"><a href="#5-下载文件" class="headerlink" title="5. 下载文件"></a>5. 下载文件</h2><p>说明: 下载的文件默认保存到 download/ 目录 (文件夹)</p><p>cli交互模式下, 运行命令 <code>d -h</code> (注意空格) 查看帮助</p><p>cli交互模式下, 运行命令 <code>d /我的资源/1.mp4</code> 来下载位于 <code>/我的资源/1.mp4</code> 的文件 <code>1.mp4</code> , 该操作等效于运行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;我的资源</span><br><span class="line">d 1.mp4</span><br></pre></td></tr></table></figure><p>现在已经支持目录 (文件夹) 下载, 所以, 运行以下命令, 会下载 <code>/我的资源</code> 内的所有文件 (违规文件除外):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d &#x2F;我的资源</span><br></pre></td></tr></table></figure><p>参见 例6 设置下载最大并发量</p><h2 id="6-设置下载最大并发量"><a href="#6-设置下载最大并发量" class="headerlink" title="6. 设置下载最大并发量"></a>6. 设置下载最大并发量</h2><p>cli交互模式下, 运行命令 <code>config set -h</code> (注意空格) 查看设置帮助以及可供设置的值</p><p>cli交互模式下, 运行命令 <code>config set -max_parallel 250</code> 将下载最大并发量设置为 250</p><p>下载最大并发量建议值: 50~500, 太低下载速度提升不明显甚至速度会变为0, 太高可能会导致程序出错被操作系统结束掉.</p><h2 id="7-退出程序"><a href="#7-退出程序" class="headerlink" title="7. 退出程序"></a>7. 退出程序</h2><p>运行命令 <code>quit</code> 或 <code>exit</code> 或 组合键 <code>Ctrl+C</code> 或 组合键 <code>Ctrl+D</code></p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCGA barcode（样本ID）</title>
      <link href="2019/09/19/tcga-barcode/"/>
      <url>2019/09/19/tcga-barcode/</url>
      
        <content type="html"><![CDATA[<p>接触和分析过TCGA数据的朋友肯定会经常处理TCGA barcode的7个编码信息，每个编码信息用横杠-隔开，如下所示：  </p><p><img src="/images/tcga-barcode/barcode.jpg" alt="TCGA barcode">  </p><p>接触和分析过TCGA数据的朋友肯定会经常处理TCGA barcode的前15位（有时12位），实际从上图可以看出TCGA的barcode设计总共有28位之多。</p><p>每一个短横杠衔接的都是含不同意义的序列，如下图  </p><p><img src="/images/tcga-barcode/flow.jpg" alt="Data flow">    </p><p>图中总结了TCGA中从样品到数据处理流程：</p><p>BCR从TSS收到参与者的样本和他们相关的元数据。然后BCRs分配人可读的IDs（barcode），也就是TCGA barcode给参与者的元数据和样本。TCGA barcode用来把扩展到整个TCGA网络中的数据联系在一起，因为IDs可以唯一识别一个特定样本的一组结果。  </p><p>具体的解释如下表：  </p><table><thead><tr><th>Label</th><th>Identifier for</th><th>解释</th></tr></thead><tbody><tr><td>Project</td><td>Project name</td><td>来自哪个项目: 如TCGA、TARGET等等</td></tr><tr><td>TSS</td><td>Tissue source site</td><td>样品来自哪个组织机构：01 代表International Genomics Consortium, 更多见：<a href="https://www.omicsclass.com/article/1079">TSS</a></td></tr><tr><td>Participant</td><td>Study participant</td><td>样品唯一编号(可以理解为一个病人唯一编号）</td></tr><tr><td>Sample</td><td>Sample type</td><td>样品来自人体组织类型，01-09表示肿瘤样本，10-19表示normal type，20-29表示control samples,如：01代表Primary Solid Tumor， 更多见：<a href="https://www.omicsclass.com/article/1080">SampleType</a></td></tr><tr><td>Vial</td><td>Order of sample in a sequence of samples</td><td>一份样品被分割成好几份，表示第几份，通常是A-Z编号</td></tr><tr><td>Portion</td><td>Order of portion in a sequence of 100-120 mg sample portions</td><td>每份样品再分割成不同的小样品：01-99等等编号，代表第几份</td></tr><tr><td>Analyte</td><td>Molecular type of analyte for analysis</td><td>实验数据来源分子类型，如R代表 RNA，D代表DNA等等，更多见：<a href="https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/portion-analyte-codes">Portion / Analyte Codes</a></td></tr><tr><td>Plate</td><td>Order of plate in a sequence of 96-well plates</td><td>96孔序列中板的顺序，4个数字组成</td></tr><tr><td>Center</td><td>Sequencing or characterization center that will receive the aliquot for analysis</td><td>数据由哪个机构分析：如 01代表The Broad Institute GCC,更多见：<a href="https://www.omicsclass.com/article/1081">Center</a></td></tr></tbody></table><p>其中比较重要的，用于区分样本类型的是 sample。  </p><p>此外除了上述的barcode还有表示其他信息的barcode，整体的组织形式如下：  </p><p><img src="/images/tcga-barcode/barcode1.jpg">   </p><p>下表显示了不同barcode，所代表的不同意义：层次结构级别：  </p><p><img src="/images/tcga-barcode/table.jpg">     </p>]]></content>
      
      
      
        <tags>
            
            <tag> TCGA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu18.04 安装 xmind8</title>
      <link href="2019/09/16/xmind-ubuntu/"/>
      <url>2019/09/16/xmind-ubuntu/</url>
      
        <content type="html"><![CDATA[<h2 id="相关下载"><a href="#相关下载" class="headerlink" title="相关下载"></a>相关下载</h2><p>XMind 官网下载程序：<a href="https://www.xmind.cn/download/xmind8/">https://www.xmind.cn/download/xmind8/</a><br>XMind 破解补丁：<a href="https://pan.baidu.com/s/1pijGyVHFfO1BlDx-ZhtI5g">网盘地址</a> 提取码：tnkb  </p><h2 id="程序安装"><a href="#程序安装" class="headerlink" title="程序安装"></a>程序安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建安装目录</span></span><br><span class="line">sudo mkdir -p /usr/<span class="built_in">local</span>/xmind-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压XMind下载文件</span></span><br><span class="line">sudo unzip -d /usr/<span class="built_in">local</span>/xmind-8 xmind-8-update8-linux.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝破解补丁文件到XMind_amd64目录</span></span><br><span class="line">sudo mv XMind_amd64.tar.gz /usr/<span class="built_in">local</span>/xmind-8/XMind_amd64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压破解补丁文件</span></span><br><span class="line"><span class="built_in">cd</span> /usr/develop/xmind-8/XMind_amd64</span><br><span class="line">tar -xvf XMind_amd64.tar.gz</span><br><span class="line">rm -f XMind_amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果系统环境是Centos，则需要修改依赖库安装脚本，将安装依赖的命令注释掉，默认的脚本只适合Debian/Ubuntu系统</span></span><br><span class="line">sudo vim /usr/develop/xmind-8/setup.sh</span><br><span class="line"><span class="comment"># 注释掉： apt-get install openjdk-8-jre libgtk2.0-0 libwebkitgtk-1.0-0 lame libc6 libglib2.0-0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行依赖库安装脚本</span></span><br><span class="line"><span class="built_in">cd</span> /usr/develop/xmind-8</span><br><span class="line">sudo ./setup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改Hosts</span></span><br><span class="line">sudo vim /etc/hosts</span><br><span class="line"><span class="comment"># 另起一行，添加　127.0.0.1 www.xmind.net</span></span><br></pre></td></tr></table></figure><h2 id="激活ximd"><a href="#激活ximd" class="headerlink" title="激活ximd"></a>激活ximd</h2><p>进入XMind_amd64目录，执行命令 “./XMind” 运行软件，然后在XMind主界面导航到: Help -&gt; License，复制以下License Key即可, 邮箱可以随便填。  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XAka34A2rVRYJ4XBIU35UZMUEEF64CMMIYZCK2FZZUQNODEKUHGJLFMSLIQMQUCUBXRENLK6NZL37JXP4PZXQFILMQ2RG5R7G4QNDO3PSOEUBOCDRYSSXZGRARV6MGA33TN2AMUBHEL4FXMWYTTJDEINJXUAV4BAYKBDCZQWVF3LWYXSDCXY546U3NBGOI3ZPAP2SO3CSQFNB7VVIY123456789012345</span><br></pre></td></tr></table></figure><h2 id="报错解决办法"><a href="#报错解决办法" class="headerlink" title="报错解决办法"></a>报错解决办法</h2><p><strong>警告1</strong>：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Gtk-Message: Failed to load module <span class="string">&quot;canberra-gtk-module&quot;</span></span><br></pre></td></tr></table></figure><p>解决办法：安装libcanberra-gtk-module  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libcanberra-gtk-module</span><br></pre></td></tr></table></figure><p><strong>警告2</strong>：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Gtk-WARNING **: 20:23:58.735: Theme directory status/scalable of theme macOS11 has no size field</span><br></pre></td></tr></table></figure><p>解决办法：安装jdk8，切换优先级  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 jdk</span></span><br><span class="line">sudo apt-get install openjdk-8-jdk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换优先级，选jdk8</span></span><br><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure><hr><p>参考：<br><a href="https://www.techgrow.cn/posts/d32cbc24.html">Linux破解安装XMind</a><br><a href="https://blog.csdn.net/weixin_36049506/article/details/88092444">ubuntu18.04安装XMind8</a>  </p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 系统下Rstudio不能输入中文的解决办法</title>
      <link href="2019/09/05/Rstudio-ubuntu/"/>
      <url>2019/09/05/Rstudio-ubuntu/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Rstudio作为一个R编程的神器竟然在Ubuntu中不能输入中文，经过搜索发现RStudio软件不能使用系统自带的QT5，因此需要我们自己编译安装qt5相关的库，但是由于Rstudio版本的不断更新，每个版本的解决方案都并不能完全兼容，下边记录集中看到的解决方案：  </p><h3 id="方案一："><a href="#方案一：" class="headerlink" title="方案一："></a>方案一：</h3><p>在shell中输入如下命令，将相关插件软连接到RStudio的插件中。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/lib/$(dpkg-architecture -qDEB_BUILD_MULTIARCH)/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so /usr/lib/rstudio/bin/plugins/platforminputcontexts/</span><br></pre></td></tr></table></figure><h3 id="方案二："><a href="#方案二：" class="headerlink" title="方案二："></a>方案二：</h3><p>同样在shell中输入如下命令，下载相关插件并安装。  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget [url=http://ikuya.info/tmp/fcitx-qt5-rstudio-qt542+2.tar.gz]http://ikuya.info/tmp/fcitx-qt5-rstudio-qt542+2.tar.gz[/url]</span><br><span class="line">tar xf fcitx-qt5-rstudio-qt542+2.tar.gz</span><br><span class="line">sudo apt install ./fcitx-frontend-qt5-rstudio_1.0.5-1ubuntu1~qt542+2_amd64.deb ./libfcitx-qt5-1-rstudio_1.0.5-1ubuntu1~qt542+2_amd64.deb</span><br></pre></td></tr></table></figure><h3 id="方案三："><a href="#方案三：" class="headerlink" title="方案三："></a>方案三：</h3><p>方法来自Github上，<a href="https://github.com/JackieMium/my_blog/issues/12">https://github.com/JackieMium/my_blog/issues/12</a> 。作者将编译好的<code>libfcitxplatforminputcontextplugin.so</code> 复制到<code>usr/lib/rstudio/plugins/platforminputcontexts</code>路径下。然后删除<code>libQt5*</code>，<code>qt.conf</code>文件。  </p><h3 id="方案四："><a href="#方案四：" class="headerlink" title="方案四："></a>方案四：</h3><blockquote><p>该方案适用于Rstudio（Version 1.2.1335）  </p></blockquote><p>执行方案一的命令，将相关插件连接到<code>/usr/lib/rstudio/plugins/platforminputcontexts/</code>文件夹内，这里需要注意文件的权限  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/lib/$(dpkg-architecture -qDEB_BUILD_MULTIARCH)/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  /usr/lib/rstudio/plugins/platforminputcontexts</span><br></pre></td></tr></table></figure><p>在/usr/lib/rstudio/bin的路径下找到qt.conf文件（注意：不同版本路径可能会有所差别），修改qt.conf的内容，添加刚才链接使用的路径：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Paths]</span><br><span class="line">Prefix = /usr/lib/rstudio/</span><br><span class="line">Prefix = ../</span><br></pre></td></tr></table></figure><p>随着版本的更新，可能之前版本的解决方案会不适用，因此。。。<br>持续更新ing  </p><hr><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://support.rstudio.com/hc/en-us/articles/205605748-Using-RStudio-0-99-with-Fctix-on-Linux">https://support.rstudio.com/hc/en-us/articles/205605748-Using-RStudio-0-99-with-Fctix-on-Linux</a>  </p><p><a href="https://blog.csdn.net/wukong1981/article/details/89484408">https://blog.csdn.net/wukong1981/article/details/89484408</a>  </p><p><a href="https://github.com/JackieMium/my_blog/issues/12">https://github.com/JackieMium/my_blog/issues/12</a>  </p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从源码安装R3.6(Ubuntu 18.04LTS)</title>
      <link href="2019/08/28/R-ubuntu/"/>
      <url>2019/08/28/R-ubuntu/</url>
      
        <content type="html"><![CDATA[<p>根据R官方提供的安装方法，感觉在Ubuntu18.04上毫无作用，因此尝试从源码手动编译安装R  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装依赖</span></span><br><span class="line">sudo apt-get install xorg-dev libreadline-dev</span><br><span class="line">sudo apt-get install libcurl4-openssl-dev</span><br><span class="line">sudo apt-get install libbz2-dev</span><br><span class="line">sudo apt-get install libcairo2-dev libgtk2.0-dev</span><br><span class="line">sudo apt-get install texinfo texlive</span><br><span class="line">wget http://mirrors.ctan.org/fonts/inconsolata.zip</span><br><span class="line">sudo cp -Rfp inconsolata/* /usr/share/texmf/</span><br><span class="line"><span class="comment"># 或者 sudo cp -r inconsolata/ /usr/share/texlive/texmf-dist/tex/latex/</span></span><br><span class="line">sudo mktexlsr <span class="comment"># 刷新一下</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有java解释器，安装下</span></span><br><span class="line">sudo apt-get install default-jdk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载与安装R</span></span><br><span class="line">curl -O https://cran.r-project.org/src/base/R-3/R-3.6.1.tar.gz</span><br><span class="line">tar -zxvf R-3.6.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> R-3.6.1/</span><br><span class="line">./configure --prefix=<span class="variable">$HOME</span>/<span class="built_in">local</span>/R --enable-R-shlib --with-cairo=yes</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="comment"># ./configure --with-cairo --with-libpng --with-libtiff --with-jpeglib --enable-R-shlib --prefix=$HOME/local/R</span></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建符号链接</span></span><br><span class="line"><span class="built_in">cd</span> /usr/bin/</span><br><span class="line">sudo ln -s <span class="variable">$HOME</span>/<span class="built_in">local</span>/R/bin/Rscript Rscript</span><br><span class="line">sudo ln -s <span class="variable">$HOME</span>/<span class="built_in">local</span>/R/bin/R R</span><br></pre></td></tr></table></figure><p>在编译过程中需要使用<code>./configure</code>命令检测环境及其依赖包，检测过程中可能遇到的报错：  </p><p>报错一：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure: error: No F77 compiler found</span><br></pre></td></tr></table></figure><p>解决办法：  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gfortran build-essential</span><br></pre></td></tr></table></figure><p>报错二：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configure: error: <span class="string">&quot;liblzma library and headers are required&quot;</span></span><br></pre></td></tr></table></figure><p>解决办法：安装xz  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo wget http://tukaani.org/xz/xz-5.2.4.tar.gz</span><br><span class="line">sudo tar xzvf xz-5.2.4.tar.gz</span><br><span class="line">sudo <span class="built_in">cd</span> xz-5.2.4</span><br><span class="line">sudo ./configure</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 18.04 安装有道词典</title>
      <link href="2019/08/22/youdao-ubuntu/"/>
      <url>2019/08/22/youdao-ubuntu/</url>
      
        <content type="html"><![CDATA[<h2 id="下载编译过的安装包"><a href="#下载编译过的安装包" class="headerlink" title="下载编译过的安装包"></a>下载编译过的安装包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/yomun/youdaodict_5.5/raw/master/youdao-dict_1.1.1-0~ubuntu_amd64.deb</span><br></pre></td></tr></table></figure><h2 id="查询并卸载QT5"><a href="#查询并卸载QT5" class="headerlink" title="查询并卸载QT5"></a>查询并卸载QT5</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如有显示 PyQt5 (5.10.1), 卸载</span></span><br><span class="line">pip3 list | grep PyQt5</span><br><span class="line">pip3 uninstall pyqt5</span><br><span class="line"></span><br><span class="line"><span class="comment"># root 用户</span></span><br><span class="line">sudo sudo pip3 list | grep PyQt5</span><br><span class="line">sudo sudo pip3 uninstall pyqt5</span><br></pre></td></tr></table></figure><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3</span><br><span class="line"></span><br><span class="line">sudo apt install python3-dbus python3-lxml python3-pil python3-requests python3-xdg python3-xlib</span><br><span class="line">sudo apt install python3-pyqt5 python3-pyqt5.qtmultimedia python3-pyqt5.qtquick python3-pyqt5.qtwebkit</span><br><span class="line"></span><br><span class="line">sudo apt install gir1.2-appindicator3-0.1 qml-module-qtgraphicaleffects qml-module-qtquick-controls</span><br><span class="line">sudo apt install libqt5multimedia5-plugins ttf-wqy-microhei</span><br><span class="line">sudo apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-sim tesseract-ocr-chi-tra</span><br><span class="line"></span><br><span class="line">sudo apt install ubuntu-restricted-extras</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 18.04 用 fonts-wqy-microhei 取代了 ttf-wqy-microhei</span></span><br></pre></td></tr></table></figure><h2 id="安装有道词典"><a href="#安装有道词典" class="headerlink" title="安装有道词典"></a>安装有道词典</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"></span><br><span class="line">如果是 dpkg 安装的话 (基于 Ubuntu / Debian / Linux Mint / Zorin OS)</span><br><span class="line">dpkg -i youdao-dict_1.1.1-0?ubuntu_amd64.deb</span><br><span class="line">apt install -f  (如果上面的 dpkg 命令运行显示缺依赖软件包)</span><br><span class="line"></span><br><span class="line">如果是 tar 安装的话 (其实就是将 deb 解压, 把文件放到系统各处)</span><br><span class="line">ar vx youdao-dict_1.1.1-0?ubuntu_amd64.deb</span><br><span class="line">tar -Jxvf data.tar.xz -C /</span><br><span class="line">rm -rf control.tar.gz &amp;&amp; rm -rf data.tar.xz &amp;&amp; rm -rf debian-binary</span><br></pre></td></tr></table></figure><p>安装之后可以直接运行有道词典  </p><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.config/youdao-dict</span><br><span class="line">rm -rf ~/.cache/youdao-dict</span><br><span class="line"></span><br><span class="line">su</span><br><span class="line"></span><br><span class="line">如果是 dpkg 安装的话</span><br><span class="line">dpkg -r youdao-dict</span><br><span class="line"></span><br><span class="line">如果是 tar 安装的话</span><br><span class="line">wget https://raw.githubusercontent.com/yomun/youdaodict_5.5/master/youdaodict-uninstall.sh</span><br><span class="line">bash youdaodict-uninstall.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stringr处理字符串</title>
      <link href="2019/08/18/stringr/"/>
      <url>2019/08/18/stringr/</url>
      
        <content type="html"><![CDATA[<p>用R语言处理字符串，总觉得很麻烦，即不能用向量的方法进行分割，也不能用循环遍历索引。grep()家族函数常常记不住，paste()函数默认以空格分割，各种不顺手啊！随着使用R语言的场景越来越多，字符串处理是必不可少的。stringr 包被定义为一致的、简单易用的字符串工具集。所有的函数和参数定义都具有一致性，更容易方便记忆和使用。  </p><h2 id="字符串计算函数"><a href="#字符串计算函数" class="headerlink" title="字符串计算函数"></a>字符串计算函数</h2><blockquote><p>str_length:    字符串长度<br>str_count:    字符串计数<br>str_order:    字符串排序  </p></blockquote><h3 id="str-length-字符串长度"><a href="#str-length-字符串长度" class="headerlink" title="str_length,字符串长度"></a>str_length,字符串长度</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_length(string)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量。  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_length(c(<span class="string">&quot;I&quot;</span>, <span class="string">&quot;am&quot;</span>, <span class="literal">NA</span>))</span><br><span class="line">[<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">2</span> <span class="literal">NA</span></span><br></pre></td></tr></table></figure><h3 id="str-count-字符串计数"><a href="#str-count-字符串计数" class="headerlink" title="str_count, 字符串计数"></a>str_count, 字符串计数</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_count(string, pattern = <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量。<br>pattern: 匹配的字符。</p></li><li><p>使用示例：  </p></li></ul><p>对字符串中匹配的字符计数  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_count(<span class="string">&#x27;aaa444sssddd&#x27;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">3</span></span><br></pre></td></tr></table></figure><p>对字符串向量中匹配的字符计数  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; fruit &lt;- c(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;pineapple&quot;</span>)</span><br><span class="line">&gt; str_count(fruit, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>对于一些特殊字符如：”.”，需要进行正则匹配  </p></blockquote><h3 id="str-order-字符串索引排序"><a href="#str-order-字符串索引排序" class="headerlink" title="str_order, 字符串索引排序"></a>str_order, 字符串索引排序</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str_order(x, decreasing = <span class="literal">FALSE</span>, na_last = <span class="literal">TRUE</span>, locale = <span class="string">&quot;en&quot;</span>, numeric = <span class="literal">FALSE</span>, <span class="keyword">...</span>)  </span><br><span class="line"></span><br><span class="line">str_sort(x, decreasing = <span class="literal">FALSE</span>, na_last = <span class="literal">TRUE</span>, locale = <span class="string">&quot;en&quot;</span>, numeric = <span class="literal">FALSE</span>, <span class="keyword">...</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>x: 字符串，字符串向量。<br>decreasing: 排序方向。<br>na_last:NA值的存放位置，一共3个值，TRUE放到最后，FALSE放到最前，NA过滤处理<br>locale:按哪种语言习惯排序<br>numeric: 是否只按照数字大小进行排序  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_sort(letters[<span class="number">1</span>:<span class="number">5</span>])</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span> <span class="string">&quot;b&quot;</span> <span class="string">&quot;c&quot;</span> <span class="string">&quot;d&quot;</span> <span class="string">&quot;e&quot;</span></span><br><span class="line">&gt; str_order(letters[<span class="number">1</span>:<span class="number">5</span>])</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 按照数字进行排序</span></span><br><span class="line">&gt; x &lt;- c(<span class="string">&quot;100a10&quot;</span>, <span class="string">&quot;100a5&quot;</span>, <span class="string">&quot;2b&quot;</span>, <span class="string">&quot;2a&quot;</span>)</span><br><span class="line">&gt; str_sort(x)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;100a10&quot;</span> <span class="string">&quot;100a5&quot;</span>  <span class="string">&quot;2a&quot;</span>     <span class="string">&quot;2b&quot;</span>    </span><br><span class="line">&gt; str_sort(x, numeric = <span class="literal">TRUE</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;2a&quot;</span>     <span class="string">&quot;2b&quot;</span>     <span class="string">&quot;100a5&quot;</span>  <span class="string">&quot;100a10&quot;</span></span><br></pre></td></tr></table></figure><h2 id="字符串拼接函数"><a href="#字符串拼接函数" class="headerlink" title="字符串拼接函数"></a>字符串拼接函数</h2><blockquote><p>str_c:    字符串拼接<br>str_trim:    去掉字符串的空格和TAB(\t)<br>str_pad:    补充字符串的长度<br>str_dup:    复制字符串<br>str_wrap:    控制字符串输出格式<br>str_sub:    截取字符串  </p></blockquote><h3 id="str-c，字符串拼接"><a href="#str-c，字符串拼接" class="headerlink" title="str_c，字符串拼接"></a>str_c，字符串拼接</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_c(<span class="keyword">...</span>, sep = <span class="string">&quot;&quot;</span>, collapse = <span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>…: 多参数的输入<br>sep: 把多个字符串拼接为一个大的字符串，用于字符串的分割符<br>collapse: 把多个向量参数拼接为一个大的字符串，用于字符串的分割符  </p></li><li><p>使用示例：  </p></li></ul><p>把多个字符串拼接为一个大的字符串。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_c(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;ab&quot;</span></span><br><span class="line">&gt; str_c(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,sep=<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a-b&quot;</span></span><br><span class="line">&gt; str_c(c(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a1&#x27;</span>),c(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;b1&#x27;</span>),sep=<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a-b&quot;</span>   <span class="string">&quot;a1-b1&quot;</span></span><br></pre></td></tr></table></figure><p>把多个向量参数拼接为一个大的字符串。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_c(head(letters), collapse = <span class="string">&quot;&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;abcdef&quot;</span></span><br><span class="line"><span class="comment"># collapse参数，对多个字符串无效</span></span><br><span class="line">&gt; str_c(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,collapse = <span class="string">&quot;-&quot;</span>)   </span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;ab&quot;</span></span><br><span class="line">&gt; str_c(c(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a1&#x27;</span>),c(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;b1&#x27;</span>),collapse=<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;ab-a1b1&quot;</span></span><br></pre></td></tr></table></figure><p>拼接有NA值的字符串向量时，NA还是NA  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_c(c(<span class="string">&quot;a&quot;</span>, <span class="literal">NA</span>, <span class="string">&quot;b&quot;</span>), <span class="string">&quot;-d&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a-d&quot;</span> <span class="literal">NA</span>    <span class="string">&quot;b-d&quot;</span></span><br><span class="line"><span class="comment"># Use str_replace_NA to display literal NAs:</span></span><br><span class="line">&gt; str_c(str_replace_na(c(<span class="string">&quot;a&quot;</span>, <span class="literal">NA</span>, <span class="string">&quot;b&quot;</span>)), <span class="string">&quot;-d&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a-d&quot;</span>  <span class="string">&quot;NA-d&quot;</span> <span class="string">&quot;b-d&quot;</span> </span><br></pre></td></tr></table></figure><h3 id="str-flatten-字符串快速拼接函数"><a href="#str-flatten-字符串快速拼接函数" class="headerlink" title="str_flatten: 字符串快速拼接函数"></a>str_flatten: 字符串快速拼接函数</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_flatten(string, collapse = <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>collapse: 拼接字符串之间插入的字符  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_flatten(letters)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">&gt; str_flatten(letters, <span class="string">&quot;-&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a-b-c-d-e-f-g-h-i-j-k-l-m-n-o-p-q-r-s-t-u-v-w-x-y-z&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-trim-去掉字符串的空格和TAB-t"><a href="#str-trim-去掉字符串的空格和TAB-t" class="headerlink" title="str_trim:去掉字符串的空格和TAB(\t)"></a>str_trim:去掉字符串的空格和TAB(\t)</h3><blockquote><p>str_trim() 从字符串的开头和结尾删除空格; str_squish() 同时还可以删除字符串内部的空格  </p></blockquote><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_trim(string, side = c(<span class="string">&quot;both&quot;</span>, <span class="string">&quot;left&quot;</span>, <span class="string">&quot;right&quot;</span>))</span><br><span class="line">str_squish(string)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>side: 过滤方式，both两边都过滤，left左边过滤，right右边过滤  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_trim(<span class="string">&quot;\n\nString with trailing and leading white space\n\n&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;String with trailing, middle, and leading white space&quot;</span></span><br><span class="line">&gt; str_squish(<span class="string">&quot;\n\nString with excess, trailing and leading white space\n\n&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;String with trailing, middle, and leading white space&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-pad-补充字符串的长度"><a href="#str-pad-补充字符串的长度" class="headerlink" title="str_pad:补充字符串的长度"></a>str_pad:补充字符串的长度</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_pad(string, width, side = c(<span class="string">&quot;left&quot;</span>, <span class="string">&quot;right&quot;</span>, <span class="string">&quot;both&quot;</span>), pad = <span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>width: 字符串填充后的长度<br>side: 填充方向，both两边都填充，left左边填充，right右边填充<br>pad: 用于填充的字符  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从左边补充空格，直到字符串长度为20</span></span><br><span class="line">&gt; str_pad(<span class="string">&quot;conan&quot;</span>, <span class="number">20</span>, <span class="string">&quot;left&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;               conan&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从右边补充空格，直到字符串长度为20</span></span><br><span class="line">&gt; str_pad(<span class="string">&quot;conan&quot;</span>, <span class="number">20</span>, <span class="string">&quot;right&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;conan               &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从左右两边各补充空格，直到字符串长度为20</span></span><br><span class="line">&gt; str_pad(<span class="string">&quot;conan&quot;</span>, <span class="number">20</span>, <span class="string">&quot;both&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;       conan        &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从左右两边各补充x字符，直到字符串长度为20</span></span><br><span class="line">&gt; str_pad(<span class="string">&quot;conan&quot;</span>, <span class="number">20</span>, <span class="string">&quot;both&quot;</span>,<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;xxxxxxxconanxxxxxxxx&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-dup-复制字符串"><a href="#str-dup-复制字符串" class="headerlink" title="str_dup: 复制字符串"></a>str_dup: 复制字符串</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_dup(string, times)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>times: 复制数量  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; fruit &lt;- c(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;banana&quot;</span>)</span><br><span class="line">&gt; str_dup(fruit, <span class="number">2</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;appleapple&quot;</span>   <span class="string">&quot;pearpear&quot;</span>     <span class="string">&quot;bananabanana&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-wrap，控制字符串输出格式"><a href="#str-wrap，控制字符串输出格式" class="headerlink" title="str_wrap，控制字符串输出格式"></a>str_wrap，控制字符串输出格式</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_wrap(string, width = <span class="number">80</span>, indent = <span class="number">0</span>, exdent = <span class="number">0</span>)</span><br></pre></td></tr></table></figure><ul><li>参数列表：<br>string: 字符串，字符串向量<br>width: 设置一行所占的宽度<br>indent: 段落首行的缩进值<br>exdent: 段落非首行的缩进值  </li></ul><h3 id="str-sub-截取字符串"><a href="#str-sub-截取字符串" class="headerlink" title="str_sub,截取字符串"></a>str_sub,截取字符串</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_sub(string, start = <span class="number">1L</span>, end = -<span class="number">1L</span>)</span><br><span class="line">str_sub(string, start = <span class="number">1L</span>, end = -<span class="number">1L</span>, omit_na = <span class="literal">FALSE</span>) &lt;- value</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>start : 开始位置<br>end : 结束位置  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; hw &lt;- <span class="string">&quot;Hadley Wickham&quot;</span></span><br><span class="line">&gt; str_sub(hw, <span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Hadley&quot;</span></span><br><span class="line">&gt; str_sub(hw, end = <span class="number">6</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Hadley&quot;</span></span><br><span class="line">&gt; str_sub(hw, c(<span class="number">1</span>, <span class="number">8</span>), c(<span class="number">6</span>, <span class="number">14</span>))</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Hadley&quot;</span>  <span class="string">&quot;Wickham&quot;</span></span><br><span class="line"></span><br><span class="line">&gt; str_sub(hw, -<span class="number">1</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;m&quot;</span></span><br><span class="line">&gt; str_sub(hw, -<span class="number">7</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Wickham&quot;</span></span><br><span class="line">&gt; str_sub(hw, end = -<span class="number">7</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Hadley W&quot;</span></span><br></pre></td></tr></table></figure><h2 id="字符串匹配函数"><a href="#字符串匹配函数" class="headerlink" title="字符串匹配函数"></a>字符串匹配函数</h2><blockquote><p>str_split:    字符串分割<br>str_subset: 返回匹配的字符串<br>word:    从文本中提取单词<br>str_detect: 检查匹配字符串的字符<br>str_match:    从字符串中提取匹配组<br>str_replace: 字符串替换<br>str_replace_na:把NA替换为NA字符串<br>str_locate: 找到匹配的字符串的位置<br>str_extract: 从字符串中提取匹配字符  </p></blockquote><h3 id="str-split-字符串分割"><a href="#str-split-字符串分割" class="headerlink" title="str_split,字符串分割"></a>str_split,字符串分割</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_split(string, pattern, n = <span class="literal">Inf</span>, simplify = <span class="literal">FALSE</span>)</span><br><span class="line">str_split_fixed(string, pattern, n)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>pattern: 匹配的字符<br>n: 分割个数<br>simplify: FALSE以list返回结果，TRUE以matrix返回结果  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&gt; fruits &lt;- c(<span class="string">&quot;apples and oranges and pears and bananas&quot;</span>, <span class="string">&quot;pineapples and mangos and guavas&quot;</span>)</span><br><span class="line">&gt; str_split(fruits, <span class="string">&quot; and &quot;</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;apples&quot;</span>  <span class="string">&quot;oranges&quot;</span> <span class="string">&quot;pears&quot;</span>   <span class="string">&quot;bananas&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;pineapples&quot;</span> <span class="string">&quot;mangos&quot;</span>     <span class="string">&quot;guavas&quot;</span>    </span><br><span class="line"></span><br><span class="line">&gt; str_split(fruits, <span class="string">&quot; and &quot;</span>, simplify = <span class="literal">TRUE</span>)</span><br><span class="line">     [,<span class="number">1</span>]         [,<span class="number">2</span>]      [,<span class="number">3</span>]     [,<span class="number">4</span>]     </span><br><span class="line">[<span class="number">1</span>,] <span class="string">&quot;apples&quot;</span>     <span class="string">&quot;oranges&quot;</span> <span class="string">&quot;pears&quot;</span>  <span class="string">&quot;bananas&quot;</span></span><br><span class="line">[<span class="number">2</span>,] <span class="string">&quot;pineapples&quot;</span> <span class="string">&quot;mangos&quot;</span>  <span class="string">&quot;guavas&quot;</span> <span class="string">&quot;&quot;</span> </span><br><span class="line"></span><br><span class="line">&gt; str_split(fruits, <span class="string">&quot; and &quot;</span>, n = <span class="number">3</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;apples&quot;</span>            <span class="string">&quot;oranges&quot;</span>           <span class="string">&quot;pears and bananas&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;pineapples&quot;</span> <span class="string">&quot;mangos&quot;</span>     <span class="string">&quot;guavas&quot;</span> </span><br><span class="line"></span><br><span class="line">&gt; str_split_fixed(fruits, <span class="string">&quot; and &quot;</span>, <span class="number">3</span>)</span><br><span class="line">     [,<span class="number">1</span>]         [,<span class="number">2</span>]      [,<span class="number">3</span>]               </span><br><span class="line">[<span class="number">1</span>,] <span class="string">&quot;apples&quot;</span>     <span class="string">&quot;oranges&quot;</span> <span class="string">&quot;pears and bananas&quot;</span></span><br><span class="line">[<span class="number">2</span>,] <span class="string">&quot;pineapples&quot;</span> <span class="string">&quot;mangos&quot;</span>  <span class="string">&quot;guavas&quot;</span>           </span><br><span class="line">&gt; str_split_fixed(fruits, <span class="string">&quot; and &quot;</span>, <span class="number">4</span>)</span><br><span class="line">     [,<span class="number">1</span>]         [,<span class="number">2</span>]      [,<span class="number">3</span>]     [,<span class="number">4</span>]     </span><br><span class="line">[<span class="number">1</span>,] <span class="string">&quot;apples&quot;</span>     <span class="string">&quot;oranges&quot;</span> <span class="string">&quot;pears&quot;</span>  <span class="string">&quot;bananas&quot;</span></span><br><span class="line">[<span class="number">2</span>,] <span class="string">&quot;pineapples&quot;</span> <span class="string">&quot;mangos&quot;</span>  <span class="string">&quot;guavas&quot;</span> <span class="string">&quot;&quot;</span> </span><br></pre></td></tr></table></figure><h3 id="str-subset-返回的匹配字符串"><a href="#str-subset-返回的匹配字符串" class="headerlink" title="str_subset:返回的匹配字符串"></a>str_subset:返回的匹配字符串</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_subset(string, pattern, negate = <span class="literal">FALSE</span>)</span><br><span class="line">str_which(string, pattern, negate = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表:<br>string: 字符串，字符串向量<br>pattern: 匹配的字符<br>negate: 如果为TRUE，返回未匹配的元素  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; fruit &lt;- c(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;pinapple&quot;</span>)</span><br><span class="line">&gt; str_subset(fruit, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;apple&quot;</span>    <span class="string">&quot;banana&quot;</span>   <span class="string">&quot;pear&quot;</span>     <span class="string">&quot;pinapple&quot;</span></span><br><span class="line">&gt; str_which(fruit, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="comment"># 支持正则表达式</span></span><br><span class="line">&gt; str_subset(fruit, <span class="string">&quot;^a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;apple&quot;</span></span><br><span class="line">&gt; str_subset(fruit, <span class="string">&quot;a$&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;banana&quot;</span></span><br></pre></td></tr></table></figure><h3 id="word-从文本中提取单词"><a href="#word-从文本中提取单词" class="headerlink" title="word, 从文本中提取单词"></a>word, 从文本中提取单词</h3><ul><li>函数定义  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">word(string, start = <span class="number">1L</span>, end = start, sep = fixed(<span class="string">&quot; &quot;</span>))</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>start: 开始位置<br>end: 结束位置<br>sep: 匹配字符  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; sentences &lt;- c(<span class="string">&quot;Jane saw a cat&quot;</span>, <span class="string">&quot;Jane sat down&quot;</span>)</span><br><span class="line">&gt; word(sentences, <span class="number">1</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;Jane&quot;</span> <span class="string">&quot;Jane&quot;</span></span><br><span class="line">&gt; word(sentences, <span class="number">2</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;saw&quot;</span> <span class="string">&quot;sat&quot;</span></span><br><span class="line">&gt; word(sentences, -<span class="number">1</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;cat&quot;</span>  <span class="string">&quot;down&quot;</span></span><br><span class="line">&gt; word(sentences, <span class="number">2</span>, -<span class="number">1</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;saw a cat&quot;</span> <span class="string">&quot;sat down&quot;</span> </span><br><span class="line"><span class="comment"># 匹配以..分割开的word</span></span><br><span class="line">&gt; str &lt;- <span class="string">&#x27;abc.def..123.4568.999&#x27;</span></span><br><span class="line">&gt; word(str, <span class="number">1</span>, sep = fixed(<span class="string">&#x27;..&#x27;</span>))</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;abc.def&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-detect，检查字符串是否出现"><a href="#str-detect，检查字符串是否出现" class="headerlink" title="str_detect，检查字符串是否出现"></a>str_detect，检查字符串是否出现</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_detect(string, pattern, negate = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>pattern: 匹配字符<br>negate: 如果为TRUE，返回未匹配的元素  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; fruit &lt;- c(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;pinapple&quot;</span>)</span><br><span class="line">&gt; str_detect(fruit, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span> <span class="literal">TRUE</span> <span class="literal">TRUE</span> <span class="literal">TRUE</span></span><br><span class="line">&gt; str_detect(fruit, <span class="string">&quot;^a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br><span class="line">&gt; str_detect(fruit, <span class="string">&quot;^p&quot;</span>, negate = <span class="literal">TRUE</span>)</span><br><span class="line">[<span class="number">1</span>]  <span class="literal">TRUE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span> <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><h3 id="str-match-从字符串中提取匹配组"><a href="#str-match-从字符串中提取匹配组" class="headerlink" title="str_match,从字符串中提取匹配组"></a>str_match,从字符串中提取匹配组</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_match(string, pattern)</span><br><span class="line">str_match_all(string, pattern)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>pattern: 匹配字符  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; val &lt;- c(<span class="string">&quot;abc&quot;</span>, <span class="number">123</span>, <span class="string">&quot;cba&quot;</span>)</span><br><span class="line">&gt; str_match(val, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">     [,<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>,] <span class="string">&quot;a&quot;</span> </span><br><span class="line">[<span class="number">2</span>,] <span class="literal">NA</span>  </span><br><span class="line">[<span class="number">3</span>,] <span class="string">&quot;a&quot;</span> </span><br><span class="line">&gt; str_match(val, <span class="string">&quot;[0-9]&quot;</span>)</span><br><span class="line">     [,<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>,] <span class="literal">NA</span>  </span><br><span class="line">[<span class="number">2</span>,] <span class="string">&quot;1&quot;</span> </span><br><span class="line">[<span class="number">3</span>,] <span class="literal">NA</span>  </span><br><span class="line">&gt; str_match_all(val, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">     [,<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>,] <span class="string">&quot;a&quot;</span> </span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">     [,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">     [,<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>,] <span class="string">&quot;a&quot;</span> </span><br></pre></td></tr></table></figure><h3 id="str-replace，字符串替换"><a href="#str-replace，字符串替换" class="headerlink" title="str_replace，字符串替换"></a>str_replace，字符串替换</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_replace(string, pattern, replacement)</span><br><span class="line">str_replace_all(string, pattern, replacement)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>pattern: 匹配字符<br>replacement: 用于替换的字符  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; fruits &lt;- c(<span class="string">&quot;one apple&quot;</span>, <span class="string">&quot;two pears&quot;</span>, <span class="string">&quot;three bananas&quot;</span>)</span><br><span class="line">&gt; str_replace(fruits, <span class="string">&quot;[aeiou]&quot;</span>, <span class="string">&quot;-&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;-ne apple&quot;</span>     <span class="string">&quot;tw- pears&quot;</span>     <span class="string">&quot;thr-e bananas&quot;</span></span><br><span class="line">&gt; str_replace_all(fruits, <span class="string">&quot;[aeiou]&quot;</span>, <span class="string">&quot;-&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;-n- -ppl-&quot;</span>     <span class="string">&quot;tw- p--rs&quot;</span>     <span class="string">&quot;thr-- b-n-n-s&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-replace-na把NA替换为NA字符串"><a href="#str-replace-na把NA替换为NA字符串" class="headerlink" title="str_replace_na把NA替换为NA字符串"></a>str_replace_na把NA替换为NA字符串</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_replace_na(string, replacement = <span class="string">&quot;NA&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>replacement : 用于替换的字符  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; str_replace_na(c(<span class="literal">NA</span>, <span class="string">&quot;abc&quot;</span>, <span class="string">&quot;def&quot;</span>))</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;NA&quot;</span>  <span class="string">&quot;abc&quot;</span> <span class="string">&quot;def&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-locate，找到的模式在字符串中的位置"><a href="#str-locate，找到的模式在字符串中的位置" class="headerlink" title="str_locate，找到的模式在字符串中的位置"></a>str_locate，找到的模式在字符串中的位置</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_locate(string, pattern)</span><br><span class="line">str_locate_all(string, pattern)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>pattern: 匹配字符  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt; fruit &lt;- c(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;pineapple&quot;</span>)</span><br><span class="line">&gt; str_locate(fruit, <span class="string">&quot;a&quot;</span>) <span class="comment"># 在每个字符串中a的位置</span></span><br><span class="line">     start end</span><br><span class="line">[<span class="number">1</span>,]     <span class="number">1</span>   <span class="number">1</span></span><br><span class="line">[<span class="number">2</span>,]     <span class="number">2</span>   <span class="number">2</span></span><br><span class="line">[<span class="number">3</span>,]     <span class="number">3</span>   <span class="number">3</span></span><br><span class="line">[<span class="number">4</span>,]     <span class="number">5</span>   <span class="number">5</span></span><br><span class="line">&gt; str_locate_all(fruit, <span class="string">&quot;a&quot;</span>) <span class="comment"># 在每个字符串中所有a的位置</span></span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">     start end</span><br><span class="line">[<span class="number">1</span>,]     <span class="number">1</span>   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">     start end</span><br><span class="line">[<span class="number">1</span>,]     <span class="number">2</span>   <span class="number">2</span></span><br><span class="line">[<span class="number">2</span>,]     <span class="number">4</span>   <span class="number">4</span></span><br><span class="line">[<span class="number">3</span>,]     <span class="number">6</span>   <span class="number">6</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">     start end</span><br><span class="line">[<span class="number">1</span>,]     <span class="number">3</span>   <span class="number">3</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">4</span>]]</span><br><span class="line">     start end</span><br><span class="line">[<span class="number">1</span>,]     <span class="number">5</span>   <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="str-extract从字符串中提取匹配模式"><a href="#str-extract从字符串中提取匹配模式" class="headerlink" title="str_extract从字符串中提取匹配模式"></a>str_extract从字符串中提取匹配模式</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_extract(string, pattern)</span><br><span class="line">str_extract_all(string, pattern, simplify = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>pattern: 匹配字符<br>simplify: 返回值，TRUE返回matrix，FALSE返回字符串向量  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; shopping_list &lt;- c(<span class="string">&quot;apples x4&quot;</span>, <span class="string">&quot;bag of flour&quot;</span>, <span class="string">&quot;bag of sugar&quot;</span>, <span class="string">&quot;milk x2&quot;</span>)</span><br><span class="line">&gt; str_extract(shopping_list, <span class="string">&quot;\\d&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;4&quot;</span> <span class="literal">NA</span>  <span class="literal">NA</span>  <span class="string">&quot;2&quot;</span></span><br><span class="line">&gt; str_extract_all(shopping_list, <span class="string">&quot;\\d&quot;</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;4&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">character(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">character(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">[[<span class="number">4</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;2&quot;</span></span><br><span class="line"></span><br><span class="line">&gt; str_extract_all(shopping_list, <span class="string">&quot;\\d&quot;</span>, simplify = <span class="literal">TRUE</span>)</span><br><span class="line">     [,<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>,] <span class="string">&quot;4&quot;</span> </span><br><span class="line">[<span class="number">2</span>,] <span class="string">&quot;&quot;</span>  </span><br><span class="line">[<span class="number">3</span>,] <span class="string">&quot;&quot;</span>  </span><br><span class="line">[<span class="number">4</span>,] <span class="string">&quot;2&quot;</span> </span><br></pre></td></tr></table></figure><h2 id="字符串变换函数"><a href="#字符串变换函数" class="headerlink" title="字符串变换函数"></a>字符串变换函数</h2><blockquote><p>str_conv:    字符编码转换<br>str_to_upper: 字符串转成大写<br>str_to_lower: 字符串转成小写,规则同str_to_upper<br>str_to_title: 字符串转成首字母大写,规则同str_to_upper  </p></blockquote><h3 id="str-conv-字符编码转换"><a href="#str-conv-字符编码转换" class="headerlink" title="str_conv:字符编码转换"></a>str_conv:字符编码转换</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_conv(string, encoding)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串，字符串向量<br>encoding: 编码名  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- charToRaw(<span class="string">&#x27;你好&#x27;</span>)</span><br><span class="line">&gt; x</span><br><span class="line">[<span class="number">1</span>] e4 bd a0 e5 a5 bd</span><br><span class="line">&gt; str_conv(x, <span class="string">&quot;GBK&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;你好&quot;</span></span><br><span class="line">&gt; str_conv(x, <span class="string">&quot;GB2312&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;你好&quot;</span></span><br></pre></td></tr></table></figure><h3 id="str-to-upper-字符串大写转换"><a href="#str-to-upper-字符串大写转换" class="headerlink" title="str_to_upper,字符串大写转换"></a>str_to_upper,字符串大写转换</h3><ul><li>函数定义：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str_to_upper(string, locale = <span class="string">&quot;en&quot;</span>)</span><br><span class="line">str_to_lower(string, locale = <span class="string">&quot;en&quot;</span>)</span><br><span class="line">str_to_title(string, locale = <span class="string">&quot;en&quot;</span>)</span><br><span class="line">str_to_sentence(string, locale = <span class="string">&quot;en&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>参数列表：<br>string: 字符串<br>locale:按哪种语言习惯排序  </p></li><li><p>使用示例：  </p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; dog &lt;- <span class="string">&quot;The quick brown dog&quot;</span></span><br><span class="line">&gt; str_to_upper(dog)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;THE QUICK BROWN DOG&quot;</span></span><br><span class="line">&gt; str_to_lower(dog)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;the quick brown dog&quot;</span></span><br><span class="line">&gt; str_to_title(dog)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;The Quick Brown Dog&quot;</span></span><br><span class="line">&gt; str_to_sentence(<span class="string">&quot;the quick brown dog&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;The quick brown dog&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jekyll + NexT + GitHub Pages 主题优化</title>
      <link href="2019/07/20/Next/"/>
      <url>2019/07/20/Next/</url>
      
        <content type="html"><![CDATA[<h2 id="设置主题风格"><a href="#设置主题风格" class="headerlink" title="设置主题风格"></a>设置主题风格</h2><p>打开 <font color = "red"><code>_config.yml</code></font> 文件，找到 <code>scheme</code> 相关配置内容，去掉启用主题前的 <code>#</code> 注释即可  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings 设置主题</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse   # 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</span></span><br><span class="line"><span class="comment">#scheme: Mist   # Muse 的紧凑版本，整洁有序的单栏外观</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span>  <span class="comment"># 双栏 Scheme</span></span><br></pre></td></tr></table></figure><h2 id="设置菜单项的显示文本和图标"><a href="#设置菜单项的显示文本和图标" class="headerlink" title="设置菜单项的显示文本和图标"></a>设置菜单项的显示文本和图标</h2><p>NexT 使用的是 <a href="http://fontawesome.dashgame.com/">Font Awesome</a> 提供的图标， <a href="http://fontawesome.dashgame.com/">Font Awesome</a> 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下图标模糊的问题。  </p><h3 id="设置菜单项的显示中文文本"><a href="#设置菜单项的显示中文文本" class="headerlink" title="设置菜单项的显示中文文本"></a>设置菜单项的显示中文文本</h3><p>打开 <code>/_data/languages/zh-Hans.yml</code> 文件，找到 <code>menu</code> 菜单，新增或者修改菜单项  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">分类</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">标签</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">关于</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">搜索</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">日程表</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">站点地图</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">公益404</span></span><br><span class="line">  <span class="comment"># 新增menu</span></span><br><span class="line">  <span class="attr">book:</span> <span class="string">书单</span></span><br></pre></td></tr></table></figure><h3 id="设定菜单项的文件目录和对应图标"><a href="#设定菜单项的文件目录和对应图标" class="headerlink" title="设定菜单项的文件目录和对应图标"></a>设定菜单项的文件目录和对应图标</h3><p>打开 <code>_config.yml</code> 文件，搜索 <code>menu</code> 关键字，修改对应图标名称或者新增对应 menu 的图标。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></span><br><span class="line"><span class="comment">## 这里添加或修改menu目录</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml</span></span><br><span class="line">  <span class="comment">#commonweal: /404.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="comment"># Icon Mapping:</span></span><br><span class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="comment">#   Key is the name of menu item and value is the name of FontAwesome icon. Key is case-senstive.</span></span><br><span class="line"><span class="comment">#   When an question mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line"><span class="comment"># 这里启用相应的FontAwesome图标</span></span><br><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">user</span></span><br><span class="line"><span class="comment">#  book: book</span></span><br><span class="line"><span class="comment">#  <span class="doctag">note:</span> pencil</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">calendar</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">archive</span></span><br><span class="line">  <span class="attr">sitemap:</span> <span class="string">sitemap</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">heartbeat</span></span><br><span class="line"><span class="comment">#  myseo: internet-explorer</span></span><br><span class="line"><span class="comment">#  top: signal</span></span><br><span class="line"><span class="comment">#  resume: handshake-o</span></span><br><span class="line"><span class="comment">#  message: commenting</span></span><br><span class="line"><span class="comment">#  friends: link</span></span><br><span class="line"><span class="comment">#  file: file-archive-o</span></span><br><span class="line"><span class="comment">#  ariang: cloud-download</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：除了 <code>home</code>， <code>archives</code> ,<code> /</code>后面都需要手动创建这个页面对应的文件夹及文件，且文件需要以 <code>index.md</code> 命名  </p></blockquote><h2 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h2><h3 id="添加头像"><a href="#添加头像" class="headerlink" title="添加头像"></a>添加头像</h3><p>打开 <code>/_config.yml</code> 文件，搜索 <code>Sidebar Avatar</code> 关键字，去掉 <code>avatar</code> 前面的<code>#</code>，并添加相应的图片链接或者文件路径：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar（侧栏头像）</span></span><br><span class="line"><span class="comment"># in directory: /assets/images/avatar.gif</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/assets/images/avatar.jpg</span></span><br></pre></td></tr></table></figure><h3 id="设置头像边框为圆形框"><a href="#设置头像边框为圆形框" class="headerlink" title="设置头像边框为圆形框"></a>设置头像边框为圆形框</h3><p>打开 <code>/_sass/_common/components/sidebar/sidebar-author.scss</code> 文件,修改如下:  </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="variable">$site-author-image-padding</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="variable">$site-author-image-width</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$site-author-image-height</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="variable">$site-author-image-border-width</span> solid <span class="variable">$site-author-image-border-color</span>;</span><br><span class="line"> <span class="comment">// 修改头像边框</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="特效：鼠标放置头像上旋转"><a href="#特效：鼠标放置头像上旋转" class="headerlink" title="特效：鼠标放置头像上旋转"></a>特效：鼠标放置头像上旋转</h3><p>打开 <code>/_sass/_common/components/sidebar/sidebar-author.scss</code> 文件,修改如下:  </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="variable">$site-author-image-padding</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="variable">$site-author-image-width</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">$site-author-image-height</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="variable">$site-author-image-border-width</span> solid <span class="variable">$site-author-image-border-color</span>;</span><br><span class="line"> <span class="comment">// 修改头像边框</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  -webkit-<span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  -moz-<span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="comment">// 设置旋转</span></span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">1.4s</span> all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 可旋转的圆形头像,`hover`动作</span></span><br><span class="line"><span class="selector-class">.site-author-image</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</span><br><span class="line">    -moz-<span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</span><br><span class="line">    -ms-<span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</span><br><span class="line">    -<span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="浏览页面的时候显示当前浏览进度"><a href="#浏览页面的时候显示当前浏览进度" class="headerlink" title="浏览页面的时候显示当前浏览进度"></a>浏览页面的时候显示当前浏览进度</h2><p>打开 <code>/_config.yml</code> ,搜索关键字 <code>scrollpercent</code> ,把 <code>false</code> 改为 <code>true</code>。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Scroll percent label in b2t button</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如果想把 top按钮放在侧边栏,打开 <code>/_config.yml</code> ,搜索关键字 <code>b2t</code> ,把 <code>false</code> 改为 <code>true</code>。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Back to top in sidebar</span></span><br><span class="line">  <span class="attr">b2t:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h2><h3 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h3><p>打开 <code>/_config.yml</code> 文件,搜索关键字 <code>social</code> ,然后添加社交站点名称与地址即可。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Sidebar Settings </span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Social Links</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></span><br><span class="line"><span class="comment">#social:</span></span><br><span class="line">  <span class="comment">#LinkLabel: Link</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">CSDN:</span> <span class="string">https://blog.csdn.net/yourname</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/yourname</span></span><br></pre></td></tr></table></figure><h3 id="社交链接图标"><a href="#社交链接图标" class="headerlink" title="社交链接图标"></a>社交链接图标</h3><p>与菜单栏的设置类似，打开 <code>/_config.yml</code> 文件,搜索关键字 <code>social_icons</code> ，添加社交站点名称（注意大小写）图标，<a href="http://fontawesome.dashgame.com/">Font Awesome</a>图标地。  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Links Icons</span></span><br><span class="line"><span class="comment"># Icon Mapping:</span></span><br><span class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="comment">#   Key is the name of the item and value is the name of FontAwesome icon. Key is case-senstive.</span></span><br><span class="line"><span class="comment">#   When an globe mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Icon Mappings.</span></span><br><span class="line">  <span class="comment"># KeyMapsToSocialItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">twitter</span></span><br><span class="line">  <span class="attr">Weibo:</span> <span class="string">weibo</span></span><br></pre></td></tr></table></figure><h3 id="RSS设置"><a href="#RSS设置" class="headerlink" title="RSS设置"></a>RSS设置</h3><p>当前 Next 主题好像可以直接使用RSS，可以在 <code>/_config.yml</code> 文件中搜索 <code>feed</code> 添加如下配置：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Atom feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br></pre></td></tr></table></figure><h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>打开 <code>/_config.yml</code> 文件,搜索关键字 <code>Blog rolls</code>：  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">友情链接</span> <span class="comment">#标题</span></span><br><span class="line"><span class="attr">links_layout:</span> <span class="string">block</span> <span class="comment">#布局，一行一个连接</span></span><br><span class="line"><span class="comment">#links_layout: inline</span></span><br><span class="line"><span class="attr">links:</span> </span><br><span class="line">  <span class="attr">Title:</span> <span class="string">http://example.com/</span></span><br></pre></td></tr></table></figure><h2 id="主页文章添加边框阴影效果"><a href="#主页文章添加边框阴影效果" class="headerlink" title="主页文章添加边框阴影效果"></a>主页文章添加边框阴影效果</h2><p>打开 <code>/_sass/_custom/custom.scss</code> ,向里面加代码:  </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</span><br><span class="line">   -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码块自定义样式"><a href="#代码块自定义样式" class="headerlink" title="代码块自定义样式"></a>代码块自定义样式</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Custom styles.</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 边框的自定义样式</span></span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="开启版权声明"><a href="#开启版权声明" class="headerlink" title="开启版权声明"></a>开启版权声明</h2><p>主题配置文件下,搜索关键字 <code>post_copyright</code> , <code>enable</code> 改为 <code>true</code>  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Declare license on posts</span></span><br><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="string">ture</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure><h2 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h2><p>可以在<a href="https://github.blog/2008-12-19-github-ribbons/">GitHub Ribbons</a>选择不同的样式,修改图片跳转链接,并复制文本框中的代码,将如下地方代码换为自己Github主页：  </p><p><img src="/images/Next/forkgithub.png" alt="png1">  </p><p>打开 <code>/_layouts/layout.html</code> 文件，把代码复制到 <code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code> 下面。  </p><h2 id="修改内容区域的宽度"><a href="#修改内容区域的宽度" class="headerlink" title="修改内容区域的宽度"></a>修改内容区域的宽度</h2><p>打开 <font color = "red">_sass/_custom/custom.scss</font> 文件，新增变量：  </p>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 修改成你期望的宽度</span><br><span class="line">$content-desktop = 700px</span><br><span class="line"></span><br><span class="line">// 当视窗超过 1600px 后的宽度</span><br><span class="line">$content-desktop-large = 900px</span><br></pre></td></tr></table></figure><blockquote><p>此方法不适用于 Pisces Scheme</p></blockquote><p>当你使用Pisces风格时可以用下面的方法：  </p><ul><li><p>编辑 Pisces Scheme 的 <font color = "red">_sass/_schemes/Pisces/_layout.scss</font> 文件，在最底部添加如下代码：  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span>&#123; <span class="attribute">width</span>: <span class="number">90%</span>; &#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-inner</span> &#123; <span class="attribute">width</span>: <span class="number">90%</span>; &#125;</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123; <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">260px</span>); &#125;</span><br></pre></td></tr></table></figure><blockquote><p>对于有些浏览器或是移动设备，效果可能不是太好  </p></blockquote></li><li><p>编辑 Pisces Scheme 的 <font color = "red">_sass/_schemes/Pisces/_layout.scss</font> 文件，修改以下内容：  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 将 .header 中的 </span><br><span class="line">width: $main-desktop;</span><br><span class="line">// 改为：</span><br><span class="line"><span class="selector-tag">width</span>: 80%;</span><br><span class="line"></span><br><span class="line">// 将 .container .main-inner 中的：</span><br><span class="line">width: $main-desktop;</span><br><span class="line">// 改为：</span><br><span class="line"><span class="selector-tag">width</span>: 80%;</span><br><span class="line"></span><br><span class="line">// 将 .content-wrap 中的：</span><br><span class="line">width: $content-desktop;</span><br><span class="line">// 改为：</span><br><span class="line"><span class="selector-tag">width</span>: <span class="selector-tag">calc</span>(100% <span class="selector-tag">-</span> 260<span class="selector-tag">px</span>);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> jekyll </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R中的integer(0)</title>
      <link href="2019/06/15/interger0/"/>
      <url>2019/06/15/interger0/</url>
      
        <content type="html"><![CDATA[<h1 id="R语言的integer-0"><a href="#R语言的integer-0" class="headerlink" title="R语言的integer(0)"></a>R语言的<code>integer(0)</code></h1><h2 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;x1=c(<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">&gt;which(x1==<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">integer(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">&gt; length(integer(<span class="number">0</span>))</span><br><span class="line">[<span class="number">1</span>] <span class="number">0</span></span><br></pre></td></tr></table></figure><p>可以看出当<code>which()</code> 函数没有符合条件的返回值时会返回<code>integer(0)</code>  </p><p>虽然看起来<code>integer(0)</code>和<code>NULL</code>表示的含义是很像的，但实际上两者是完全不同的：  </p><blockquote><p><code>integer(0)</code>是一个整数向量，长度为0；<code>NULL</code> 表示的是空的意思  </p></blockquote><h2 id="integer-0-，numeric-0-，logical-0-，NULL，NA-的区别"><a href="#integer-0-，numeric-0-，logical-0-，NULL，NA-的区别" class="headerlink" title="integer(0)，numeric(0)，logical(0)，NULL，NA 的区别"></a><code>integer(0)</code>，<code>numeric(0)</code>，<code>logical(0)</code>，<code>NULL</code>，<code>NA</code> 的区别</h2><p><code>logical(0)</code> 不等于 <code>numeric(0)</code>。两者都不是<code>NULL</code>值，即<code>is.null(logical(0))</code>和<code>is.null(numeric(0))</code>都会返回FALSE。<strong>说明长度为零的值有时却不会为空值，<code>NULL</code>的定义是函数中没有被赋值的参数，特征就是没有值</strong>。如何区分<code>NULL</code>和<code>NA</code>？很简单，后者的logical length是1，而前者的logical length是0，意思是假如用<code>is.logical</code>判断NA的逻辑值，得到的结果是TRUE。<code>NA</code>可以为正无穷或负无穷，但<code>NULL</code>永远代表的是没有这个值，一个空集的概念。  </p><blockquote><p>总的来说：  </p><ol><li><code>numeric(0) == numeric(0)</code>和<code>numeric(0) != numeric(0)</code>，返回TRUE。  </li><li><code>logical(0)</code>, <code>numeric(0)</code>, <code>NULL</code>，返回FALSE。   </li><li><code>is.logical(NA)</code>，返回TRUE。  </li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基本语法</title>
      <link href="2019/06/10/html/"/>
      <url>2019/06/10/html/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。HTML可以用 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p><p>HTML 不是一种编程语言，而是一种<strong>标记</strong>语言，它使用一套标记标签(markup tag)来描述网页；HTML文档包含了HTML标签和文本内容，HTML文档也被称为web页面。  </p><h2 id="html-元素"><a href="#html-元素" class="headerlink" title="html 元素"></a>html 元素</h2><p>HTML文档由 <strong>HTML 元素</strong>定义。HTML元素包括：<strong>开始标签</strong>，<strong>元素内容</strong>，<strong>结束标签</strong>  </p><h3 id="HTML-元素语法"><a href="#HTML-元素语法" class="headerlink" title="HTML 元素语法"></a>HTML 元素语法</h3><ul><li>HTML 元素以<strong>开始标签</strong>起始</li><li>HTML 元素以<strong>结束标签</strong>终止</li><li><strong>元素的内容</strong>是开始标签与结束标签之间的内容</li><li>某些 HTML 元素具有<strong>空内容（empty content）</strong></li><li>空元素<strong>在开始标签中进行关闭</strong>（以开始标签的结束而结束）</li><li>大多数 HTML 元素可拥有<strong>属性</strong></li></ul><blockquote><p>HTML 文档是由嵌套的 HTML 元素构成的  </p></blockquote><h2 id="HTML-属性"><a href="#HTML-属性" class="headerlink" title="HTML 属性"></a>HTML 属性</h2><p>属性是 HTML 元素提供的附加信息。  </p><ul><li>HTML 元素可以设置<strong>属性</strong></li><li>属性可以在元素中添加<strong>附加信息</strong></li><li>属性一般描述于<strong>开始标签</strong></li><li>属性总是以名称/值对的形式出现，**比如：name=”value”**。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.runoob.com&quot;</span>&gt;</span>这是一个链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-标题"><a href="#HTML-标题" class="headerlink" title="HTML 标题"></a>HTML 标题</h2><p>在 HTML 文档中，标题很重要。标题（Heading）是通过 <code>&lt;h1&gt; - &lt;h6&gt;</code> 标签进行定义的.<code>&lt;h1&gt;</code> 定义最大的标题。 <code>&lt;h6&gt;</code> 定义最小的标题。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个标题。<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个标题。<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个标题。<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>请确保将 HTML 标题 标签<strong>只用于标题</strong>。不要仅仅是为了生成<strong>粗体</strong>或<strong>大号</strong>的文本而使用标题。  </p></blockquote><h3 id="HTML-水平线"><a href="#HTML-水平线" class="headerlink" title="HTML 水平线"></a>HTML 水平线</h3><p><code>&lt;hr&gt;</code>标签在 HTML 页面中创建水平线。  用于分隔内容。  </p><h3 id="HTML注释"><a href="#HTML注释" class="headerlink" title="HTML注释"></a>HTML注释</h3><p>可以将注释插入 HTML 代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也不会显示它们。</p><p>注释写法如下:  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是一个注释 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-段落"><a href="#HTML-段落" class="headerlink" title="HTML 段落"></a>HTML 段落</h2><p>段落是通过 <code>&lt;p&gt; </code>标签定义的。如果在不产生新段落的情况下换行需要使用<code>&lt;br&gt;</code>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个<span class="tag">&lt;<span class="name">br</span>&gt;</span>段落<span class="tag">&lt;<span class="name">br</span>&gt;</span>演示了分行的效果<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>&lt;br /&gt;</code>元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。  </p></blockquote><h2 id="HTML-格式化标签"><a href="#HTML-格式化标签" class="headerlink" title="HTML 格式化标签"></a>HTML 格式化标签</h2><h3 id="HTML-文本格式化标签"><a href="#HTML-文本格式化标签" class="headerlink" title="HTML 文本格式化标签"></a>HTML 文本格式化标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;b&gt;</code></td><td>定义粗体文本</td></tr><tr><td><code>&lt;em&gt;</code></td><td>定义着重文字</td></tr><tr><td><code>&lt;i&gt;</code></td><td>定义斜体字</td></tr><tr><td><code>&lt;small&gt;</code></td><td>定义小号字</td></tr><tr><td><code>&lt;strong&gt;</code></td><td>定义加重语气</td></tr><tr><td><code>&lt;sub&gt;</code></td><td>定义下标字</td></tr><tr><td><code>&lt;sup&gt;</code></td><td>定义上标字</td></tr><tr><td><code>&lt;ins&gt;</code></td><td>定义插入字</td></tr><tr><td><code>&lt;del&gt;</code></td><td>定义删除字</td></tr></tbody></table><h3 id="HTML-“计算机输出”-标签"><a href="#HTML-“计算机输出”-标签" class="headerlink" title="HTML “计算机输出” 标签"></a>HTML “计算机输出” 标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;code&gt;</code></td><td>定义计算机代码</td></tr><tr><td><code>&lt;kbd&gt;</code></td><td>定义键盘码</td></tr><tr><td><code>&lt;samp&gt;</code></td><td>定义计算机代码样本</td></tr><tr><td><code>&lt;var&gt;</code></td><td>定义变量</td></tr><tr><td><code>&lt;pre&gt;</code></td><td>定义预格式文本</td></tr></tbody></table><h3 id="HTML-引文-引用-及标签定义"><a href="#HTML-引文-引用-及标签定义" class="headerlink" title="HTML 引文, 引用, 及标签定义"></a>HTML 引文, 引用, 及标签定义</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;abbr&gt;</code></td><td>定义缩写</td></tr><tr><td><code>&lt;address&gt;</code></td><td>定义地址</td></tr><tr><td><code>&lt;bdo&gt;</code></td><td>定义文字方向</td></tr><tr><td><code>&lt;blockquote&gt;</code></td><td>定义长的引用</td></tr><tr><td><code>&lt;q&gt;</code></td><td>定义短的引用语</td></tr><tr><td><code>&lt;cite&gt;</code></td><td>定义引用、引证</td></tr><tr><td><code>&lt;dfn&gt;</code></td><td>定义一个定义项目</td></tr></tbody></table><h2 id="HTML头部信息"><a href="#HTML头部信息" class="headerlink" title="HTML头部信息"></a>HTML头部信息</h2><h3 id="HTML-lt-head-gt-元素"><a href="#HTML-lt-head-gt-元素" class="headerlink" title="HTML &lt;head&gt; 元素"></a>HTML <code>&lt;head&gt;</code> 元素</h3><p><code>&lt;head&gt;</code>元素包含了所有的头部标签元素。在 <code>&lt;head&gt;</code>元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。</p><p>可以添加在头部区域的元素标签为: <code>&lt;title&gt;</code>,<code> &lt;style&gt;</code>, <code>&lt;meta&gt;</code>, <code>&lt;link&gt;</code>,<code> &lt;script&gt;</code>,<code>&lt;noscript&gt;</code>, and <code>&lt;base&gt;</code>.  </p><h3 id="HTML-lt-title-gt-元素"><a href="#HTML-lt-title-gt-元素" class="headerlink" title="HTML &lt;title&gt; 元素"></a>HTML <code>&lt;title&gt;</code> 元素</h3><p><code>&lt;title&gt;</code> 标签定义了不同文档的标题，在HTML/XHTML 文档中是必须的。  </p><ul><li>定义了浏览器工具栏的标题</li><li>当网页添加到收藏夹时，显示在收藏夹中的标题</li><li>显示在搜索引擎结果页面的标题</li></ul><h3 id="HTML-lt-base-gt-元素"><a href="#HTML-lt-base-gt-元素" class="headerlink" title="HTML &lt;base&gt; 元素"></a>HTML <code>&lt;base&gt;</code> 元素</h3><p><code>&lt;base&gt;</code> 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接.  </p><h3 id="HTML-lt-link-gt-元素"><a href="#HTML-lt-link-gt-元素" class="headerlink" title="HTML &lt;link&gt; 元素"></a>HTML <code>&lt;link&gt;</code> 元素</h3><p><code>&lt;link&gt;</code> 标签定义了文档与外部资源之间的关系，通常用于链接到样式表.  </p><h3 id="HTML-lt-style-gt-元素"><a href="#HTML-lt-style-gt-元素" class="headerlink" title="HTML &lt;style&gt; 元素"></a>HTML <code>&lt;style&gt;</code> 元素</h3><p><code>&lt;style&gt;</code> 标签定义了HTML文档的样式文件引用地址，也可以直接添加样式来渲染 HTML 文档  </p><h3 id="HTML-lt-meta-gt-元素"><a href="#HTML-lt-meta-gt-元素" class="headerlink" title="HTML &lt;meta&gt; 元素"></a>HTML <code>&lt;meta&gt;</code> 元素</h3><p><code>&lt;meta&gt;</code> 标签提供了元数据.<strong>元数据也不显示在页面上，但会被浏览器解析</strong>。META 元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。<code>&lt;meta&gt;</code> 一般放置于 <code>&lt;head&gt;</code> 区域  </p><h3 id="HTML-lt-script-gt-元素"><a href="#HTML-lt-script-gt-元素" class="headerlink" title="HTML &lt;script&gt; 元素"></a>HTML <code>&lt;script&gt;</code> 元素</h3><p><code>&lt;script&gt;</code>标签用于加载脚本文件，如： JavaScript  </p><h3 id="HTML-head-元素汇总"><a href="#HTML-head-元素汇总" class="headerlink" title="HTML head 元素汇总"></a>HTML head 元素汇总</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;head&gt;</code></td><td>定义了文档的信息</td></tr><tr><td><code>&lt;title&gt;</code></td><td>定义了文档的标题</td></tr><tr><td><code>&lt;base&gt;</code></td><td>定义了页面链接标签的默认链接地址</td></tr><tr><td><code>&lt;link&gt;</code></td><td>定义了一个文档和外部资源之间的关系</td></tr><tr><td><code>&lt;meta&gt;</code></td><td>定义了HTML文档中的元数据</td></tr><tr><td><code>&lt;script&gt;</code></td><td>定义了客户端的脚本文件</td></tr><tr><td><code>&lt;style&gt;</code></td><td>定义了HTML文档的样式文件</td></tr></tbody></table><h2 id="HTML-样式-CSS"><a href="#HTML-样式-CSS" class="headerlink" title="HTML 样式- CSS"></a>HTML 样式- CSS</h2><p>CSS (Cascading Style Sheets) 用于渲染HTML元素标签的样式.CSS 可以通过以下方式添加到HTML中:  </p><ul><li>内联样式- 在HTML元素中使用”style” <strong>属性</strong></li><li>内部样式表 -在HTML文档头部 <code>&lt;head&gt;</code> 区域使用<code>&lt;style&gt;</code> <strong>元素</strong> 来包含CSS</li><li>外部引用 - 使用外部 CSS <strong>文件</strong></li></ul><blockquote><p>使用CSS最好的方式是通过外部引用CSS文件.</p></blockquote><h2 id="HTML-图像"><a href="#HTML-图像" class="headerlink" title="HTML 图像"></a>HTML 图像</h2><p>在 HTML 中，图像由<code>&lt;img&gt;</code> 标签定义。<code>&lt;img&gt;</code> 是空标签，意思是说，它只包含属性，并且没有闭合标签。  </p><blockquote><p>空格<code>&lt;br&gt;</code>也是没有闭合标签的  </p></blockquote><p>定义图像的一般语法：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;some_text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Alt属性"><a href="#Alt属性" class="headerlink" title="Alt属性"></a>Alt属性</h3><p>alt 属性用来为图像定义一串预备的可替换的文本。在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。此时，浏览器将显示这个替代性的文本而不是图像。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;boat.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Big Boat&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="设置图像的高度与宽度"><a href="#设置图像的高度与宽度" class="headerlink" title="设置图像的高度与宽度"></a>设置图像的高度与宽度</h3><p>height（高度） 与 width（宽度）属性用于设置图像的高度与宽度。</p><p>属性值默认单位为像素:  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;pulpit.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Pulpit rock&quot;</span> <span class="attr">width</span>=<span class="string">&quot;304&quot;</span> <span class="attr">height</span>=<span class="string">&quot;228&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-表格"><a href="#HTML-表格" class="headerlink" title="HTML 表格"></a>HTML 表格</h2><p>表格由 <code>&lt;table&gt;</code> 标签来定义。每个表格均有若干行（由 <code>&lt;tr&gt;</code> 标签定义），每行被分割为若干单元格（由<code>&lt;td&gt;</code> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。  </p><p>表格的表头使用 <code>&lt;th&gt;</code> 标签进行定义。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table border="1">    <tr>        <th>Header 1</th>        <th>Header 2</th>    </tr>    <tr>        <td>row 1, cell 1</td>        <td>row 1, cell 2</td>    </tr>    <tr>        <td>row 2, cell 1</td>        <td>row 2, cell 2</td>    </tr></table><blockquote><p>大多数浏览器会把表头显示为粗体居中的文本  </p></blockquote><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;table&gt;</code></td><td>定义表格</td></tr><tr><td><code>&lt;th&gt;</code></td><td>定义表格的表头</td></tr><tr><td><code>&lt;tr&gt;</code></td><td>定义表格的行</td></tr><tr><td><code>&lt;td&gt;</code></td><td>定义表格单元格</td></tr><tr><td><code>&lt;caption&gt;</code></td><td>定义表格标题</td></tr><tr><td><code>&lt;colgroup&gt;</code></td><td>定义表格列的组</td></tr><tr><td><code>&lt;col&gt;</code></td><td>定义用于表格列的属性</td></tr><tr><td><code>&lt;thead&gt;</code></td><td>定义表格的页眉</td></tr><tr><td><code>&lt;tbody&gt;</code></td><td>定义表格的主体</td></tr><tr><td><code>&lt;tfoot&gt;</code></td><td>定义表格的页脚</td></tr></tbody></table><h2 id="HTML-列表"><a href="#HTML-列表" class="headerlink" title="HTML 列表"></a>HTML 列表</h2><h3 id="HTML无序列表"><a href="#HTML无序列表" class="headerlink" title="HTML无序列表"></a>HTML无序列表</h3><p>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。</p><p>无序列表使用 <code>&lt;ul&gt;</code> 标签  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Coffee</li><li>Milk</li></ul><h3 id="HTML-有序列表"><a href="#HTML-有序列表" class="headerlink" title="HTML 有序列表"></a>HTML 有序列表</h3><p>有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于 <code>&lt;ol&gt;</code> 标签。每个列表项始于 <code>&lt;li&gt;</code> 标签。列表项使用数字来标记。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Coffee</li><li>Milk</li></ol><h3 id="HTML-自定义列表"><a href="#HTML-自定义列表" class="headerlink" title="HTML 自定义列表"></a>HTML 自定义列表</h3><p>自定义列表不仅仅是一列项目，而是项目及其注释的组合。</p><p>自定义列表以 <code>&lt;dl&gt;</code> 标签开始。每个自定义列表项以 <code>&lt;dt&gt;</code> 开始。每个自定义列表项的定义以 <code>&lt;dd&gt;</code> 开始。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>- black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>- white cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><dl><dt>Coffee</dt><dd>- black hot drink</dd><dt>Milk</dt><dd>- white cold drink</dd></dl><h2 id="HTML-区块"><a href="#HTML-区块" class="headerlink" title="HTML 区块"></a>HTML 区块</h2><p>大多数 HTML 元素被定义为<strong>块级元素</strong>或<strong>内联元素</strong>。</p><p><strong>块级元素</strong>在浏览器显示时，通常会以新行来开始（和结束）。（如：<code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;table&gt;</code>）</p><p><strong>内联元素</strong>在显示时通常不会以新行开始。（如：<code>&lt;b&gt;</code>, <code>&lt;td&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;img&gt;</code>）  </p><p><strong><code>&lt;div&gt;</code> 元素是块级元素</strong>，它可用于组合其他 HTML 元素的容器。<code>&lt;div&gt;</code> 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。如果与 CSS 一同使用，<code>&lt;div&gt;</code> 元素可用于对大的内容块设置样式属性。  </p><p><strong><code>&lt;span&gt;</code> 元素是内联元素</strong>，可用作文本的容器。<code>&lt;span&gt;</code> 元素也没有特定的含义。当与 CSS 一同使用时，<code>&lt;span&gt;</code> 元素可用于为部分文本设置样式属性。  </p><h2 id="HTML-布局"><a href="#HTML-布局" class="headerlink" title="HTML 布局"></a>HTML 布局</h2><p>大多数网站可以使用 <code>&lt;div&gt;</code> 或者 <code>&lt;table&gt;</code> 元素来创建多列。CSS 用于对元素进行定位，或者为页面创建背景以及色彩丰富的外观。  </p><p>例如：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;maxname&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:500px;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hname&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#666FFF;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom:0;text-align:center;&quot;</span>&gt;</span>Div布局实例<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#FFFFFF;height:200px;width:100px;float:left;&quot;</span>&gt;</span>    </span><br><span class="line">          菜单<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">          num1<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">          num2<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">          num3</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#FFFF00;height:200px;width:300px;float:left;&quot;</span>&gt;</span></span><br><span class="line">        中间信息</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#000000;color:#FFFFFF;height:200px;width:100px;float:right;&quot;</span>&gt;</span></span><br><span class="line">          右侧信息</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bool&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#F0F8FF;clear:both;text-align:center;&quot;</span>&gt;</span></span><br><span class="line">        整体布局测试</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><html><head><meta charset="utf-8"><title>Demo</title></head><body>    <div id="maxname" style="width:500px;">      <div id="hname" style="background-color:#666FFF;">        <h1 style="margin-bottom:0;text-align:center;">Div布局实例</h1>      </div>      <div id="menu" style="background-color:#FFFFFF;height:200px;width:100px;float:left;">              菜单<br/>          num1<br/>          num2<br/>          num3      </div>      <div id="content" style="background-color:#FFFF00;height:200px;width:300px;float:left;">        中间信息      </div>      <div id="right" style="background-color:#000000;color:#FFFFFF;height:200px;width:100px;float:right;">          右侧信息      </div>      <div id="bool" style="background-color:#F0F8FF;clear:both;text-align:center;">        整体布局测试      </div>  </div></body></html><h2 id="HTML-表单"><a href="#HTML-表单" class="headerlink" title="HTML 表单"></a>HTML 表单</h2><p>表单是一个包含表单元素的区域。</p><p>表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。  </p><p>表单的构建用<code>&lt;form&gt;</code>元素  </p><h3 id="输入元素"><a href="#输入元素" class="headerlink" title="输入元素"></a>输入元素</h3><p>多数情况下被用到的表单标签是输入标签（<code>&lt;input&gt;</code>）。输入类型是由类型属性（type）定义的。  </p><h4 id="文本域（Text-Fields）"><a href="#文本域（Text-Fields）" class="headerlink" title="文本域（Text Fields）"></a>文本域（Text Fields）</h4><p>文本域通过<code>&lt;input type=&quot;text&quot;&gt;</code> 标签来设定，用户可以在表单中键入字母、数字等内容  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">First name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form>First name: <input type="text" name="firstname"><br>Last name: <input type="text" name="lastname"></form><h4 id="密码字段"><a href="#密码字段" class="headerlink" title="密码字段"></a>密码字段</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">Password: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form>Password: <input type="password" name="pwd"></form><h4 id="单选按钮（Radio-Buttons）"><a href="#单选按钮（Radio-Buttons）" class="headerlink" title="单选按钮（Radio Buttons）"></a>单选按钮（Radio Buttons）</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>Male<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>Female</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><input type="radio" name="sex" value="male">Male<br><input type="radio" name="sex" value="female">Female</form><h4 id="复选框（Checkboxes）"><a href="#复选框（Checkboxes）" class="headerlink" title="复选框（Checkboxes）"></a>复选框（Checkboxes）</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;vehicle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Bike&quot;</span>&gt;</span>I have a bike<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;vehicle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Car&quot;</span>&gt;</span>I have a car </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><input type="checkbox" name="vehicle" value="Bike">I have a bike<br><input type="checkbox" name="vehicle" value="Car">I have a car </form><h4 id="提交按钮-Submit-Button"><a href="#提交按钮-Submit-Button" class="headerlink" title="提交按钮(Submit Button)"></a>提交按钮(Submit Button)</h4><p><code>&lt;input type=&quot;submit&quot;&gt;</code> 定义了提交按钮. 当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。:  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span> <span class="attr">action</span>=<span class="string">&quot;html_form_action.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form name="input" action="html_form_action.php" method="get">Username: <input type="text" name="user"><input type="submit" value="Submit"></form><h3 id="HTML-表单标签"><a href="#HTML-表单标签" class="headerlink" title="HTML 表单标签"></a>HTML 表单标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;form&gt;</code></td><td>定义供用户输入的表单</td></tr><tr><td><code>&lt;input&gt;</code></td><td>定义输入域</td></tr><tr><td><code>&lt;textarea&gt;</code></td><td>定义文本域 (一个多行的输入控件)</td></tr><tr><td><code>&lt;label&gt;</code></td><td>定义了 <code>&lt;input&gt;</code> 元素的标签，一般为输入标题</td></tr><tr><td><code>&lt;filedset&gt;</code></td><td>定义了一组相关的表单元素，并使用外框包含起来</td></tr><tr><td><code>&lt;legend&gt;</code></td><td>定义了 <code>&lt;fieldset&gt;</code> 元素的标题</td></tr><tr><td><code>&lt;select&gt;</code></td><td>定义了下拉选项列表</td></tr><tr><td><code>&lt;optgroup&gt;</code></td><td>定义选项组</td></tr><tr><td><code>&lt;option&gt;</code></td><td>定义下拉列表中的选项</td></tr><tr><td><code>&lt;button&gt;</code></td><td>定义一个点击按钮</td></tr><tr><td><code>&lt;datalist&gt;</code></td><td>指定一个预先定义的输入控件选项列表</td></tr><tr><td><code>keygen</code></td><td>定义了表单的密钥对生成器字段</td></tr><tr><td><code>&lt;output&gt;</code></td><td>定义一个计算结果</td></tr></tbody></table><h2 id="HTML-框架"><a href="#HTML-框架" class="headerlink" title="HTML 框架"></a>HTML 框架</h2><p>通过使用框架，你可以在同一个浏览器窗口中镶嵌其他页面。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;demo_iframe.htm&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-脚本"><a href="#HTML-脚本" class="headerlink" title="HTML 脚本"></a>HTML 脚本</h2><p><code>&lt;script&gt;</code> 标签用于定义客户端脚本，比如 JavaScript。<code>&lt;script&gt;</code> 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。<code>&lt;noscript&gt;</code> 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。<code>&lt;noscript&gt;</code>元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&quot;Hello World!&quot;</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.runoob.com/html/html-tutorial.html">菜鸟教程</a></p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的字符标准化方法</title>
      <link href="2019/06/09/chara-py/"/>
      <url>2019/06/09/chara-py/</url>
      
        <content type="html"><![CDATA[<p>&ensp;&ensp; 字符串格式化用于解决字符串和变量同时输出时的格式安排。Python中有str.format()，format()和%三种格式控制的方法，但主要采用str.format()方法进行字符串的格式化。  </p><h2 id="str-format-方法"><a href="#str-format-方法" class="headerlink" title="str.format()方法"></a><code>str.format()</code>方法</h2><p><code>str.format()</code>方法的基本使用格式：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;模板字符串&gt;.format(&lt;由逗号分隔的参数&gt;)</span><br></pre></td></tr></table></figure><p>其中模板字符串是由一系列的槽({})组成，用来控制修改字符串中嵌入值出现的位置，基本思路：将<code>str.format()</code>方法中逗号分隔的参数按照序号关系替换到模板字符串的槽中，槽用大括号({})来表示，如果大括号中没有序号，则按照出现顺序替换。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#123;1&#125; &#123;0&#125;&#x27;</span>.format(<span class="string">&#x27;abc&#x27;</span>, <span class="number">123</span>)  <span class="comment"># 可以不按顺序进行位置映射，输出&#x27;123 abc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#123;&#125; &#123;&#125;&#x27;</span>.format(<span class="string">&#x27;abc&#x27;</span>, <span class="number">123</span>)  <span class="comment"># 可以不指定参数名称，输出&#x27;abc 123&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：序号是从0开始，而不是1。  </p></blockquote><p>槽的内部格式为：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&lt;参数序号&gt;：&lt;格式控制标记&gt;&#125;</span><br></pre></td></tr></table></figure><p>在复杂格式控制方面，format函数也提供了强大的控制方式，它的格式为：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; : [[填充字符]对齐方式][符号标志][#][宽度][,][.精度][类型] &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">:</td><td align="center">引导符号，分割参数序号和格式控制标记</td></tr><tr><td align="center">填充字符</td><td align="center">用于填充的单个字符，不填时默认为空格</td></tr><tr><td align="center">对齐方式</td><td align="center"><code>&lt;</code>左对齐，<code>&gt;</code>右对齐，<code>^</code>居中，不足部分会用填充字符填充</td></tr><tr><td align="center">符号标志</td><td align="center"><code>+</code>表示有符号（正数前显示+，负数前显示-），空格表示正数前加空格来和负数对齐</td></tr><tr><td align="center">#</td><td align="center">表示是否在二、八、十六进制前显示0b、0o、0x等符号</td></tr><tr><td align="center">宽度</td><td align="center">输出字符串的宽度，不足部分自动用填充字符补齐</td></tr><tr><td align="center">,</td><td align="center">英文状态下的逗号，数字的千分位分隔符，适用于整数和浮点数</td></tr><tr><td align="center">精度</td><td align="center">浮点数小数部分的精度</td></tr><tr><td align="center">类型</td><td align="center">整数类型b，c，d，o，x，X，浮点数类型e，E，f，%</td></tr></tbody></table><p>举例如下：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#123;:S^+#016,.2f&#125;&#x27;</span>.format(<span class="number">1234</span>)  <span class="comment"># 输出&#x27;SSS+1,234.00SSSS&#x27;</span></span><br></pre></td></tr></table></figure><p>整数类型输出格式有6种：</p><ul><li>b：输出整数的二进制形式。</li><li>c：输出整数对应的Unicode字符。</li><li>d：输出整数的十进制形式。</li><li>o：输出整数的八进制形式。</li><li>x：输出整数的小写十六进制形式。</li><li>X：输出整数的大写十六进制形式。  </li></ul><p>浮点数类型输出格式有4种：</p><ul><li>e：输出浮点数对应的小写字母e的指数形式。</li><li>E：输出浮点数对应的小写字母e的指数形式。</li><li>f：输出浮点数的标准浮点形式。</li><li>%：输出浮点数的百分形式。  </li></ul><h2 id="format方法"><a href="#format方法" class="headerlink" title="format方法"></a><code>format</code>方法</h2><p><code>format()</code>方法和<code>str.format()</code>方法用法差不多，只不过，<code>format()</code>方法中槽的内部只有格式控制标记，没有参数序号和引导符号。  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>format(<span class="string">&#x27;aksfhakefhk&#x27;</span>,<span class="string">&#x27;&lt;20&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;aksfhakefhk  </span></span><br><span class="line"><span class="string">&gt;&gt;&gt; format(&#x27;</span>lfajlajl<span class="string">&#x27;, &#x27;</span>*&gt;<span class="number">30</span><span class="string">&#x27;)    # 右对齐，填充*</span></span><br><span class="line"><span class="string">&#x27;</span>**********************lfajlajl<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="f-string方法"><a href="#f-string方法" class="headerlink" title="f-string方法"></a><code>f-string</code>方法</h2><p>f-string就是以f’’开头的字符串，字符串内容和format方法中的格式一样，但是可以直接将变量带入到字符串中，可读性进一步增加，例如：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">amount = <span class="number">1234</span></span><br><span class="line"><span class="string">f&#x27;请转账给我<span class="subst">&#123;amount:,<span class="number">.2</span>f&#125;</span>元&#x27;</span>  <span class="comment"># &#x27;请转账给我1,234.00元&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="%方法"></a><code>%</code>方法</h2><p>%方法类似于C和Fortran语言中的格式化输入输出，%s表示格式化为字符串，%d表示格式化为数字。  </p><p>例如：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;I&#x27;m %s. I&#x27;m %d year old&quot;</span> % (<span class="string">&#x27;jeason&#x27;</span>, <span class="number">23</span>))</span><br></pre></td></tr></table></figure><p>格式化字符串时，Python使用一个字符串作为<strong>模板</strong>。模板中有<strong>格式符</strong>，这些格式符为真实值预留位置，并说明真实数值应该呈现的格式。Python用一个tuple将多个值传递给模板，每个值对应一个格式符。在模板和tuple之间，有一个%号分隔，它代表了<strong>格式化操作</strong>  </p><p>格式符为真实值预留位置，并控制显示的格式。格式符可以包含有一个类型码，用以控制显示的类型，如下:  </p><table><thead><tr><th align="center">格式符</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">%s</td><td align="center">字符串 (采用str()的显示)</td></tr><tr><td align="center">%r</td><td align="center">字符串 (采用repr()的显示)</td></tr><tr><td align="center">%c</td><td align="center">单个字符</td></tr><tr><td align="center">%b</td><td align="center">二进制整数</td></tr><tr><td align="center">%d</td><td align="center">十进制整数</td></tr><tr><td align="center">%i</td><td align="center">十进制整数</td></tr><tr><td align="center">%o</td><td align="center">八进制整数</td></tr><tr><td align="center">%x</td><td align="center">十六进制整数</td></tr><tr><td align="center">%e</td><td align="center">指数 (基底写为e)</td></tr><tr><td align="center">%E</td><td align="center">指数 (基底写为E)</td></tr><tr><td align="center">%f</td><td align="center">浮点数</td></tr><tr><td align="center">%F</td><td align="center">浮点数，与上相同</td></tr><tr><td align="center">%g</td><td align="center">指数(e)或浮点数 (根据显示长度)</td></tr><tr><td align="center">%G</td><td align="center">指数(E)或浮点数 (根据显示长度)</td></tr><tr><td align="center">%%</td><td align="center">字符”%”</td></tr></tbody></table><p>除了对数据类型的指定，%操作符也支持更复杂的格式控制：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%[数据名称][对齐标志][宽度].[精度]类型</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">数据名称</td><td align="center">数据名称用于字典赋值，如果不是就不用写</td></tr><tr><td align="center">对齐标志</td><td align="center">可以有+,-,’ ‘或0。+表示右对齐。-表示左对齐。’ ‘为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。0表示使用0填充。</td></tr><tr><td align="center">宽度</td><td align="center">格式化后的字符长度，如果不够用0或者空格补齐</td></tr><tr><td align="center">精度</td><td align="center">小数点后的位数</td></tr><tr><td align="center">类型</td><td align="center">数据类型</td></tr></tbody></table><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.cnblogs.com/vamei/archive/2013/03/12/2954938.html">Python补充05 字符串格式化 (%操作符)</a>  </p><p><a href="https://www.zhouzying.cn/84.html">python中的字符串的格式化</a>  </p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基本数据类型</title>
      <link href="2019/06/09/dataformat/"/>
      <url>2019/06/09/dataformat/</url>
      
        <content type="html"><![CDATA[<h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><ul><li>Number（数字）  </li><li>String（字符串）  </li><li>List（列表）  </li><li>Tuple（元组）  </li><li>Set（集合）  </li><li>Dictionary（字典）  </li></ul><blockquote><p>不可变数据（3 个）：Number（数字）、String（字符串）、Tuple（元组）<br>可变数据（3 个）：List（列表）、Dictionary（字典）、Set（集合）  </p></blockquote><h4 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h4><p>Python3 支持 int、float、bool、complex（复数）。  </p><p>内置的 <code>type()</code> 函数可以用来查询变量所指的对象类型。 <code>isinstance()</code> 用来判断数据类型  </p><blockquote><p>isinstance 和 type 的区别在于:  </p><ul><li><code>type()</code> 不会认为子类是一种父类类型  </li><li><code>isinstance()</code> 会认为子类是一种父类类型  </li></ul></blockquote><h4 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h4><p>Python中的字符串用单引号 <code>&#39;</code> 或双引号 <code>&quot;</code> 括起来，同时使用反斜杠 <code>\</code> 转义特殊字符。  </p><p>Python 使用反斜杠(<code>\</code>)转义特殊字符，如果你不想让反斜杠发生转义，可以在字符串前面添加一个 <code>r</code> ，表示原始字符串   </p><p>另外，反斜杠(<code>\</code>)可以作为续行符，表示下一行是上一行的延续。也可以使用 <code>&quot;&quot;&quot;...&quot;&quot;&quot;</code> 或者 <code>&#39;&#39;&#39;...&#39;&#39;&#39;</code> 跨越多行。  </p><p><strong>注意</strong>，Python 没有单独的字符类型，一个字符就是长度为1的字符串。  </p><blockquote><ol><li>反斜杠可以用来转义，使用r可以让反斜杠不发生转义。  </li><li>字符串可以用+运算符连接在一起，用*运算符重复。  </li><li>Python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始。  </li><li>Python中的字符串不能改变。  </li></ol></blockquote><h4 id="List（列表）"><a href="#List（列表）" class="headerlink" title="List（列表）"></a>List（列表）</h4><p>列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。  </p><p>列表是写在方括号 [] 之间、用逗号分隔开的元素列表。  </p><p>列表索引：<br><img src="/images/dataformat/list_slicing1.png" alt="list_slicing1"></p><p>与Python字符串不一样的是，列表中的元素是可以改变的。  </p><blockquote><ol><li>List写在方括号之间，元素用逗号隔开。  </li><li>和字符串一样，list可以被索引和切片。  </li><li>List可以使用+操作符进行拼接。  </li><li>List中的元素是可以改变的。  </li></ol></blockquote><h4 id="Tuple（元组）"><a href="#Tuple（元组）" class="headerlink" title="Tuple（元组）"></a>Tuple（元组）</h4><p>元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号 <code>()</code> 里，元素之间用逗号隔开。元组中的元素类型也可以不相同。  </p><p>虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。  </p><p>string、list 和 tuple 都属于 sequence（序列）。</p><p><strong>注意</strong>：</p><ol><li>与字符串一样，元组的元素不能修改。  </li><li>元组也可以被索引和切片，方法一样。  </li><li>注意构造包含 0 或 1 个元素的元组的特殊语法规则。  </li><li>元组也可以使用+操作符进行拼接。  </li></ol><h4 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h4><p>集合（set）是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员，是一个无序的不重复元素序列。  </p><p>基本功能是进行成员关系测试和删除重复元素。  </p><p>可以使用大括号 <code>&#123; &#125;</code> 或者 <code>set()</code> 函数创建集合，注意：创建一个空集合必须用 <code>set()</code> 而不是 <code>&#123; &#125;</code>，因为 <code>&#123; &#125;</code> 是用来创建一个空字典。  </p><h4 id="Dictionary（字典）"><a href="#Dictionary（字典）" class="headerlink" title="Dictionary（字典）"></a>Dictionary（字典）</h4><p>字典（dictionary）是Python中另一个非常有用的内置数据类型。  </p><p>列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。  </p><p>字典是一种映射类型，字典用 { } 标识，它是一个无序的 键(key) : 值(value) 的集合。  </p><p>键(key)必须使用不可变类型。  </p><p>在同一个字典中，键(key)必须是唯一的。  </p><blockquote><ol><li>字典是一种映射类型，它的元素是键值对。  </li><li>字典的关键字必须为不可变类型，且不能重复。  </li><li>创建空字典使用 <code>&#123; &#125;</code>。  </li></ol></blockquote><h3 id="Python数据类型转换"><a href="#Python数据类型转换" class="headerlink" title="Python数据类型转换"></a>Python数据类型转换</h3><p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。  </p><p>以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。  </p><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>int(x [,base])</code></td><td align="center">将x转换为一个整数</td></tr><tr><td align="center"><code>float(x)</code></td><td align="center">将x转换到一个浮点数</td></tr><tr><td align="center"><code>complex(real [,imag])</code></td><td align="center">创建一个复数</td></tr><tr><td align="center"><code>str(x)</code></td><td align="center">将对象 x 转换为字符串</td></tr><tr><td align="center"><code>repr(x)</code></td><td align="center">将对象 x 转换为表达式字符串</td></tr><tr><td align="center"><code>eval(str)</code></td><td align="center">用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td align="center"><code>tuple(s)</code></td><td align="center">将序列 s 转换为一个元组</td></tr><tr><td align="center"><code>list(s)</code></td><td align="center">将序列 s 转换为一个列表</td></tr><tr><td align="center"><code>set(s)</code></td><td align="center">转换为可变集合</td></tr><tr><td align="center"><code>dict(d)</code></td><td align="center">创建一个字典。d 必须是一个序列 (key,value)元组。</td></tr><tr><td align="center"><code>frozenset(s)</code></td><td align="center">转换为不可变集合</td></tr><tr><td align="center"><code>chr(x)</code></td><td align="center">将一个整数转换为一个字符</td></tr><tr><td align="center"><code>ord(x)</code></td><td align="center">将一个字符转换为它的整数值</td></tr><tr><td align="center"><code>hex(x)</code></td><td align="center">将一个整数转换为一个十六进制字符串</td></tr><tr><td align="center"><code>oct(x)</code></td><td align="center">将一个整数转换为一个八进制字符串</td></tr></tbody></table><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><p>加（<code>+</code>）、减（<code>-</code>）、乘（<code>*</code>）、除（<code>/</code>）、取余（<code>%</code>）、乘幂（<code>**</code>）、向下整除（<code>//</code>）  </p><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p>等于（<code>==</code>）、不等于（<code>!=</code>）、大于（<code>&gt;</code>）、小于（<code>&lt;</code>）、大于等于（<code>&gt;=</code>）、小于等于（<code>&lt;=</code>）  </p><blockquote><p>返回布尔值：<strong>TRUE</strong>或<strong>FALSE</strong>  </p></blockquote><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">=</td><td align="center">简单的赋值运算符</td><td align="center">c = a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td align="center">+=</td><td align="center">加法赋值运算符</td><td align="center">c += a 等效于 c = c + a</td></tr><tr><td align="center">-=</td><td align="center">减法赋值运算符</td><td align="center">c -= a 等效于 c = c - a</td></tr><tr><td align="center">*=</td><td align="center">乘法赋值运算符</td><td align="center">c *= a 等效于 c = c * a</td></tr><tr><td align="center">/=</td><td align="center">除法赋值运算符</td><td align="center">c /= a 等效于 c = c / a</td></tr><tr><td align="center">%=</td><td align="center">取模赋值运算符</td><td align="center">c %= a 等效于 c = c % a</td></tr><tr><td align="center">**=</td><td align="center">幂赋值运算符</td><td align="center">c **= a 等效于 c = c ** a</td></tr><tr><td align="center">//=</td><td align="center">取整除赋值运算符</td><td align="center">c //= a 等效于 c = c // a</td></tr></tbody></table><h4 id="按位运算符"><a href="#按位运算符" class="headerlink" title="按位运算符"></a>按位运算符</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">&amp;</td><td align="center">按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</td><td align="center">(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100</td></tr><tr><td align="center"></td><td align="center">按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</td><td align="center">(a</td></tr><tr><td align="center">^</td><td align="center">按位异或运算符：当两对应的二进位相异时，结果为1</td><td align="center">(a ^ b) 输出结果 49 ，二进制解释： 0011 0001</td></tr><tr><td align="center">~</td><td align="center">按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。<code>~x</code> 类似于 <code>-x-1</code></td><td align="center">(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。</td></tr><tr><td align="center">&lt;&lt;</td><td align="center">左移动运算符：运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补0。</td><td align="center">a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数</td><td align="center">a &gt;&gt; 2  输出结果 15 ，二进制解释： 0000 1111</td></tr></tbody></table><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><table><thead><tr><th align="center">运算符</th><th align="center">逻辑表达式</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">and</td><td align="center">x and y</td><td align="center">布尔”与” - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td></tr><tr><td align="center">or</td><td align="center">x or y</td><td align="center">布尔”或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td></tr><tr><td align="center">not</td><td align="center">not x</td><td align="center">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td></tr></tbody></table><h4 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">in</td><td align="center">如果在指定的序列中找到值返回 True，否则返回 False。</td><td align="center">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td></tr><tr><td align="center">not in</td><td align="center">如果在指定的序列中没有找到值返回 True，否则返回 False。</td><td align="center">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td></tr></tbody></table><h4 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h4><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例</th></tr></thead><tbody><tr><td align="center">is</td><td align="center">is 是判断两个标识符是不是引用自一个对象</td><td align="center">x is y, 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False</td></tr><tr><td align="center">is not</td><td align="center">is not 是判断两个标识符是不是引用自不同对象</td><td align="center">x is not y ， 类似 id(a) != id(b)。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td></tr></tbody></table><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p>运算符由高到低优先级为：  </p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">**</td><td align="center">指数 (最高优先级)</td></tr><tr><td align="center">~ + -</td><td align="center">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td align="center">* / % //</td><td align="center">乘，除，取模和取整除</td></tr><tr><td align="center">+ -</td><td align="center">加法减法</td></tr><tr><td align="center">&gt;&gt; &lt;&lt;</td><td align="center">右移，左移运算符</td></tr><tr><td align="center">&amp;</td><td align="center">位 ‘AND’</td></tr><tr><td align="center">^ `</td><td align="center">`</td></tr><tr><td align="center">&lt;= &lt; &gt; &gt;=</td><td align="center">比较运算符</td></tr><tr><td align="center">&lt;&gt; == !=</td><td align="center">等于运算符</td></tr><tr><td align="center">= %= /= //= -= += *= **=</td><td align="center">赋值运算符</td></tr><tr><td align="center">is is not</td><td align="center">身份运算符</td></tr><tr><td align="center">in not in</td><td align="center">成员运算符</td></tr><tr><td align="center">and or not</td><td align="center">逻辑运算符</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typeof class mode storage.mode 的区别</title>
      <link href="2019/05/31/typeof/"/>
      <url>2019/05/31/typeof/</url>
      
        <content type="html"><![CDATA[<h2 id="typeof-class-mode-storage-mode-的区别"><a href="#typeof-class-mode-storage-mode-的区别" class="headerlink" title="typeof class mode storage.mode 的区别"></a><code>typeof</code> <code>class</code> <code>mode</code> <code>storage.mode</code> 的区别</h2><h3 id="class"><a href="#class" class="headerlink" title="class"></a><code>class</code></h3><p>根据 <code>class</code> 函数的帮助文档可知：  </p><blockquote><p>R possesses a simple generic function mechanism which can be used for an object-oriented style of programming. Method dispatch takes place based on the class of the first argument to the generic function.  </p></blockquote><p><code>class</code> 给出的是一个对象的抽象类型（也可以理解为对象的特定属性），主要针对的是R中的泛型函数，用于泛型函数的参数识别  </p><blockquote><p>可以这样理解：R是一种基于对象(object)的语言，R中的所有内容都是对象，每个对象都有不同的属性（attribute），而对象最重要的属性是他们的类型（class），决定了对象在R中可以进行什么样的操作  </p></blockquote><p>正常情况下，对于一般的R对象，如果没有类属性（class），那么它肯定有一个隐式的类属性（class），而隐式属性是类似于 <code>mode</code> 的结果  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a &lt;- <span class="number">1</span> <span class="comment"># numeric</span></span><br><span class="line">class(a) <span class="comment"># 显示隐式类属性</span></span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;numeric&quot;</span></span><br><span class="line">attributes(a) <span class="comment"># attributes查看属性，不能看到隐式类属性</span></span><br><span class="line"><span class="literal">NULL</span></span><br><span class="line">a &lt;- structure(a, class = <span class="string">&quot;a&quot;</span>) <span class="comment"># 赋予显式类属性  </span></span><br><span class="line">class(a)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line">attributes(a) <span class="comment"># attributes查看属性，可以看到显式类属性</span></span><br><span class="line">$class</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：<code>NULL</code> 对象是没有属性的，并且也不能对它赋予任何属性  </p><blockquote><p><code>inherits</code> 函数用来判断对象是否具有某一类属性（class）  </p></blockquote><h4 id="基本类型情况"><a href="#基本类型情况" class="headerlink" title="基本类型情况"></a>基本类型情况</h4><ul><li>对于单个值或者向量，<code>class</code> 返回隐式属性（与 <code>mode</code> 结果一致）；如：numeric，character  </li><li>对于矩阵，数组，日期，因子，<code>class</code> 返回matrix，array，Date，factor  </li><li>对于数据框，<code>class</code> 返回data.frame  </li><li>对于列表，<code>class</code> 返回list  </li></ul><h3 id="mode-storage-mode-typeof"><a href="#mode-storage-mode-typeof" class="headerlink" title="mode storage.mode typeof"></a><code>mode</code> <code>storage.mode</code> <code>typeof</code></h3><p><code>mode</code>、 <code>storage.mode</code>、 <code>typeof</code> 是同一类别的函数，它们识别的是<strong>对象在内存中的存储类型</strong>，即返回的是R中的<strong>基本数据类型</strong>  </p><blockquote><p>R中的基本数据类型：”logical”, “integer”, “double”, “complex”, “raw”,”character”, “list”, “expression”, “name”, “symbol” 和 “function”  </p></blockquote><p>对于 <code>mode</code>、 <code>storage.mode</code>、 <code>typeof</code> 三个函数来说，mode 是比较旧的版本，typeof 是更新的、也是更细的一种形式；三个函数检测的精细程度为：<code>mode</code> &gt; <code>storage.mode</code> &gt; <code>typeof</code>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mode(<span class="number">1</span>:<span class="number">5</span>) <span class="comment"># numeric</span></span><br><span class="line">storage.mode(<span class="number">1</span>:<span class="number">5</span>) <span class="comment"># integer</span></span><br><span class="line">typeof(<span class="number">1</span>:<span class="number">5</span>) <span class="comment"># integer</span></span><br><span class="line"></span><br><span class="line">mode(`+`) <span class="comment"># function</span></span><br><span class="line">storage.mode(`+`) <span class="comment"># function</span></span><br><span class="line">typeof(`+`) <span class="comment"># builtin</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言高级程序设计</title>
      <link href="2019/05/27/advanceR/"/>
      <url>2019/05/27/advanceR/</url>
      
        <content type="html"><![CDATA[<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>R 语言的<strong>基础数据结构</strong>可以按照<strong>维度</strong>来划分(1 维、 2 维…n 维)；也可以按照它们<strong>所包含的数据类型是否相同</strong>来划分。 这样就产生了五种数据类型，它们是数据分析中最常用的：  </p><table><thead><tr><th align="center"></th><th align="center">Homogeneous</th><th align="center">Heterogeneous</th></tr></thead><tbody><tr><td align="center">1d</td><td align="center">Atomic vector</td><td align="center">List</td></tr><tr><td align="center">2d</td><td align="center">Matrix</td><td align="center">Data frame</td></tr><tr><td align="center">nd</td><td align="center">Array</td><td align="center"></td></tr></tbody></table><h3 id="向量（vector）"><a href="#向量（vector）" class="headerlink" title="向量（vector）"></a>向量（vector）</h3><p>向量包括：原子向量 （Atomic vector） 和列表 （List）。兩者都属于<strong>一维数据</strong>， 两者的区别在于： <strong>原子向量中的所有元素都必须是相同的类型；而列表中的元素可以是不同的类型</strong>  </p><blockquote><p><code>is.vector()</code>并不能测试一个对象是不是向量。 相反，仅当对象是除了名字以外，不包含其它属性时，它才返回 <code>TRUE</code>。 所以，请使用 <code>is.atomic(x) || is.list(x)</code> 来测试一个对象是不是向量。  </p></blockquote><p>向量具有三个共同属性：  </p><ol><li><strong>类型</strong>， <code>typeof()</code>，它是什么  </li><li><strong>长度</strong>， <code>length()</code>，它包含有多少元素  </li><li><strong>属性</strong>， <code>attributes()</code>，额外的任意元数据  </li></ol><h4 id="原子向量-Atomic-vector"><a href="#原子向量-Atomic-vector" class="headerlink" title="原子向量 (Atomic vector)"></a>原子向量 (Atomic vector)</h4><ul><li>原子向量类型：<strong>逻辑类型</strong> (logical)、 <strong>整数类型</strong> (integer)、 <strong>双精度数值类型</strong> (double)、 <strong>字符类型</strong> (character)、 复数类型 (complex)、 raw类型。  </li><li>缺失值用 <code>NA</code> 表示，是一个长度为1的逻辑向量，NA可根据所处整体环境强制转换成正确的类型，或者使用 <code>NA_real_</code>(双精度浮点数向量)、 <code>NA_integer_</code> 和 <code>NA_character_</code> 来创建一系列确定类型的 <code>NA</code>  </li><li><code>typeof</code> 确定具体的数据类型，<code>is</code>开头的函数（如：<code>is.integer</code>）来确定是否属于某一特定类型  </li><li><code>is.atomic()</code> 是检测原子向量最通用的  </li><li>强制转换：一个原子向量中的所有元素都必须是相同的类型。 所以，当你试图合并不同类型的数据时，将向最灵活的类型进行强制转换。 以灵活程度排序，从小到大依次为：逻辑、 整数、双精度浮点数和字符。  </li><li>如果转换遇到歧义，则需要使用 <code>as.character()</code>、 <code>as.double()</code>、 <code>as.integer()</code>或者 <code>as.logical()</code>等函数，进行明确的强制转换。  </li></ul><h4 id="列表-List"><a href="#列表-List" class="headerlink" title="列表(List)"></a>列表(List)</h4><p>c()可以将几个向量合并成一个。 如果原子向量和列表同时存在，那么在合并之前， c()会将原子向量强制转换成列表  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- list(list(<span class="number">1</span>, <span class="number">2</span>), c(<span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line">y &lt;- c(list(<span class="number">1</span>, <span class="number">2</span>), c(<span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line">str(x)</span><br><span class="line"><span class="comment">#&gt; List of 2</span></span><br><span class="line"><span class="comment">#&gt; $ :List of 2</span></span><br><span class="line"><span class="comment">#&gt; ..$ : num 1</span></span><br><span class="line"><span class="comment">#&gt; ..$ : num 2</span></span><br><span class="line"><span class="comment">#&gt; $ : num [1:2] 3 4</span></span><br><span class="line">str(y)</span><br><span class="line"><span class="comment">#&gt; List of 4</span></span><br><span class="line"><span class="comment">#&gt; $ : num 1</span></span><br><span class="line"><span class="comment">#&gt; $ : num 2</span></span><br><span class="line"><span class="comment">#&gt; $ : num 3</span></span><br><span class="line"><span class="comment">#&gt; $ : num 4</span></span><br></pre></td></tr></table></figure><p>列表用来建立 R 语言中的许多更加复杂的数据结构。 比如， <strong>数据框</strong>和其他复杂对象  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">is.list(mtcars)</span><br><span class="line"><span class="comment">#&gt; [1] TRUE</span></span><br></pre></td></tr></table></figure><blockquote><p>这里说明一点：data.frame是比list更为复杂的数据结构  </p></blockquote><h3 id="属性-Attributes"><a href="#属性-Attributes" class="headerlink" title="属性(Attributes)"></a>属性(Attributes)</h3><p>所有的对象都可以拥有任意多个附加属性， 附加属性用来存取与该对象相关的元数据。 属性可以看做是已命名的列表(带有不重复的名字)。 属性可以使用 <code>attr()</code>函数一个一个的访问，也可以使用 attributes()函数一次性访问。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">y &lt;- <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">attr(y, <span class="string">&quot;my_attribute&quot;</span>) &lt;- <span class="string">&quot;This is a vector&quot;</span></span><br><span class="line">attr(y, <span class="string">&quot;alpha&quot;</span>) &lt;- <span class="string">&quot;This is a vector&quot;</span></span><br><span class="line">attr(y, <span class="string">&quot;my_attribute&quot;</span>)</span><br><span class="line"><span class="comment">#&gt; [1] &quot;This is a vector&quot;</span></span><br><span class="line">attributes(y)</span><br><span class="line"><span class="comment">#&gt; $my_attribute</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;This is a vector&quot;</span></span><br><span class="line"><span class="comment">#&gt; </span></span><br><span class="line"><span class="comment">#&gt; $alpha</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;This is a vector&quot;</span></span><br><span class="line">attr(y, <span class="string">&quot;my_attribute&quot;</span>) &lt;- <span class="string">&quot;alpha&quot;</span></span><br><span class="line">attributes(y)</span><br><span class="line"><span class="comment">#&gt; $my_attribute</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;alpha&quot;</span></span><br><span class="line"><span class="comment">#&gt; </span></span><br><span class="line"><span class="comment">#&gt; $alpha</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;This is a vector&quot;</span></span><br></pre></td></tr></table></figure><p><code>structure()</code> 函数返回一个带有属性的对象， 也可以用来修改属性  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">structure(y, alpha = <span class="string">&quot;alpha&quot;</span>)</span><br><span class="line"><span class="comment">#&gt;  [1]  1  2  3  4  5  6  7  8  9 10</span></span><br><span class="line"><span class="comment">#&gt; attr(,&quot;my_attribute&quot;)</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;alpha&quot;</span></span><br><span class="line"><span class="comment">#&gt; attr(,&quot;alpha&quot;)</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;alpha&quot;</span></span><br></pre></td></tr></table></figure><p>默认情况下，当修改向量时，数据的大多数属性会丢失，但有三种重要的属性不会丢失：<strong>名字</strong>(name)，<strong>维度</strong>(dimension)，<strong>类</strong>(class)  </p><blockquote><p>三个特殊属性需要使用特定函数<code>names(x)</code>、 <code>class(x)</code>和 <code>dim(x)</code> 访问，而不是 <code>attr(x, &quot;names&quot;)</code>、 <code>attr(x, &quot;class&quot;)</code> 和 <code>attr(x, &quot;dim&quot;)</code>  </p></blockquote><h3 id="数据框-data-frame"><a href="#数据框-data-frame" class="headerlink" title="数据框(data frame)"></a>数据框(data frame)</h3><p>数据框是<strong>由等长向量构成的列表</strong>。 它也是二维结构，所以它具有<strong>矩阵</strong>和<strong>列表</strong>双重属性。也就是说，数据框拥有 <code>names()</code>、 <code>colnames()</code>和 <code>rownames()</code>，尽管 <code>names()</code>和 <code>colnames()</code>对数据框来说是一样的。 数据框的 <code>length()</code>是列表的长度，所以和 <code>ncol()</code>相同； <code>nrow()</code>则得到行数。  </p><p>由于数据框是一个包含向量的列表，所以数据框的某个是列表类型是有可能的：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">df &lt;- data.frame(x = <span class="number">1</span>:<span class="number">3</span>)</span><br><span class="line">df$y &lt;- list(<span class="number">1</span>:<span class="number">2</span>, <span class="number">1</span>:<span class="number">3</span>, <span class="number">1</span>:<span class="number">4</span>)</span><br><span class="line">df</span><br><span class="line"><span class="comment">#&gt; x y</span></span><br><span class="line"><span class="comment">#&gt; 1 1 1, 2</span></span><br><span class="line"><span class="comment">#&gt; 2 2 1, 2, 3</span></span><br><span class="line"><span class="comment">#&gt; 3 3 1, 2, 3, 4</span></span><br></pre></td></tr></table></figure><blockquote><p>当把列表传入 <code>data.frame()</code>函数时，该函数将试图把列表的每一个元素都放到单独的一列中。一种绕开的方法是使用 <code>I()</code>函数，它使得 <code>data.frame()</code>把列表看成一个整体单元  </p></blockquote><h3 id="R中的对象"><a href="#R中的对象" class="headerlink" title="R中的对象"></a>R中的对象</h3><h4 id="S3对象"><a href="#S3对象" class="headerlink" title="S3对象"></a>S3对象</h4><p>S3 对象是由原子向量、数组和列表组成的，所以你可以使用上面描述的技术对 S3 对象进行取子集操作。 你可以通过 <code>str()</code>函数获得的它们的结构信息。  </p><h4 id="S4对象"><a href="#S4对象" class="headerlink" title="S4对象"></a>S4对象</h4><p>对 S4 对象来说，有另外两种取子集操作符: <code>@</code>(相当于<code>$</code>)和 <code>slot()</code>(相当于<code>[[</code>)。 <code>@</code>比<code>$</code>更加严格，如果槽(slot)不存在，那么它会返回错误。  </p><hr><p><a href="http://adv-r.had.co.nz/">Advanced R</a></p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R并行运算</title>
      <link href="2019/05/14/parallel/"/>
      <url>2019/05/14/parallel/</url>
      
        <content type="html"><![CDATA[<h2 id="R的并行运算"><a href="#R的并行运算" class="headerlink" title="R的并行运算"></a>R的并行运算</h2><p>R作为主要流行的统计分析软件之一，其处理数据一般都是单线程的。随着数据量的增大，R运行的时间会大大增加；为了充分发挥计算机的性能和进一步提升R运行速度，使用并行运算不失为一种有效的手段。  </p><p>简单的说R的并行化计算其实没有改变其整个并行环境，而是先启动N个附属进程，然后将数据分割成N块在N个核上进行运行，等待附属进程结束返回结果。与单线程运算相比，会大大节省运算时间  </p><h3 id="parallel"><a href="#parallel" class="headerlink" title="parallel"></a>parallel</h3><p>R内置了parallel包（R version &gt; 2.14），强化了R的并行计算能力。parallel包的思路和lapply函数很相似，都是将输入数据分割、计算、整合结果。只不过并行计算是用到了不同的cpu内核来运算。两个核心的函数为<code>mclapply</code>和<code>parlapply</code>。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## lapply</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">res &lt;- lapply(<span class="number">1</span>:<span class="number">5000000</span>, <span class="keyword">function</span>(x) x+<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">user  system elapsed</span><br><span class="line"><span class="number">21.42</span>    <span class="number">1.74</span>   <span class="number">25.70</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## parlapply</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># load parallel</span></span><br><span class="line"><span class="keyword">library</span>(parallel)</span><br><span class="line"></span><br><span class="line"><span class="comment"># check numrber of cores</span></span><br><span class="line">clnum&lt;-detectCores() </span><br><span class="line"></span><br><span class="line"><span class="comment">#设置参与并行的CPU核数目</span></span><br><span class="line">cl &lt;- makeCluster(getOption(<span class="string">&quot;cl.cores&quot;</span>, clnum));</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行</span></span><br><span class="line">system.time(&#123;</span><br><span class="line">res &lt;- parLapply(cl, <span class="number">1</span>:<span class="number">5000000</span>,  <span class="keyword">function</span>(x) x + <span class="number">1</span>)</span><br><span class="line">&#125;);</span><br><span class="line">user system elapsed</span><br><span class="line"><span class="number">6.54</span> <span class="number">0.34</span> <span class="number">19.95</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭并行计算</span></span><br><span class="line">stopCluster(cl);</span><br><span class="line"></span><br><span class="line"><span class="comment">## mclapply ==&gt; mclapply适用于类Unix系统的操作</span></span><br><span class="line">mc &lt;- getOption(<span class="string">&quot;mc.cores&quot;</span>, <span class="number">3</span>)</span><br><span class="line">system.time(&#123;</span><br><span class="line">res &lt;- mclapply(<span class="number">1</span>:<span class="number">5000000</span>, <span class="keyword">function</span>(x)&#123;x+<span class="number">1</span>&#125;, mc.cores = mc);</span><br><span class="line">&#125;);</span><br><span class="line">user system elapsed</span><br><span class="line"><span class="number">6.657</span> <span class="number">0.500</span> <span class="number">7.181</span></span><br></pre></td></tr></table></figure><h3 id="furrr"><a href="#furrr" class="headerlink" title="furrr"></a>furrr</h3><p><code>furrr</code>是<code>future</code>和<code>purrr</code>包的结合，提供了一系列的并行操作适用于<code>*map</code>家族函数  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(furrr)</span><br><span class="line"><span class="keyword">library</span>(tictoc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># This should take 6 seconds in total running sequentially</span></span><br><span class="line">plan(sequential)</span><br><span class="line">tic()</span><br><span class="line">nothingness &lt;- future_map(c(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>), ~Sys.sleep(.x))</span><br><span class="line">toc()</span><br><span class="line"><span class="comment">#&gt; 6.08 sec elapsed</span></span><br><span class="line"><span class="comment"># This should take ~2 seconds running in parallel, with a little overhead</span></span><br><span class="line">plan(multiprocess)</span><br><span class="line">tic()</span><br><span class="line">nothingness &lt;- future_map(c(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>), ~Sys.sleep(.x))</span><br><span class="line">toc()</span><br><span class="line"><span class="comment">#&gt; 2.212 sec elapsed</span></span><br></pre></td></tr></table></figure><p>与<code>parallel</code>相比更喜欢<code>furrr</code>的傻瓜式操作，且其与其他R包的交互使用更为方便。   </p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他一些并行相关的R包：<br><a href="https://github.com/HenrikBengtsson/future">future</a> : 强大的分布式处理并行包<br><a href="https://github.com/HenrikBengtsson/future.apply">future.apply</a> : 基于<code>future</code>包开发的<code>*apply</code>家族函数并行包  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>purrr实现函数式编程的迭代</title>
      <link href="2019/04/07/purrr/"/>
      <url>2019/04/07/purrr/</url>
      
        <content type="html"><![CDATA[<h2 id="purrr"><a href="#purrr" class="headerlink" title="purrr"></a>purrr</h2><p>purrr包是Hadley Wickham大神编写的高级函数编程语言包，它提供了大量的类map函数，使用函数式编程的思想，致力于减少R中的循环操作  </p><h2 id="map族函数"><a href="#map族函数" class="headerlink" title="map族函数"></a>map族函数</h2><h3 id="单参数计算"><a href="#单参数计算" class="headerlink" title="单参数计算"></a>单参数计算</h3><p>map族函数输入的数据类型是向量，函数将向量中的每一个元素带入运算，返回的也是一个具有同样长度、同样变量名的向量，返回的向量类型由函数的后缀决定。  </p><blockquote><p>map()       # 返回一个列表（list）<br>map_lgl()   # 返回一个逻辑型向量<br>map_int()   # 返回一个整数型向量<br>map_dbl()   # 返回双精度数值向量<br>map_chr()   # 返回字符串向量<br>map_dfc()   # 返回数据框（column bind）<br>map_dfr()   # 返回数据框（row bind）  </p></blockquote><h3 id="多参数计算"><a href="#多参数计算" class="headerlink" title="多参数计算"></a>多参数计算</h3><p><code>purrr</code>中的<code>map</code>族函数提供了较<code>apply</code>族函数更为友好的数据输入形式，便于进行多参数操作  </p><blockquote><p>map()         # Apply a function to each element (类似于apply的操作)<br>map2()        # Apply a function to pairs of elements (这个是2个输入参数的函数)<br>pmap()        # Apply a function to groups of elements (多参数形式)<br>lmap()        # Apply function to each list-element of a list or vector (类似于lapply)<br>imap()        # Apply .f to each element of a list or vector and its index. (对索引和内容同时操作)<br>invoke_map()  # Run each function in a list (每个元素使用不同的函数)  </p></blockquote><p>这些函数使用的示意图如下所示：  </p><p><img src="/images/purrr/purrr_1.png" alt="purrr1">  </p><h2 id="walk族函数"><a href="#walk族函数" class="headerlink" title="walk族函数"></a>walk族函数</h2><p>当我们使用函数的目的是向屏幕提供输出或将文件保存到磁盘——重要的是操作过程而不是返回值，我们应该使用游走函数，而不是map函数。  </p><p>比如：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = list(<span class="number">1</span>, <span class="string">&quot;a&quot;</span>, <span class="number">3</span>)</span><br><span class="line">x %&gt;% </span><br><span class="line">    walk(print)</span><br><span class="line"><span class="comment">#&gt; [1] 1</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;a&quot;</span></span><br><span class="line"><span class="comment">#&gt; [1] 3</span></span><br></pre></td></tr></table></figure><p>一般来说，<code>walk()</code>函数不如<code>walk2()</code>和<code>pwalk()</code>实用。例如有一个图形列表和一个文件名向量，那么我们就可以使用<code>pwalk()</code>将每个文件保存到相应的磁盘位置：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line">plots = mtcars %&gt;% </span><br><span class="line">    split(.$cyl) %&gt;% </span><br><span class="line">    map(~ggplot(., aes(mpg, wt)) + geom_point())</span><br><span class="line">paths = stringr::str_c(names(plots), <span class="string">&quot;.pdf&quot;</span>)</span><br><span class="line">pwalk(list(paths, plots), ggsave, path = tempdir())</span><br><span class="line"><span class="comment">#&gt; Saving 7 x 5 in image</span></span><br><span class="line"><span class="comment">#&gt; Saving 7 x 5 in image</span></span><br><span class="line"><span class="comment">#&gt; Saving 7 x 5 in image</span></span><br></pre></td></tr></table></figure><h2 id="list的处理操作"><a href="#list的处理操作" class="headerlink" title="list的处理操作"></a>list的处理操作</h2><h3 id="FILTER-LISTS"><a href="#FILTER-LISTS" class="headerlink" title="FILTER LISTS"></a>FILTER LISTS</h3><h4 id="pluck和chuck"><a href="#pluck和chuck" class="headerlink" title="pluck和chuck"></a><strong><code>pluck</code>和<code>chuck</code></strong></h4><p><code>pluck</code>和<code>chuck</code>可以代替繁琐的<code>[[]]</code>操作，使list元素的选取更加简洁  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&gt; obj1 &lt;- list(<span class="string">&quot;a&quot;</span>, list(<span class="number">1</span>, elt = <span class="string">&quot;foo&quot;</span>))</span><br><span class="line">&gt; obj2 &lt;- list(<span class="string">&quot;b&quot;</span>, list(<span class="number">2</span>, elt = <span class="string">&quot;bar&quot;</span>))</span><br><span class="line">&gt; x &lt;- list(obj1, obj2)</span><br><span class="line">&gt; x</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[[<span class="number">1</span>]][[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span>]][[<span class="number">2</span>]]</span><br><span class="line">[[<span class="number">1</span>]][[<span class="number">2</span>]][[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span>]][[<span class="number">2</span>]]$elt</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;foo&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[[<span class="number">2</span>]][[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;b&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]][[<span class="number">2</span>]]</span><br><span class="line">[[<span class="number">2</span>]][[<span class="number">2</span>]][[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]][[<span class="number">2</span>]]$elt</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;bar&quot;</span></span><br><span class="line">&gt; pluck(x, <span class="number">1</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[[<span class="number">2</span>]][[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]$elt</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;foo&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; pluck(x, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">$elt</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;foo&quot;</span></span><br><span class="line"></span><br><span class="line">&gt; pluck(x, <span class="number">1</span>, <span class="number">2</span>, <span class="string">&quot;elt&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;foo&quot;</span></span><br><span class="line">&gt; chuck(x, <span class="number">1</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[[<span class="number">2</span>]][[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]$elt</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;foo&quot;</span></span><br><span class="line">&gt; chuck(x, <span class="number">1</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[[<span class="number">2</span>]][[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]$elt</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;foo&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>pluck和chuck的区别：当选取的元素不存在时，pluck返回NULL，而chuck会报错  </p></blockquote><h4 id="条件选取"><a href="#条件选取" class="headerlink" title="条件选取"></a><strong>条件选取</strong></h4><p><code>keep</code>函数选取符合某一条件的元素<br><code>discard</code>函数相反，选取不符合某一条件的元素<br><code>compact</code>函数则去掉所有为空的元素  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- list(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) %&gt;% keep(<span class="keyword">function</span>(x)(x&gt;<span class="number">2</span>))</span><br><span class="line">&gt; x</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">3</span></span><br><span class="line">&gt; x &lt;- list(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) %&gt;% discard(<span class="keyword">function</span>(x)(x&gt;<span class="number">2</span>))</span><br><span class="line">&gt; x</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line">&gt; x &lt;- list(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="literal">NULL</span>) %&gt;% compact()</span><br><span class="line">&gt; x</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="head-while和tail-while"><a href="#head-while和tail-while" class="headerlink" title="head_while和tail_while"></a><strong><code>head_while</code>和<code>tail_while</code></strong></h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; pos &lt;- <span class="keyword">function</span>(x) x &gt;= <span class="number">0</span></span><br><span class="line">&gt; head_while(<span class="number">5</span>:-<span class="number">5</span>, pos)</span><br><span class="line">[<span class="number">1</span>] <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line">&gt; pos &lt;- <span class="keyword">function</span>(x) x &lt; <span class="number">0</span></span><br><span class="line">&gt; tail_while(<span class="number">5</span>:-<span class="number">5</span>, pos)</span><br><span class="line">[<span class="number">1</span>] -<span class="number">1</span> -<span class="number">2</span> -<span class="number">3</span> -<span class="number">4</span> -<span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="SUMMARISE-LISTS"><a href="#SUMMARISE-LISTS" class="headerlink" title="SUMMARISE LISTS"></a>SUMMARISE LISTS</h3><h4 id="every和some"><a href="#every和some" class="headerlink" title="every和some"></a><code>every</code>和<code>some</code></h4><p>判断元素是否满足条件  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; y &lt;- list(<span class="number">0</span>:<span class="number">10</span>, <span class="number">5.5</span>)</span><br><span class="line">&gt; y %&gt;% every(is.numeric)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br><span class="line">&gt; y %&gt;% every(is.integer)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></span><br><span class="line">&gt; y %&gt;% some(is.integer)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><h4 id="has-element"><a href="#has-element" class="headerlink" title="has_element"></a><code>has_element</code></h4><p>判断是否包含某一对象  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- list(<span class="number">1</span>:<span class="number">10</span>, <span class="number">5</span>, <span class="number">9.9</span>)</span><br><span class="line">&gt; x %&gt;% has_element(<span class="number">1</span>:<span class="number">10</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br><span class="line">&gt; x %&gt;% has_element(<span class="number">3</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><h4 id="detect和detect-index"><a href="#detect和detect-index" class="headerlink" title="detect和detect_index"></a><code>detect</code>和<code>detect_index</code></h4><p>寻找匹配的第一个元素  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; is_even &lt;- <span class="keyword">function</span>(x) x %% <span class="number">2</span> == <span class="number">0</span></span><br><span class="line">&gt; <span class="number">3</span>:<span class="number">10</span> %&gt;% detect(is_even)</span><br><span class="line">[<span class="number">1</span>] <span class="number">4</span></span><br><span class="line">&gt; <span class="number">3</span>:<span class="number">10</span> %&gt;% detect_index(is_even)</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="vec-depth"><a href="#vec-depth" class="headerlink" title="vec_depth"></a><code>vec_depth</code></h4><p>计算list的深度  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- list(</span><br><span class="line">+     list(),</span><br><span class="line">+     list(list()),</span><br><span class="line">+     list(list(list(<span class="number">1</span>)))</span><br><span class="line">+ )</span><br><span class="line">&gt; vec_depth(x)</span><br><span class="line">[<span class="number">1</span>] <span class="number">5</span></span><br><span class="line">&gt; x %&gt;% map_int(vec_depth)</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="TRANSFORM-LISTS"><a href="#TRANSFORM-LISTS" class="headerlink" title="TRANSFORM LISTS"></a>TRANSFORM LISTS</h3><h4 id="modify"><a href="#modify" class="headerlink" title="modify"></a><code>modify</code></h4><p><code>modify</code>同样也是对列表或者向量中的元素进行函数运算，但是与<code>map</code>家族函数相比存在一些区别：  </p><blockquote><p>map家族函数往往返回一个特定类型的对象（数值，逻辑）<br>modify函数返回的对象与输入对象的类型相一致<br>也就是说，modify是“真正”的对输入对象进行计算操作  </p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; iris %&gt;%</span><br><span class="line">    modify_if(is.factor, as.character) %&gt;%</span><br><span class="line">    str()</span><br><span class="line"><span class="string">&#x27;data.frame&#x27;</span>:<span class="number">150</span> obs. of  <span class="number">5</span> variables:</span><br><span class="line"> $ Sepal.Length: num  <span class="number">5.1</span> <span class="number">4.9</span> <span class="number">4.7</span> <span class="number">4.6</span> <span class="number">5</span> <span class="number">5.4</span> <span class="number">4.6</span> <span class="number">5</span> <span class="number">4.4</span> <span class="number">4.9</span> <span class="keyword">...</span></span><br><span class="line"> $ Sepal.Width : num  <span class="number">3.5</span> <span class="number">3</span> <span class="number">3.2</span> <span class="number">3.1</span> <span class="number">3.6</span> <span class="number">3.9</span> <span class="number">3.4</span> <span class="number">3.4</span> <span class="number">2.9</span> <span class="number">3.1</span> <span class="keyword">...</span></span><br><span class="line"> $ Petal.Length: num  <span class="number">1.4</span> <span class="number">1.4</span> <span class="number">1.3</span> <span class="number">1.5</span> <span class="number">1.4</span> <span class="number">1.7</span> <span class="number">1.4</span> <span class="number">1.5</span> <span class="number">1.4</span> <span class="number">1.5</span> <span class="keyword">...</span></span><br><span class="line"> $ Petal.Width : num  <span class="number">0.2</span> <span class="number">0.2</span> <span class="number">0.2</span> <span class="number">0.2</span> <span class="number">0.2</span> <span class="number">0.4</span> <span class="number">0.3</span> <span class="number">0.2</span> <span class="number">0.2</span> <span class="number">0.1</span> <span class="keyword">...</span></span><br><span class="line"> $ Species     : chr  <span class="string">&quot;setosa&quot;</span> <span class="string">&quot;setosa&quot;</span> <span class="string">&quot;setosa&quot;</span> <span class="string">&quot;setosa&quot;</span> <span class="keyword">...</span></span><br></pre></td></tr></table></figure><p><code>modify</code>函数的变形与map家族函数的使用是类似的  </p><h3 id="RESHAPE-LISTS"><a href="#RESHAPE-LISTS" class="headerlink" title="RESHAPE LISTS"></a>RESHAPE LISTS</h3><h4 id="flatten"><a href="#flatten" class="headerlink" title="flatten"></a><code>flatten</code></h4><p>去除list的一层层级关系，相当于将list压缩扁平化，但是得到的对象的类型是稳定可预测的（可以自己设置结果的类型）  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- rerun(<span class="number">2</span>, sample(<span class="number">3</span>))</span><br><span class="line">&gt; x</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">3</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt; x %&gt;% flatten()</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">3</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">4</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">3</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">5</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">6</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt; x %&gt;% flatten_int()</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="transpose"><a href="#transpose" class="headerlink" title="transpose"></a><code>transpose</code></h4><p>置换列表的索引顺序，其实就是将二级索引和一级索引的层级调换  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- rerun(<span class="number">3</span>, x = runif(<span class="number">1</span>), y = runif(<span class="number">3</span>))</span><br><span class="line">&gt; x</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[[<span class="number">1</span>]]$x</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.9489699</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span>]]$y</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.09894665</span> <span class="number">0.34629673</span> <span class="number">0.61291285</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[[<span class="number">2</span>]]$x</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.9344982</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]$y</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.2195651</span> <span class="number">0.5119154</span> <span class="number">0.9527276</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[[<span class="number">3</span>]]$x</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.730148</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]$y</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.3331638</span> <span class="number">0.9099907</span> <span class="number">0.4129223</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; transpose(x)</span><br><span class="line">$x</span><br><span class="line">$x[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.9489699</span></span><br><span class="line"></span><br><span class="line">$x[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.9344982</span></span><br><span class="line"></span><br><span class="line">$x[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.730148</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$y</span><br><span class="line">$y[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.09894665</span> <span class="number">0.34629673</span> <span class="number">0.61291285</span></span><br><span class="line"></span><br><span class="line">$y[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.2195651</span> <span class="number">0.5119154</span> <span class="number">0.9527276</span></span><br><span class="line"></span><br><span class="line">$y[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.3331638</span> <span class="number">0.9099907</span> <span class="number">0.4129223</span></span><br></pre></td></tr></table></figure><h3 id="JOIN-TO-LISTS"><a href="#JOIN-TO-LISTS" class="headerlink" title="JOIN (TO) LISTS"></a>JOIN (TO) LISTS</h3><h4 id="prepend"><a href="#prepend" class="headerlink" title="prepend"></a><code>prepend</code></h4><p>同<code>append</code>、<code>splice</code>函数共同实现list的合并  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&gt; x &lt;- as.list(<span class="number">1</span>:<span class="number">2</span>)</span><br><span class="line">&gt; x %&gt;% append(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">&gt; x %&gt;% prepend(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt; x %&gt;% prepend(list(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>), before = <span class="number">2</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;b&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">4</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line">&gt; splice(x, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">1</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="number">2</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">4</span>]]</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;b&quot;</span></span><br></pre></td></tr></table></figure><h3 id="WORK-WITH-LISTS"><a href="#WORK-WITH-LISTS" class="headerlink" title="WORK WITH LISTS"></a>WORK WITH LISTS</h3><h4 id="array-branch和array-tree"><a href="#array-branch和array-tree" class="headerlink" title="array_branch和array_tree"></a><code>array_branch</code>和<code>array_tree</code></h4><p>这两个函数的用法相同，会强制把数组转化成list  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- array(<span class="number">1</span>:<span class="number">12</span>, c(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">&gt; array_branch(x, <span class="number">2</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">5</span>    <span class="number">9</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">6</span>   <span class="number">10</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">3</span>    <span class="number">7</span>   <span class="number">11</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">4</span>    <span class="number">8</span>   <span class="number">12</span></span><br><span class="line"></span><br><span class="line">&gt; array_branch(x, <span class="number">3</span>)</span><br><span class="line">[[<span class="number">1</span>]]</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">3</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">4</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">2</span>]]</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">5</span>    <span class="number">7</span></span><br><span class="line">[<span class="number">2</span>,]    <span class="number">6</span>    <span class="number">8</span></span><br><span class="line"></span><br><span class="line">[[<span class="number">3</span>]]</span><br><span class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>,]    <span class="number">9</span>   <span class="number">11</span></span><br><span class="line">[<span class="number">2</span>,]   <span class="number">10</span>   <span class="number">12</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>purrr</code>包作为tidyverse的核心R包之一，提供了一些更加强大的编程工具，优化函数式编程的操作，对于数据分析的高效快速处理是十分重要的。  </p><p><img src="/images/purrr/purrr_2.png" alt="purrr2">  </p><p><img src="/images/purrr/purrr_3.png" alt="purrr3"></p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> tidyverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tidyr学习笔记</title>
      <link href="2019/04/04/tidyr/"/>
      <url>2019/04/04/tidyr/</url>
      
        <content type="html"><![CDATA[<h2 id="tidyr包：进阶版reshape2"><a href="#tidyr包：进阶版reshape2" class="headerlink" title="tidyr包：进阶版reshape2"></a>tidyr包：进阶版reshape2</h2><h3 id="tidyr包"><a href="#tidyr包" class="headerlink" title="tidyr包"></a>tidyr包</h3><p>tidyr是reshape2的进阶版本，它提供了更加定制化的数据整洁功能，用于数据的合并、拆分以及长宽格式的转化  </p><p>主要涉及的操作：  </p><ol><li>缺失值的补充  </li><li>长形表变宽形表，宽形表变长形表  <ul><li>gather-把宽度较大的数据转换成一个更长的形式，它类比于从reshape2包中melt函数的功能  </li><li>spread-把长的数据转换成一个更宽的形式，它类比于从reshape2包中cast函数的功能  </li></ul></li><li>列分割与列合并  <ul><li>separate－将一列按分隔符分割为多列  </li><li>unite－将多列按指定分隔符合并为一列  </li></ul></li></ol><h3 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a>常见用法</h3><h4 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(tidyr)</span><br><span class="line">&gt; <span class="keyword">library</span>(tibble)</span><br><span class="line">&gt; mtcars &lt;- rownames_to_column(mtcars, var =<span class="string">&#x27;car&#x27;</span>)</span><br><span class="line">&gt; head(mtcars)</span><br><span class="line">                car  mpg cyl disp  hp drat    wt  qsec vs am gear carb</span><br><span class="line"><span class="number">1</span>         Mazda RX4 <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.620</span> <span class="number">16.46</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">2</span>     Mazda RX4 Wag <span class="number">21.0</span>   <span class="number">6</span>  <span class="number">160</span> <span class="number">110</span> <span class="number">3.90</span> <span class="number">2.875</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">4</span></span><br><span class="line"><span class="number">3</span>        Datsun <span class="number">710</span> <span class="number">22.8</span>   <span class="number">4</span>  <span class="number">108</span>  <span class="number">93</span> <span class="number">3.85</span> <span class="number">2.320</span> <span class="number">18.61</span>  <span class="number">1</span>  <span class="number">1</span>    <span class="number">4</span>    <span class="number">1</span></span><br><span class="line"><span class="number">4</span>    Hornet <span class="number">4</span> Drive <span class="number">21.4</span>   <span class="number">6</span>  <span class="number">258</span> <span class="number">110</span> <span class="number">3.08</span> <span class="number">3.215</span> <span class="number">19.44</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br><span class="line"><span class="number">5</span> Hornet Sportabout <span class="number">18.7</span>   <span class="number">8</span>  <span class="number">360</span> <span class="number">175</span> <span class="number">3.15</span> <span class="number">3.440</span> <span class="number">17.02</span>  <span class="number">0</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">2</span></span><br><span class="line"><span class="number">6</span>           Valiant <span class="number">18.1</span>   <span class="number">6</span>  <span class="number">225</span> <span class="number">105</span> <span class="number">2.76</span> <span class="number">3.460</span> <span class="number">20.22</span>  <span class="number">1</span>  <span class="number">0</span>    <span class="number">3</span>    <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="数据重构（Reshape-Data）"><a href="#数据重构（Reshape-Data）" class="headerlink" title="数据重构（Reshape Data）"></a>数据重构（Reshape Data）</h4><h5 id="gather–宽数据转为长数据"><a href="#gather–宽数据转为长数据" class="headerlink" title="gather–宽数据转为长数据"></a>gather–宽数据转为长数据</h5><blockquote><p>gather(data, key, value, …, na.rm = FALSE, convert = FALSE)<br>data：需要被转换的宽形表<br>key：将原数据框中的所有列赋给一个新变量key<br>value：将原数据框中的所有值赋给一个新变量value<br>…：可以指定哪些列聚到同一列中<br>na.rm：是否删除缺失值</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; mtcarsNew &lt;- gather(mtcars, attribute, value, -car) <span class="comment"># 除了car列外，其余列聚合成两列，分别命名为attribute和value</span></span><br><span class="line">&gt; head(mtcarsNew)</span><br><span class="line">                car attribute value</span><br><span class="line"><span class="number">1</span>         Mazda RX4       mpg  <span class="number">21.0</span></span><br><span class="line"><span class="number">2</span>     Mazda RX4 Wag       mpg  <span class="number">21.0</span></span><br><span class="line"><span class="number">3</span>        Datsun <span class="number">710</span>       mpg  <span class="number">22.8</span></span><br><span class="line"><span class="number">4</span>    Hornet <span class="number">4</span> Drive       mpg  <span class="number">21.4</span></span><br><span class="line"><span class="number">5</span> Hornet Sportabout       mpg  <span class="number">18.7</span></span><br><span class="line"><span class="number">6</span>           Valiant       mpg  <span class="number">18.1</span></span><br></pre></td></tr></table></figure><p>tidyr很好的一点是可以只gather若干列而其他列保持不变,这点要比melt更加灵活  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; mtcarsNew &lt;- mtcars %&gt;% gather(attribute, value, mpg:gear)</span><br><span class="line">&gt; head(mtcarsNew)</span><br><span class="line">                car carb attribute value</span><br><span class="line"><span class="number">1</span>         Mazda RX4    <span class="number">4</span>       mpg  <span class="number">21.0</span></span><br><span class="line"><span class="number">2</span>     Mazda RX4 Wag    <span class="number">4</span>       mpg  <span class="number">21.0</span></span><br><span class="line"><span class="number">3</span>        Datsun <span class="number">710</span>    <span class="number">1</span>       mpg  <span class="number">22.8</span></span><br><span class="line"><span class="number">4</span>    Hornet <span class="number">4</span> Drive    <span class="number">1</span>       mpg  <span class="number">21.4</span></span><br><span class="line"><span class="number">5</span> Hornet Sportabout    <span class="number">2</span>       mpg  <span class="number">18.7</span></span><br><span class="line"><span class="number">6</span>           Valiant    <span class="number">1</span>       mpg  <span class="number">18.1</span></span><br></pre></td></tr></table></figure><h5 id="spread–长数据转为宽数据"><a href="#spread–长数据转为宽数据" class="headerlink" title="spread–长数据转为宽数据"></a>spread–长数据转为宽数据</h5><blockquote><p>spread(data, key, value, fill = NA, convert = FALSE, drop = TRUE)<br>data：为需要转换的长形表<br>key：需要将变量值拓展为字段的变量<br>value：需要分散的值<br>fill：对于缺失值，可将fill的值赋值给被转型后的缺失值  </p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; mtcarsSpread &lt;- mtcarsNew %&gt;% spread(attribute, value) <span class="comment"># 返回原来的数据格式</span></span><br><span class="line">&gt; head(mtcarsSpread)</span><br><span class="line">                 car carb am cyl disp drat gear  hp  mpg  qsec vs    wt</span><br><span class="line"><span class="number">1</span>        AMC Javelin    <span class="number">2</span>  <span class="number">0</span>   <span class="number">8</span>  <span class="number">304</span> <span class="number">3.15</span>    <span class="number">3</span> <span class="number">150</span> <span class="number">15.2</span> <span class="number">17.30</span>  <span class="number">0</span> <span class="number">3.435</span></span><br><span class="line"><span class="number">2</span> Cadillac Fleetwood    <span class="number">4</span>  <span class="number">0</span>   <span class="number">8</span>  <span class="number">472</span> <span class="number">2.93</span>    <span class="number">3</span> <span class="number">205</span> <span class="number">10.4</span> <span class="number">17.98</span>  <span class="number">0</span> <span class="number">5.250</span></span><br><span class="line"><span class="number">3</span>         Camaro Z28    <span class="number">4</span>  <span class="number">0</span>   <span class="number">8</span>  <span class="number">350</span> <span class="number">3.73</span>    <span class="number">3</span> <span class="number">245</span> <span class="number">13.3</span> <span class="number">15.41</span>  <span class="number">0</span> <span class="number">3.840</span></span><br><span class="line"><span class="number">4</span>  Chrysler Imperial    <span class="number">4</span>  <span class="number">0</span>   <span class="number">8</span>  <span class="number">440</span> <span class="number">3.23</span>    <span class="number">3</span> <span class="number">230</span> <span class="number">14.7</span> <span class="number">17.42</span>  <span class="number">0</span> <span class="number">5.345</span></span><br><span class="line"><span class="number">5</span>         Datsun <span class="number">710</span>    <span class="number">1</span>  <span class="number">1</span>   <span class="number">4</span>  <span class="number">108</span> <span class="number">3.85</span>    <span class="number">4</span>  <span class="number">93</span> <span class="number">22.8</span> <span class="number">18.61</span>  <span class="number">1</span> <span class="number">2.320</span></span><br><span class="line"><span class="number">6</span>   Dodge Challenger    <span class="number">2</span>  <span class="number">0</span>   <span class="number">8</span>  <span class="number">318</span> <span class="number">2.76</span>    <span class="number">3</span> <span class="number">150</span> <span class="number">15.5</span> <span class="number">16.87</span>  <span class="number">0</span> <span class="number">3.520</span></span><br></pre></td></tr></table></figure><blockquote><p>使用spread函数后，数据的排列顺序有一定的调整  </p></blockquote><h4 id="数据分割与合并"><a href="#数据分割与合并" class="headerlink" title="数据分割与合并"></a>数据分割与合并</h4><h5 id="unite–多列合并为一列"><a href="#unite–多列合并为一列" class="headerlink" title="unite–多列合并为一列"></a>unite–多列合并为一列</h5><blockquote><p>unite(data, col, …, sep = “_”, remove = TRUE)<br>data：为数据框<br>col：被组合的新列名称<br>…：指定哪些列需要被组合<br>sep：组合列之间的连接符，默认为下划线<br>remove：是否删除被组合的列  </p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&gt; date &lt;- as.Date(<span class="string">&#x27;2019-04-01&#x27;</span>) + <span class="number">0</span>:<span class="number">14</span></span><br><span class="line">&gt; hour &lt;- sample(<span class="number">1</span>:<span class="number">24</span>, <span class="number">15</span>)</span><br><span class="line">&gt; min &lt;- sample(<span class="number">1</span>:<span class="number">60</span>, <span class="number">15</span>)</span><br><span class="line">&gt; second &lt;- sample(<span class="number">1</span>:<span class="number">60</span>, <span class="number">15</span>)</span><br><span class="line">&gt; event &lt;- sample(letters, <span class="number">15</span>)</span><br><span class="line">&gt; data &lt;- data.frame(date, hour, min, second, event)</span><br><span class="line">&gt; data</span><br><span class="line">         date hour min second event</span><br><span class="line"><span class="number">1</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">01</span>    <span class="number">7</span>  <span class="number">30</span>     <span class="number">29</span>     u</span><br><span class="line"><span class="number">2</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">02</span>    <span class="number">9</span>  <span class="number">43</span>     <span class="number">36</span>     a</span><br><span class="line"><span class="number">3</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">03</span>   <span class="number">13</span>  <span class="number">58</span>     <span class="number">60</span>     l</span><br><span class="line"><span class="number">4</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">04</span>   <span class="number">20</span>  <span class="number">22</span>     <span class="number">11</span>     q</span><br><span class="line"><span class="number">5</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">05</span>    <span class="number">5</span>  <span class="number">44</span>     <span class="number">47</span>     p</span><br><span class="line"><span class="number">6</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">06</span>   <span class="number">18</span>  <span class="number">52</span>     <span class="number">37</span>     k</span><br><span class="line"><span class="number">7</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">07</span>   <span class="number">19</span>  <span class="number">12</span>     <span class="number">43</span>     r</span><br><span class="line"><span class="number">8</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">08</span>   <span class="number">12</span>  <span class="number">35</span>      <span class="number">6</span>     i</span><br><span class="line"><span class="number">9</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">09</span>   <span class="number">11</span>   <span class="number">7</span>     <span class="number">38</span>     e</span><br><span class="line"><span class="number">10</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">10</span>    <span class="number">1</span>  <span class="number">14</span>     <span class="number">21</span>     b</span><br><span class="line"><span class="number">11</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">11</span>    <span class="number">3</span>  <span class="number">20</span>     <span class="number">42</span>     w</span><br><span class="line"><span class="number">12</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">12</span>   <span class="number">14</span>   <span class="number">1</span>     <span class="number">32</span>     t</span><br><span class="line"><span class="number">13</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">13</span>   <span class="number">23</span>  <span class="number">19</span>     <span class="number">52</span>     h</span><br><span class="line"><span class="number">14</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">14</span>   <span class="number">21</span>  <span class="number">41</span>     <span class="number">26</span>     s</span><br><span class="line"><span class="number">15</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">15</span>    <span class="number">8</span>  <span class="number">16</span>     <span class="number">25</span>     o</span><br><span class="line">&gt; dataNew &lt;- unite(data, datehour, date, hour, sep = <span class="string">&#x27; &#x27;</span>) <span class="comment"># 联合date 和 hour两列，以空格分割，合成datehour列</span></span><br><span class="line">&gt; dataNew</span><br><span class="line">        datehour min second event</span><br><span class="line"><span class="number">1</span>   <span class="number">2019</span>-<span class="number">04</span>-<span class="number">01</span> <span class="number">7</span>  <span class="number">30</span>     <span class="number">29</span>     u</span><br><span class="line"><span class="number">2</span>   <span class="number">2019</span>-<span class="number">04</span>-<span class="number">02</span> <span class="number">9</span>  <span class="number">43</span>     <span class="number">36</span>     a</span><br><span class="line"><span class="number">3</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">03</span> <span class="number">13</span>  <span class="number">58</span>     <span class="number">60</span>     l</span><br><span class="line"><span class="number">4</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">04</span> <span class="number">20</span>  <span class="number">22</span>     <span class="number">11</span>     q</span><br><span class="line"><span class="number">5</span>   <span class="number">2019</span>-<span class="number">04</span>-<span class="number">05</span> <span class="number">5</span>  <span class="number">44</span>     <span class="number">47</span>     p</span><br><span class="line"><span class="number">6</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">06</span> <span class="number">18</span>  <span class="number">52</span>     <span class="number">37</span>     k</span><br><span class="line"><span class="number">7</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">07</span> <span class="number">19</span>  <span class="number">12</span>     <span class="number">43</span>     r</span><br><span class="line"><span class="number">8</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">08</span> <span class="number">12</span>  <span class="number">35</span>      <span class="number">6</span>     i</span><br><span class="line"><span class="number">9</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">09</span> <span class="number">11</span>   <span class="number">7</span>     <span class="number">38</span>     e</span><br><span class="line"><span class="number">10</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">10</span> <span class="number">1</span>  <span class="number">14</span>     <span class="number">21</span>     b</span><br><span class="line"><span class="number">11</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">11</span> <span class="number">3</span>  <span class="number">20</span>     <span class="number">42</span>     w</span><br><span class="line"><span class="number">12</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">12</span> <span class="number">14</span>   <span class="number">1</span>     <span class="number">32</span>     t</span><br><span class="line"><span class="number">13</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">13</span> <span class="number">23</span>  <span class="number">19</span>     <span class="number">52</span>     h</span><br><span class="line"><span class="number">14</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">14</span> <span class="number">21</span>  <span class="number">41</span>     <span class="number">26</span>     s</span><br><span class="line"><span class="number">15</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">15</span> <span class="number">8</span>  <span class="number">16</span>     <span class="number">25</span>     o</span><br></pre></td></tr></table></figure><h5 id="separate–将一列分离为多列"><a href="#separate–将一列分离为多列" class="headerlink" title="separate–将一列分离为多列"></a>separate–将一列分离为多列</h5><blockquote><p>separate(data, col, into, sep = “[^[:alnum:]]+”, remove = TRUE,<br>convert = FALSE, extra = “warn”, fill = “warn”, …)<br>data：为数据框<br>col：需要被拆分的列<br>into：新建的列名，为字符串向量<br>sep：被拆分列的分隔符<br>remove：是否删除被分割的列   </p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt; data1 &lt;- separate(dataNew, datehour, c(<span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;hour&#x27;</span>), sep = <span class="string">&#x27; &#x27;</span>) <span class="comment"># 江上编数据重新拆分成原样</span></span><br><span class="line">&gt; data1</span><br><span class="line">         date hour min second event</span><br><span class="line"><span class="number">1</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">01</span>    <span class="number">7</span>  <span class="number">30</span>     <span class="number">29</span>     u</span><br><span class="line"><span class="number">2</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">02</span>    <span class="number">9</span>  <span class="number">43</span>     <span class="number">36</span>     a</span><br><span class="line"><span class="number">3</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">03</span>   <span class="number">13</span>  <span class="number">58</span>     <span class="number">60</span>     l</span><br><span class="line"><span class="number">4</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">04</span>   <span class="number">20</span>  <span class="number">22</span>     <span class="number">11</span>     q</span><br><span class="line"><span class="number">5</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">05</span>    <span class="number">5</span>  <span class="number">44</span>     <span class="number">47</span>     p</span><br><span class="line"><span class="number">6</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">06</span>   <span class="number">18</span>  <span class="number">52</span>     <span class="number">37</span>     k</span><br><span class="line"><span class="number">7</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">07</span>   <span class="number">19</span>  <span class="number">12</span>     <span class="number">43</span>     r</span><br><span class="line"><span class="number">8</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">08</span>   <span class="number">12</span>  <span class="number">35</span>      <span class="number">6</span>     i</span><br><span class="line"><span class="number">9</span>  <span class="number">2019</span>-<span class="number">04</span>-<span class="number">09</span>   <span class="number">11</span>   <span class="number">7</span>     <span class="number">38</span>     e</span><br><span class="line"><span class="number">10</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">10</span>    <span class="number">1</span>  <span class="number">14</span>     <span class="number">21</span>     b</span><br><span class="line"><span class="number">11</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">11</span>    <span class="number">3</span>  <span class="number">20</span>     <span class="number">42</span>     w</span><br><span class="line"><span class="number">12</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">12</span>   <span class="number">14</span>   <span class="number">1</span>     <span class="number">32</span>     t</span><br><span class="line"><span class="number">13</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">13</span>   <span class="number">23</span>  <span class="number">19</span>     <span class="number">52</span>     h</span><br><span class="line"><span class="number">14</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">14</span>   <span class="number">21</span>  <span class="number">41</span>     <span class="number">26</span>     s</span><br><span class="line"><span class="number">15</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">15</span>    <span class="number">8</span>  <span class="number">16</span>     <span class="number">25</span>     o</span><br></pre></td></tr></table></figure><p><code>separate_rows</code>可以间该数据分割后储存在同一列  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(table3)</span><br><span class="line"><span class="comment"># A tibble: 6 x 3</span></span><br><span class="line">  country      year rate             </span><br><span class="line">  &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;            </span><br><span class="line"><span class="number">1</span> Afghanistan  <span class="number">1999</span> <span class="number">745</span>/<span class="number">19987071</span>     </span><br><span class="line"><span class="number">2</span> Afghanistan  <span class="number">2000</span> <span class="number">2666</span>/<span class="number">20595360</span>    </span><br><span class="line"><span class="number">3</span> Brazil       <span class="number">1999</span> <span class="number">37737</span>/<span class="number">172006362</span>  </span><br><span class="line"><span class="number">4</span> Brazil       <span class="number">2000</span> <span class="number">80488</span>/<span class="number">174504898</span>  </span><br><span class="line"><span class="number">5</span> China        <span class="number">1999</span> <span class="number">212258</span>/<span class="number">1272915272</span></span><br><span class="line"><span class="number">6</span> China        <span class="number">2000</span> <span class="number">213766</span>/<span class="number">1280428583</span></span><br><span class="line">&gt; separate_rows(table3, rate)</span><br><span class="line"><span class="comment"># A tibble: 12 x 3</span></span><br><span class="line">   country      year rate      </span><br><span class="line">   &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;     </span><br><span class="line"> <span class="number">1</span> Afghanistan  <span class="number">1999</span> <span class="number">745</span>       </span><br><span class="line"> <span class="number">2</span> Afghanistan  <span class="number">1999</span> <span class="number">19987071</span>  </span><br><span class="line"> <span class="number">3</span> Afghanistan  <span class="number">2000</span> <span class="number">2666</span>      </span><br><span class="line"> <span class="number">4</span> Afghanistan  <span class="number">2000</span> <span class="number">20595360</span>  </span><br><span class="line"> <span class="number">5</span> Brazil       <span class="number">1999</span> <span class="number">37737</span>     </span><br><span class="line"> <span class="number">6</span> Brazil       <span class="number">1999</span> <span class="number">172006362</span> </span><br><span class="line"> <span class="number">7</span> Brazil       <span class="number">2000</span> <span class="number">80488</span>     </span><br><span class="line"> <span class="number">8</span> Brazil       <span class="number">2000</span> <span class="number">174504898</span> </span><br><span class="line"> <span class="number">9</span> China        <span class="number">1999</span> <span class="number">212258</span>    </span><br><span class="line"><span class="number">10</span> China        <span class="number">1999</span> <span class="number">1272915272</span></span><br><span class="line"><span class="number">11</span> China        <span class="number">2000</span> <span class="number">213766</span>    </span><br><span class="line"><span class="number">12</span> China        <span class="number">2000</span> <span class="number">1280428583</span></span><br></pre></td></tr></table></figure><h4 id="数据拓展"><a href="#数据拓展" class="headerlink" title="数据拓展"></a>数据拓展</h4><h5 id="complete–创建组合table"><a href="#complete–创建组合table" class="headerlink" title="complete–创建组合table"></a>complete–创建组合table</h5><p><code>complete</code>和<code>expand</code>都会创建出一个包含所有组合的tibble，只是两者得到的结果是不一样的  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt; complete(mtcars, cyl, gear, carb)</span><br><span class="line"><span class="comment"># A tibble: 74 x 12</span></span><br><span class="line">     cyl  gear  carb car        mpg  disp    hp  drat    wt  qsec    vs    am</span><br><span class="line">   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</span><br><span class="line"> <span class="number">1</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">1</span> Toyota ~  <span class="number">21.5</span> <span class="number">120.</span>     <span class="number">97</span>  <span class="number">3.7</span>   <span class="number">2.46</span>  <span class="number">20.0</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line"> <span class="number">2</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">2</span> <span class="literal">NA</span>        <span class="literal">NA</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="literal">NA</span>    <span class="literal">NA</span>     <span class="literal">NA</span>      <span class="literal">NA</span>    <span class="literal">NA</span></span><br><span class="line"> <span class="number">3</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">3</span> <span class="literal">NA</span>        <span class="literal">NA</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="literal">NA</span>    <span class="literal">NA</span>     <span class="literal">NA</span>      <span class="literal">NA</span>    <span class="literal">NA</span></span><br><span class="line"> <span class="number">4</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">4</span> <span class="literal">NA</span>        <span class="literal">NA</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="literal">NA</span>    <span class="literal">NA</span>     <span class="literal">NA</span>      <span class="literal">NA</span>    <span class="literal">NA</span></span><br><span class="line"> <span class="number">5</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">6</span> <span class="literal">NA</span>        <span class="literal">NA</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="literal">NA</span>    <span class="literal">NA</span>     <span class="literal">NA</span>      <span class="literal">NA</span>    <span class="literal">NA</span></span><br><span class="line"> <span class="number">6</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">8</span> <span class="literal">NA</span>        <span class="literal">NA</span>    <span class="literal">NA</span>      <span class="literal">NA</span> <span class="literal">NA</span>    <span class="literal">NA</span>     <span class="literal">NA</span>      <span class="literal">NA</span>    <span class="literal">NA</span></span><br><span class="line"> <span class="number">7</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">1</span> Datsun ~  <span class="number">22.8</span> <span class="number">108</span>      <span class="number">93</span>  <span class="number">3.85</span>  <span class="number">2.32</span>  <span class="number">18.6</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"> <span class="number">8</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">1</span> Fiat <span class="number">128</span>  <span class="number">32.4</span>  <span class="number">78.7</span>    <span class="number">66</span>  <span class="number">4.08</span>  <span class="number">2.2</span>   <span class="number">19.5</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"> <span class="number">9</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">1</span> Toyota ~  <span class="number">33.9</span>  <span class="number">71.1</span>    <span class="number">65</span>  <span class="number">4.22</span>  <span class="number">1.84</span>  <span class="number">19.9</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"><span class="number">10</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">1</span> Fiat X1~  <span class="number">27.3</span>  <span class="number">79</span>      <span class="number">66</span>  <span class="number">4.08</span>  <span class="number">1.94</span>  <span class="number">18.9</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"><span class="comment"># ... with 64 more rows</span></span><br><span class="line">&gt; expand(mtcars, cyl, gear, carb)</span><br><span class="line"><span class="comment"># A tibble: 54 x 3</span></span><br><span class="line">     cyl  gear  carb</span><br><span class="line">   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</span><br><span class="line"> <span class="number">1</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">1</span></span><br><span class="line"> <span class="number">2</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">2</span></span><br><span class="line"> <span class="number">3</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">3</span></span><br><span class="line"> <span class="number">4</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">4</span></span><br><span class="line"> <span class="number">5</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">6</span></span><br><span class="line"> <span class="number">6</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">8</span></span><br><span class="line"> <span class="number">7</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">1</span></span><br><span class="line"> <span class="number">8</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">2</span></span><br><span class="line"> <span class="number">9</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">3</span></span><br><span class="line"><span class="number">10</span>     <span class="number">4</span>     <span class="number">4</span>     <span class="number">4</span></span><br><span class="line"><span class="comment"># ... with 44 more rows</span></span><br></pre></td></tr></table></figure><h4 id="缺失值处理"><a href="#缺失值处理" class="headerlink" title="缺失值处理"></a>缺失值处理</h4><h5 id="drop-na–去掉包含NA的某些行"><a href="#drop-na–去掉包含NA的某些行" class="headerlink" title="drop_na–去掉包含NA的某些行"></a>drop_na–去掉包含NA的某些行</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(dplyr)</span><br><span class="line">&gt; df &lt;- tibble(x = c(<span class="number">1</span>, <span class="number">2</span>, <span class="literal">NA</span>), y = c(<span class="string">&quot;a&quot;</span>, <span class="literal">NA</span>, <span class="string">&quot;b&quot;</span>))</span><br><span class="line">&gt; df</span><br><span class="line"><span class="comment"># A tibble: 3 x 2</span></span><br><span class="line">      x y    </span><br><span class="line">  &lt;dbl&gt; &lt;chr&gt;</span><br><span class="line"><span class="number">1</span>     <span class="number">1</span> a    </span><br><span class="line"><span class="number">2</span>     <span class="number">2</span> <span class="literal">NA</span>   </span><br><span class="line"><span class="number">3</span>    <span class="literal">NA</span> b  </span><br><span class="line">&gt; drop_na(df, x) <span class="comment"># 去掉x列包含NA的行</span></span><br><span class="line"><span class="comment"># A tibble: 2 x 2</span></span><br><span class="line">      x y    </span><br><span class="line">  &lt;dbl&gt; &lt;chr&gt;</span><br><span class="line"><span class="number">1</span>     <span class="number">1</span> a    </span><br><span class="line"><span class="number">2</span>     <span class="number">2</span> <span class="literal">NA</span> </span><br></pre></td></tr></table></figure><h5 id="fill–根据就近的非NA值补充NA数据"><a href="#fill–根据就近的非NA值补充NA数据" class="headerlink" title="fill–根据就近的非NA值补充NA数据"></a>fill–根据就近的非NA值补充NA数据</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt; df &lt;- data.frame(x1 = LETTERS[<span class="number">1</span>:<span class="number">5</span>], x2 =c(<span class="number">1</span>, <span class="literal">NA</span>, <span class="literal">NA</span>, <span class="number">3</span>, <span class="literal">NA</span>))</span><br><span class="line">&gt; df</span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  B <span class="literal">NA</span></span><br><span class="line"><span class="number">3</span>  C <span class="literal">NA</span></span><br><span class="line"><span class="number">4</span>  D  <span class="number">3</span></span><br><span class="line"><span class="number">5</span>  E <span class="literal">NA</span></span><br><span class="line">&gt; fill(df, x2)</span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">1</span></span><br><span class="line"><span class="number">3</span>  C  <span class="number">1</span></span><br><span class="line"><span class="number">4</span>  D  <span class="number">3</span></span><br><span class="line"><span class="number">5</span>  E  <span class="number">3</span></span><br><span class="line">&gt; fill(df, x2, .direction = <span class="string">&quot;up&quot;</span>)</span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">3</span></span><br><span class="line"><span class="number">3</span>  C  <span class="number">3</span></span><br><span class="line"><span class="number">4</span>  D  <span class="number">3</span></span><br><span class="line"><span class="number">5</span>  E <span class="literal">NA</span></span><br><span class="line">&gt; fill(df, x2, .direction = <span class="string">&quot;down&quot;</span>)</span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">1</span></span><br><span class="line"><span class="number">3</span>  C  <span class="number">1</span></span><br><span class="line"><span class="number">4</span>  D  <span class="number">3</span></span><br><span class="line"><span class="number">5</span>  E  <span class="number">3</span></span><br></pre></td></tr></table></figure><h5 id="replace-na–取代缺失值"><a href="#replace-na–取代缺失值" class="headerlink" title="replace_na–取代缺失值"></a>replace_na–取代缺失值</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; replace_na(df, list(x2 = <span class="number">2</span>))</span><br><span class="line">  x1 x2</span><br><span class="line"><span class="number">1</span>  A  <span class="number">1</span></span><br><span class="line"><span class="number">2</span>  B  <span class="number">2</span></span><br><span class="line"><span class="number">3</span>  C  <span class="number">2</span></span><br><span class="line"><span class="number">4</span>  D  <span class="number">3</span></span><br><span class="line"><span class="number">5</span>  E  <span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> tidyverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux screen 命令使用</title>
      <link href="2019/04/04/screen/"/>
      <url>2019/04/04/screen/</url>
      
        <content type="html"><![CDATA[<h3 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h3><p><code>screen</code> 是一个非常有用的命令，提供从单个 SSH 会话中使用多个 shell 窗口（会话）的能力。当会话被分离或网络中断时，screen 会话中启动的进程仍将运行，你可以随时重新连接到 screen 会话。如果你想运行一个持久的进程或者从多个位置连接到 shell 会话，这也很方便。  </p><h4 id="安装screen"><a href="#安装screen" class="headerlink" title="安装screen"></a>安装screen</h4><p><code>screen</code> 在一些流行的发行版上已经预安装了。你可以使用下面的命令检查是否已经在你的服务器上安装了。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen -v</span><br><span class="line">Screen version 4.04.00 (GNU) 19-Jun-16</span><br></pre></td></tr></table></figure><p>如果没有，可以直接使用包管理器进行安装  </p><h4 id="启动-screen-会话"><a href="#启动-screen-会话" class="headerlink" title="启动 screen 会话"></a>启动 screen 会话</h4><p>你可以在命令行中输入 <code>screen</code> 来启动它，接着会有一个看上去和命令行提示符一样的 <code>screen</code> 会话启动  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen</span><br></pre></td></tr></table></figure><p>使用描述性名称启动屏幕会话是一个很好的做法，这样你可以轻松地记住会话中正在运行的进程。要使用会话名称创建新会话，请运行以下命令：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -S yourname</span><br></pre></td></tr></table></figure><h4 id="screen-会话分离"><a href="#screen-会话分离" class="headerlink" title="screen 会话分离"></a>screen 会话分离</h4><p>要从当前的 screen 会话中分离，你可以按下 <code>Ctrl-A</code> 和 <code>d</code>。所有的 screen 会话仍将是活跃的，你之后可以随时重新连接。  </p><h4 id="重新连接到-screen-会话"><a href="#重新连接到-screen-会话" class="headerlink" title="重新连接到 screen 会话"></a>重新连接到 screen 会话</h4><p>如果你从一个会话分离，或者由于某些原因你的连接被中断了，你可以使用下面的命令重新连接：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -r</span><br></pre></td></tr></table></figure><p>如果你有多个 screen 会话，你可以用 <code>ls</code> 参数列出它们。  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">screen -ls</span><br><span class="line">There are screens on:</span><br><span class="line">7880.session    (Detached)</span><br><span class="line">7934.session2   (Detached)</span><br><span class="line">2 Sockets in /var/run/screen/S-root.</span><br></pre></td></tr></table></figure><p>如果你想要还原 “session2” 会话，你可以执行：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">screen -r 7934</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">或者：  </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">screen -r -S session2</span><br></pre></td></tr></table></figure><h4 id="中止-screen"><a href="#中止-screen" class="headerlink" title="中止 screen"></a>中止 screen</h4><p>你可以按下 <code>Ctrl+d</code>，或者在命令行中使用 <code>exit</code> 命令。  </p><h4 id="更多语法"><a href="#更多语法" class="headerlink" title="更多语法"></a>更多语法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">man screen</span><br><span class="line">NAME</span><br><span class="line">screen - screen manager with VT100/ANSI terminal emulation</span><br><span class="line">SYNOPSIS</span><br><span class="line">screen [ -options ] [ cmd [ args ] ]</span><br><span class="line">screen -r [[pid.]tty[.host]]</span><br><span class="line">screen -r sessionowner/[[pid.]tty[.host]]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Screen命令的使用</title>
      <link href="2019/04/04/screen-i/"/>
      <url>2019/04/04/screen-i/</url>
      
        <content type="html"><![CDATA[<p>screen常用命令</p><a id="more"></a><p>使用telnet或SSH远程登录linux时，如果连接非正常中断，重新连接时，系统将开一个新的session，无法恢复原来的 session.screen命令可以解决这个问题。Screen工具是一个终端多路转接器，在本质上，这意味着你能够使用一个单一的终端窗口运行多终端的应用。  </p><p>screen命令介绍   </p><ol><li>screen -S  创建一个screen（可以用screen -S ID，打开一个指定的ID session）</li><li>screen -ls 显示所有的screen会话  </li><li>screen -d  脱离当前screen ,返回正常shell  </li><li>screen -r  进入指定screen  </li><li>screen -S SEEION_NAME -X quit 删除镜像  </li></ol><p>Screen 操作快捷键  </p><ul><li>ctrl-a c：创建一个新的 Shell  </li><li>ctrl-a ctrl-a：在 Shell 间切换  </li><li>ctrl-a n：切换到下一个 Shell  </li><li>ctrl-a p：切换到上一个 Shell  </li><li>ctrl-a 0…9：同样是切换各个 Shell  </li><li>ctrl-a d：退出 Screen 会话  </li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> screen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R的文件操作</title>
      <link href="2019/04/01/file-r/"/>
      <url>2019/04/01/file-r/</url>
      
        <content type="html"><![CDATA[<p>在R中操作文件  </p><a id="more"></a>  <h2 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h2><h3 id="查看目录"><a href="#查看目录" class="headerlink" title="查看目录"></a>查看目录</h3><p><code>getwd()</code> 列出当前工作路径  </p><p><code>setwd()</code> 设置工作路径  </p><p><code>list.files()</code>和<code>dir()</code>的用法相同，可以列出路径下的文件和目录  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">list.files(path =<span class="string">&quot;.&quot;</span>, pattern = <span class="literal">NULL</span>, all.files = <span class="literal">FALSE</span>,</span><br><span class="line"></span><br><span class="line">           full.names = <span class="literal">FALSE</span>, recursive =<span class="literal">FALSE</span>,</span><br><span class="line"></span><br><span class="line">           ignore.case = <span class="literal">FALSE</span>, include.dirs =<span class="literal">FALSE</span>, no.. = <span class="literal">FALSE</span>)</span><br><span class="line"></span><br><span class="line">dir(path =<span class="string">&quot;.&quot;</span>, pattern = <span class="literal">NULL</span>, all.files = <span class="literal">FALSE</span>,</span><br><span class="line"></span><br><span class="line">    full.names = <span class="literal">FALSE</span>, recursive = <span class="literal">FALSE</span>,</span><br><span class="line"></span><br><span class="line">    ignore.case = <span class="literal">FALSE</span>, include.dirs = <span class="literal">FALSE</span>,no.. = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><p>函数<code>list.dirs()</code>只列出路径下所有目录,默认是递归进行的  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.dirs(path = <span class="string">&quot;.&quot;</span>, full.names = <span class="literal">TRUE</span>, recursive = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><p>参数介绍：</p><p><code>path</code> 路径，如不填则默认为当前工作路径，即<code>getwd()</code>得到的路径；<br><code>pattern</code> 正则表达式，若<code>pattern</code>不为<code>NULL</code>，返回文件（目录）名满足该正则表达式的文件（目录）；<br><code>all.files </code>若为<code>FALSE</code>则不显示隐藏文件（目录），若为<code>TRUE</code>则返回所有文件（目录）；<br><code>full.names</code> 若为<code>FALSE</code>则只返回文件（目录）名，若为<code>TRUE</code>则返回文件（目录）路径；<br><code>recursive</code> 若为<code>FALSE</code>则只返回该路径的子级文件（目录），若为<code>TRUE</code>则递归返回所有子、孙文件（目录）；<br><code>ignore.case</code> 若为<code>TRUE</code>则在匹配pattern时不区分大小写；<br><code>include.dirs</code> 在recursive为TURE，即显示所有子、孙文件时，若<code>include.dirs</code>为FALSE则只列出最终端的文件名，而不列出中间层级的目录名；<br><code>no.. </code>若为TRUE，则不显示“.”和“..”。  </p><h3 id="查看目录的权限"><a href="#查看目录的权限" class="headerlink" title="查看目录的权限"></a>查看目录的权限</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; file.info(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">  size isdir mode               mtime               ctime               atime exe</span><br><span class="line">.    <span class="number">0</span>  <span class="literal">TRUE</span>  <span class="number">555</span> <span class="number">2019</span>-<span class="number">03</span>-<span class="number">13</span> <span class="number">08</span>:<span class="number">10</span>:<span class="number">19</span> <span class="number">2018</span>-<span class="number">10</span>-<span class="number">13</span> <span class="number">17</span>:<span class="number">14</span>:<span class="number">40</span> <span class="number">2019</span>-<span class="number">04</span>-<span class="number">01</span> <span class="number">18</span>:<span class="number">54</span>:<span class="number">24</span>  no</span><br></pre></td></tr></table></figure><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><h4 id="创建单个目录"><a href="#创建单个目录" class="headerlink" title="创建单个目录"></a>创建单个目录</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; dir.create(<span class="string">&quot;create&quot;</span>)</span><br><span class="line">&gt; list.dirs()</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;.&quot;</span>        <span class="string">&quot;./create&quot;</span> <span class="string">&quot;./tmp&quot;</span></span><br></pre></td></tr></table></figure><h4 id="递归创建目录"><a href="#递归创建目录" class="headerlink" title="递归创建目录"></a>递归创建目录</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; dir.create(path=<span class="string">&quot;a1/b2/c3&quot;</span>,recursive = <span class="literal">TRUE</span>)</span><br><span class="line">&gt; list.dirs()</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;.&quot;</span>          <span class="string">&quot;./a1&quot;</span>       <span class="string">&quot;./a1/b2&quot;</span>    <span class="string">&quot;./a1/b2/c3&quot;</span> <span class="string">&quot;./create&quot;</span>  <span class="string">&quot;./tmp&quot;</span></span><br></pre></td></tr></table></figure><h4 id="检测目录是否存在"><a href="#检测目录是否存在" class="headerlink" title="检测目录是否存在"></a>检测目录是否存在</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; file.exists(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><h4 id="检查目录的权限"><a href="#检查目录的权限" class="headerlink" title="检查目录的权限"></a>检查目录的权限</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; df &lt;- dir(file.path(R.home(), <span class="string">&quot;bin&quot;</span>), full.names = <span class="literal">T</span>)</span><br><span class="line">&gt; file.access(df, mode = <span class="number">0</span>) == <span class="number">0</span></span><br><span class="line">  D:/Rcore/bin/config.sh       D:/Rcore/bin/R.exe D:/Rcore/bin/Rscript.exe </span><br><span class="line">                    <span class="literal">TRUE</span>                     <span class="literal">TRUE</span>                     <span class="literal">TRUE</span> </span><br><span class="line">        D:/Rcore/bin/x64 </span><br><span class="line">                    <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><p>mode = 0, 检查文件或目录是否存在<br>mode = 1, 检查文件或目录是否可执行<br>mode = 2, 检查文件或目录是否可写<br>mode = 4, 检查文件或目录是否可读  </p><blockquote><p>file.access()返回的是逻辑值，file.info()返回的是详细的权限信息  </p></blockquote><h4 id="修改目录权限"><a href="#修改目录权限" class="headerlink" title="修改目录权限"></a>修改目录权限</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Sys.chmod(list.dirs(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;777&quot;</span>)</span><br><span class="line">f &lt;- list.files(<span class="string">&quot;.&quot;</span>, all.files = <span class="literal">TRUE</span>, full.names = <span class="literal">TRUE</span>, recursive = <span class="literal">TRUE</span>)</span><br><span class="line">Sys.chmod(f, (file.info(f)$mode | <span class="string">&quot;664&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="对目录重名"><a href="#对目录重名" class="headerlink" title="对目录重名"></a>对目录重名</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对tmp目录重命名</span></span><br><span class="line">&gt; file.rename(<span class="string">&quot;tmp&quot;</span>, <span class="string">&quot;tmp2&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><h4 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除tmp2目录</span></span><br><span class="line">&gt; unlink(<span class="string">&quot;tmp2&quot;</span>, recursive = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h4 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拼接目录字符串</span></span><br><span class="line">&gt; file.path(<span class="string">&quot;p1&quot;</span>,<span class="string">&quot;p2&quot;</span>,<span class="string">&quot;p3&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;p1/p2/p3&quot;</span></span><br><span class="line"><span class="comment"># 最底层子目录或文件名</span></span><br><span class="line">&gt; filename&lt;-<span class="string">&#x27;C:/test/lalala.txt&#x27;</span></span><br><span class="line">&gt; basename(filename)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;lalala.txt&quot;</span></span><br><span class="line"><span class="comment"># 最底层子目录</span></span><br><span class="line">&gt; dirname(filename)r</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;C:/test&quot;</span></span><br><span class="line"><span class="comment"># 转换扩展路径</span></span><br><span class="line">&gt; path.expand(<span class="string">&quot;~/foo&quot;</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">&quot;/home/conan/foo&quot;</span></span><br></pre></td></tr></table></figure><h2 id="常规文件操作"><a href="#常规文件操作" class="headerlink" title="常规文件操作"></a>常规文件操作</h2><p>cat(“file A\n”, file=”A”) #创建一个文件A，文件内容是’file A’,’\n’表示换行，这是一个很好的习惯</p><p>cat(“file B\n”, file=”B”) #创建一个文件B</p><p>file.append(“A”, “B”) #将文件B的内容附到A内容的后面，注意没有空行</p><p>file.create(“A”) #创建一个文件A, 注意会覆盖原来的文件</p><p>file.append(“A”, rep(“B”, 10)) #将文件B的内容复制10便，并先后附到文件A内容后</p><p>file.show(“A”) #新开工作窗口显示文件A的内容</p><p>file.copy(“A”, “C”) #复制文件A保存为C文件，同一个文件夹</p><p>dir.create(“tmp”) #创建名为tmp的文件夹</p><p>file.copy(c(“A”, “B”), “tmp”) #将文件夹拷贝到tmp文件夹中</p><p>list.files(“tmp”) #查看文件夹tmp中的文件名</p><p>unlink(“tmp”, recursive=F) #如果文件夹tmp为空，删除文件夹tmp</p><p>unlink(“tmp”, recursive=TRUE) #删除文件夹tmp，如果其中有文件一并删除</p><p>file.remove(“A”, “B”, “C”) #移除三个文件  </p><h2 id="特殊目录"><a href="#特殊目录" class="headerlink" title="特殊目录"></a>特殊目录</h2><ul><li>R.home() 查看R软件的相关目录</li><li>.Library 查看R核心包的目录</li><li>.Library.site 查看R核心包的目录和root用户安装包目录</li><li>.libPaths() 查看R所有包的存放目录</li><li>system.file() 查看指定包所在的目录  </li></ul>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>emoji表情收集</title>
      <link href="2019/03/31/emoji/"/>
      <url>2019/03/31/emoji/</url>
      
        <content type="html"><![CDATA[<h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ul><li><a href="#table-of-contents">Table of Contents</a><ul><li><a href="#people">People</a></li><li><a href="#nature">Nature</a></li><li><a href="#objects">Objects</a></li><li><a href="#places">Places</a></li><li><a href="#symbols">Symbols</a></li><li><a href="#uncategorized">Uncategorized</a></li></ul></li></ul><h3 id="People"><a href="#People" class="headerlink" title="People"></a>People</h3><table><thead><tr><th></th><th>ico</th><th>emoji</th><th>ico</th><th>emoji</th></tr></thead><tbody><tr><td><a href="#table-of-contents">top</a></td><td>:bowtie:</td><td><code>:bowtie:</code></td><td>:smile:</td><td><code>:smile:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:laughing:</td><td><code>:laughing:</code></td><td>:blush:</td><td><code>:blush:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:smiley:</td><td><code>:smiley:</code></td><td>:relaxed:</td><td><code>:relaxed:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:smirk:</td><td><code>:smirk:</code></td><td>:heart_eyes:</td><td><code>:heart_eyes:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:kissing_heart:</td><td><code>:kissing_heart:</code></td><td>:kissing_closed_eyes:</td><td><code>:kissing_closed_eyes:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:flushed:</td><td><code>:flushed:</code></td><td>:relieved:</td><td><code>:relieved:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:satisfied:</td><td><code>:satisfied:</code></td><td>:grin:</td><td><code>:grin:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:wink:</td><td><code>:wink:</code></td><td>:stuck_out_tongue_winking_eye:</td><td><code>:stuck_out_tongue_winking_eye:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:stuck_out_tongue_closed_eyes:</td><td><code>:stuck_out_tongue_closed_eyes:</code></td><td>:grinning:</td><td><code>:grinning:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:kissing:</td><td><code>:kissing:</code></td><td>:kissing_smiling_eyes:</td><td><code>:kissing_smiling_eyes:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:stuck_out_tongue:</td><td><code>:stuck_out_tongue:</code></td><td>:sleeping:</td><td><code>:sleeping:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:worried:</td><td><code>:worried:</code></td><td>:frowning:</td><td><code>:frowning:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:anguished:</td><td><code>:anguished:</code></td><td>:open_mouth:</td><td><code>:open_mouth:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:grimacing:</td><td><code>:grimacing:</code></td><td>:confused:</td><td><code>:confused:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hushed:</td><td><code>:hushed:</code></td><td>:expressionless:</td><td><code>:expressionless:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:unamused:</td><td><code>:unamused:</code></td><td>:sweat_smile:</td><td><code>:sweat_smile:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sweat:</td><td><code>:sweat:</code></td><td>:disappointed_relieved:</td><td><code>:disappointed_relieved:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:weary:</td><td><code>:weary:</code></td><td>:pensive:</td><td><code>:pensive:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:disappointed:</td><td><code>:disappointed:</code></td><td>:confounded:</td><td><code>:confounded:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fearful:</td><td><code>:fearful:</code></td><td>:cold_sweat:</td><td><code>:cold_sweat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:persevere:</td><td><code>:persevere:</code></td><td>:cry:</td><td><code>:cry:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sob:</td><td><code>:sob:</code></td><td>:joy:</td><td><code>:joy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:astonished:</td><td><code>:astonished:</code></td><td>:scream:</td><td><code>:scream:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:neckbeard:</td><td><code>:neckbeard:</code></td><td>:tired_face:</td><td><code>:tired_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:angry:</td><td><code>:angry:</code></td><td>:rage:</td><td><code>:rage:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:triumph:</td><td><code>:triumph:</code></td><td>:sleepy:</td><td><code>:sleepy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:yum:</td><td><code>:yum:</code></td><td>:mask:</td><td><code>:mask:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sunglasses:</td><td><code>:sunglasses:</code></td><td>:dizzy_face:</td><td><code>:dizzy_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:imp:</td><td><code>:imp:</code></td><td>:smiling_imp:</td><td><code>:smiling_imp:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:neutral_face:</td><td><code>:neutral_face:</code></td><td>:no_mouth:</td><td><code>:no_mouth:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:innocent:</td><td><code>:innocent:</code></td><td>:alien:</td><td><code>:alien:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:yellow_heart:</td><td><code>:yellow_heart:</code></td><td>:blue_heart:</td><td><code>:blue_heart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:purple_heart:</td><td><code>:purple_heart:</code></td><td>:heart:</td><td><code>:heart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:green_heart:</td><td><code>:green_heart:</code></td><td>:broken_heart:</td><td><code>:broken_heart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heartbeat:</td><td><code>:heartbeat:</code></td><td>:heartpulse:</td><td><code>:heartpulse:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:two_hearts:</td><td><code>:two_hearts:</code></td><td>:revolving_hearts:</td><td><code>:revolving_hearts:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cupid:</td><td><code>:cupid:</code></td><td>:sparkling_heart:</td><td><code>:sparkling_heart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sparkles:</td><td><code>:sparkles:</code></td><td>:star:</td><td><code>:star:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:star2:</td><td><code>:star2:</code></td><td>:dizzy:</td><td><code>:dizzy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:boom:</td><td><code>:boom:</code></td><td>:collision:</td><td><code>:collision:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:anger:</td><td><code>:anger:</code></td><td>:exclamation:</td><td><code>:exclamation:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:question:</td><td><code>:question:</code></td><td>:grey_exclamation:</td><td><code>:grey_exclamation:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:grey_question:</td><td><code>:grey_question:</code></td><td>:zzz:</td><td><code>:zzz:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dash:</td><td><code>:dash:</code></td><td>:sweat_drops:</td><td><code>:sweat_drops:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:notes:</td><td><code>:notes:</code></td><td>:musical_note:</td><td><code>:musical_note:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fire:</td><td><code>:fire:</code></td><td>:hankey:</td><td><code>:hankey:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:poop:</td><td><code>:poop:</code></td><td>:shit:</td><td><code>:shit:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:+1:</td><td><code>:+1:</code></td><td>:thumbsup:</td><td><code>:thumbsup:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:-1:</td><td><code>:-1:</code></td><td>:thumbsdown:</td><td><code>:thumbsdown:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ok_hand:</td><td><code>:ok_hand:</code></td><td>:punch:</td><td><code>:punch:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:facepunch:</td><td><code>:facepunch:</code></td><td>:fist:</td><td><code>:fist:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:v:</td><td><code>:v:</code></td><td>:wave:</td><td><code>:wave:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hand:</td><td><code>:hand:</code></td><td>:raised_hand:</td><td><code>:raised_hand:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:open_hands:</td><td><code>:open_hands:</code></td><td>:point_up:</td><td><code>:point_up:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:point_down:</td><td><code>:point_down:</code></td><td>:point_left:</td><td><code>:point_left:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:point_right:</td><td><code>:point_right:</code></td><td>:raised_hands:</td><td><code>:raised_hands:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pray:</td><td><code>:pray:</code></td><td>:point_up_2:</td><td><code>:point_up_2:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clap:</td><td><code>:clap:</code></td><td>:muscle:</td><td><code>:muscle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:metal:</td><td><code>:metal:</code></td><td>:fu:</td><td><code>:fu:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:runner:</td><td><code>:runner:</code></td><td>:running:</td><td><code>:running:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:couple:</td><td><code>:couple:</code></td><td>:family:</td><td><code>:family:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:two_men_holding_hands:</td><td><code>:two_men_holding_hands:</code></td><td>:two_women_holding_hands:</td><td><code>:two_women_holding_hands:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dancer:</td><td><code>:dancer:</code></td><td>:dancers:</td><td><code>:dancers:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ok_woman:</td><td><code>:ok_woman:</code></td><td>:no_good:</td><td><code>:no_good:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:information_desk_person:</td><td><code>:information_desk_person:</code></td><td>:raising_hand:</td><td><code>:raising_hand:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bride_with_veil:</td><td><code>:bride_with_veil:</code></td><td>:person_with_pouting_face:</td><td><code>:person_with_pouting_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:person_frowning:</td><td><code>:person_frowning:</code></td><td>:bow:</td><td><code>:bow:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:couple_with_heart:</td><td><code>:couple_with_heart:</code></td><td>:massage:</td><td><code>:massage:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:haircut:</td><td><code>:haircut:</code></td><td>:nail_care:</td><td><code>:nail_care:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:boy:</td><td><code>:boy:</code></td><td>:girl:</td><td><code>:girl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman:</td><td><code>:woman:</code></td><td>:man:</td><td><code>:man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:baby:</td><td><code>:baby:</code></td><td>:older_woman:</td><td><code>:older_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:older_man:</td><td><code>:older_man:</code></td><td>:person_with_blond_hair:</td><td><code>:person_with_blond_hair:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_with_gua_pi_mao:</td><td><code>:man_with_gua_pi_mao:</code></td><td>:man_with_turban:</td><td><code>:man_with_turban:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:construction_worker:</td><td><code>:construction_worker:</code></td><td>:cop:</td><td><code>:cop:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:angel:</td><td><code>:angel:</code></td><td>:princess:</td><td><code>:princess:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:smiley_cat:</td><td><code>:smiley_cat:</code></td><td>:smile_cat:</td><td><code>:smile_cat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heart_eyes_cat:</td><td><code>:heart_eyes_cat:</code></td><td>:kissing_cat:</td><td><code>:kissing_cat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:smirk_cat:</td><td><code>:smirk_cat:</code></td><td>:scream_cat:</td><td><code>:scream_cat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:crying_cat_face:</td><td><code>:crying_cat_face:</code></td><td>:joy_cat:</td><td><code>:joy_cat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pouting_cat:</td><td><code>:pouting_cat:</code></td><td>:japanese_ogre:</td><td><code>:japanese_ogre:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:japanese_goblin:</td><td><code>:japanese_goblin:</code></td><td>:see_no_evil:</td><td><code>:see_no_evil:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hear_no_evil:</td><td><code>:hear_no_evil:</code></td><td>:speak_no_evil:</td><td><code>:speak_no_evil:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:guardsman:</td><td><code>:guardsman:</code></td><td>:skull:</td><td><code>:skull:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:feet:</td><td><code>:feet:</code></td><td>:lips:</td><td><code>:lips:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:kiss:</td><td><code>:kiss:</code></td><td>:droplet:</td><td><code>:droplet:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ear:</td><td><code>:ear:</code></td><td>:eyes:</td><td><code>:eyes:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:nose:</td><td><code>:nose:</code></td><td>:tongue:</td><td><code>:tongue:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:love_letter:</td><td><code>:love_letter:</code></td><td>:bust_in_silhouette:</td><td><code>:bust_in_silhouette:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:busts_in_silhouette:</td><td><code>:busts_in_silhouette:</code></td><td>:speech_balloon:</td><td><code>:speech_balloon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:thought_balloon:</td><td><code>:thought_balloon:</code></td><td>:feelsgood:</td><td><code>:feelsgood:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:finnadie:</td><td><code>:finnadie:</code></td><td>:goberserk:</td><td><code>:goberserk:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:godmode:</td><td><code>:godmode:</code></td><td>:hurtrealbad:</td><td><code>:hurtrealbad:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rage1:</td><td><code>:rage1:</code></td><td>:rage2:</td><td><code>:rage2:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rage3:</td><td><code>:rage3:</code></td><td>:rage4:</td><td><code>:rage4:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:suspect:</td><td><code>:suspect:</code></td><td>:trollface:</td><td><code>:trollface:</code></td></tr></tbody></table><h3 id="Nature"><a href="#Nature" class="headerlink" title="Nature"></a>Nature</h3><table><thead><tr><th></th><th>ico</th><th>emoji</th><th>ico</th><th>emoji</th></tr></thead><tbody><tr><td><a href="#table-of-contents">top</a></td><td>:sunny:</td><td><code>:sunny:</code></td><td>:umbrella:</td><td><code>:umbrella:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cloud:</td><td><code>:cloud:</code></td><td>:snowflake:</td><td><code>:snowflake:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:snowman:</td><td><code>:snowman:</code></td><td>:zap:</td><td><code>:zap:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cyclone:</td><td><code>:cyclone:</code></td><td>:foggy:</td><td><code>:foggy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ocean:</td><td><code>:ocean:</code></td><td>:cat:</td><td><code>:cat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dog:</td><td><code>:dog:</code></td><td>:mouse:</td><td><code>:mouse:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hamster:</td><td><code>:hamster:</code></td><td>:rabbit:</td><td><code>:rabbit:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:wolf:</td><td><code>:wolf:</code></td><td>:frog:</td><td><code>:frog:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tiger:</td><td><code>:tiger:</code></td><td>:koala:</td><td><code>:koala:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bear:</td><td><code>:bear:</code></td><td>:pig:</td><td><code>:pig:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pig_nose:</td><td><code>:pig_nose:</code></td><td>:cow:</td><td><code>:cow:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:boar:</td><td><code>:boar:</code></td><td>:monkey_face:</td><td><code>:monkey_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:monkey:</td><td><code>:monkey:</code></td><td>:horse:</td><td><code>:horse:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:racehorse:</td><td><code>:racehorse:</code></td><td>:camel:</td><td><code>:camel:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sheep:</td><td><code>:sheep:</code></td><td>:elephant:</td><td><code>:elephant:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:panda_face:</td><td><code>:panda_face:</code></td><td>:snake:</td><td><code>:snake:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bird:</td><td><code>:bird:</code></td><td>:baby_chick:</td><td><code>:baby_chick:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hatched_chick:</td><td><code>:hatched_chick:</code></td><td>:hatching_chick:</td><td><code>:hatching_chick:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:chicken:</td><td><code>:chicken:</code></td><td>:penguin:</td><td><code>:penguin:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:turtle:</td><td><code>:turtle:</code></td><td>:bug:</td><td><code>:bug:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:honeybee:</td><td><code>:honeybee:</code></td><td>:ant:</td><td><code>:ant:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:beetle:</td><td><code>:beetle:</code></td><td>:snail:</td><td><code>:snail:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:octopus:</td><td><code>:octopus:</code></td><td>:tropical_fish:</td><td><code>:tropical_fish:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fish:</td><td><code>:fish:</code></td><td>:whale:</td><td><code>:whale:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:whale2:</td><td><code>:whale2:</code></td><td>:dolphin:</td><td><code>:dolphin:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cow2:</td><td><code>:cow2:</code></td><td>:ram:</td><td><code>:ram:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rat:</td><td><code>:rat:</code></td><td>:water_buffalo:</td><td><code>:water_buffalo:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tiger2:</td><td><code>:tiger2:</code></td><td>:rabbit2:</td><td><code>:rabbit2:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dragon:</td><td><code>:dragon:</code></td><td>:goat:</td><td><code>:goat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rooster:</td><td><code>:rooster:</code></td><td>:dog2:</td><td><code>:dog2:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pig2:</td><td><code>:pig2:</code></td><td>:mouse2:</td><td><code>:mouse2:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ox:</td><td><code>:ox:</code></td><td>:dragon_face:</td><td><code>:dragon_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:blowfish:</td><td><code>:blowfish:</code></td><td>:crocodile:</td><td><code>:crocodile:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dromedary_camel:</td><td><code>:dromedary_camel:</code></td><td>:leopard:</td><td><code>:leopard:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cat2:</td><td><code>:cat2:</code></td><td>:poodle:</td><td><code>:poodle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:paw_prints:</td><td><code>:paw_prints:</code></td><td>:bouquet:</td><td><code>:bouquet:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cherry_blossom:</td><td><code>:cherry_blossom:</code></td><td>:tulip:</td><td><code>:tulip:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:four_leaf_clover:</td><td><code>:four_leaf_clover:</code></td><td>:rose:</td><td><code>:rose:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sunflower:</td><td><code>:sunflower:</code></td><td>:hibiscus:</td><td><code>:hibiscus:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:maple_leaf:</td><td><code>:maple_leaf:</code></td><td>:leaves:</td><td><code>:leaves:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fallen_leaf:</td><td><code>:fallen_leaf:</code></td><td>:herb:</td><td><code>:herb:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mushroom:</td><td><code>:mushroom:</code></td><td>:cactus:</td><td><code>:cactus:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:palm_tree:</td><td><code>:palm_tree:</code></td><td>:evergreen_tree:</td><td><code>:evergreen_tree:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:deciduous_tree:</td><td><code>:deciduous_tree:</code></td><td>:chestnut:</td><td><code>:chestnut:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:seedling:</td><td><code>:seedling:</code></td><td>:blossom:</td><td><code>:blossom:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ear_of_rice:</td><td><code>:ear_of_rice:</code></td><td>:shell:</td><td><code>:shell:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:globe_with_meridians:</td><td><code>:globe_with_meridians:</code></td><td>:sun_with_face:</td><td><code>:sun_with_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:full_moon_with_face:</td><td><code>:full_moon_with_face:</code></td><td>:new_moon_with_face:</td><td><code>:new_moon_with_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:new_moon:</td><td><code>:new_moon:</code></td><td>:waxing_crescent_moon:</td><td><code>:waxing_crescent_moon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:first_quarter_moon:</td><td><code>:first_quarter_moon:</code></td><td>:waxing_gibbous_moon:</td><td><code>:waxing_gibbous_moon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:full_moon:</td><td><code>:full_moon:</code></td><td>:waning_gibbous_moon:</td><td><code>:waning_gibbous_moon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:last_quarter_moon:</td><td><code>:last_quarter_moon:</code></td><td>:waning_crescent_moon:</td><td><code>:waning_crescent_moon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:last_quarter_moon_with_face:</td><td><code>:last_quarter_moon_with_face:</code></td><td>:first_quarter_moon_with_face:</td><td><code>:first_quarter_moon_with_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:crescent_moon:</td><td><code>:crescent_moon:</code></td><td>:earth_africa:</td><td><code>:earth_africa:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:earth_americas:</td><td><code>:earth_americas:</code></td><td>:earth_asia:</td><td><code>:earth_asia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:volcano:</td><td><code>:volcano:</code></td><td>:milky_way:</td><td><code>:milky_way:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:partly_sunny:</td><td><code>:partly_sunny:</code></td><td>:octocat:</td><td><code>:octocat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:squirrel:</td><td><code>:squirrel:</code></td><td></td><td></td></tr></tbody></table><h3 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h3><table><thead><tr><th></th><th>ico</th><th>emoji</th><th>ico</th><th>emoji</th></tr></thead><tbody><tr><td><a href="#table-of-contents">top</a></td><td>:bamboo:</td><td><code>:bamboo:</code></td><td>:gift_heart:</td><td><code>:gift_heart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dolls:</td><td><code>:dolls:</code></td><td>:school_satchel:</td><td><code>:school_satchel:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mortar_board:</td><td><code>:mortar_board:</code></td><td>:flags:</td><td><code>:flags:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fireworks:</td><td><code>:fireworks:</code></td><td>:sparkler:</td><td><code>:sparkler:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:wind_chime:</td><td><code>:wind_chime:</code></td><td>:rice_scene:</td><td><code>:rice_scene:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:jack_o_lantern:</td><td><code>:jack_o_lantern:</code></td><td>:ghost:</td><td><code>:ghost:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:santa:</td><td><code>:santa:</code></td><td>:christmas_tree:</td><td><code>:christmas_tree:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:gift:</td><td><code>:gift:</code></td><td>:bell:</td><td><code>:bell:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:no_bell:</td><td><code>:no_bell:</code></td><td>:tanabata_tree:</td><td><code>:tanabata_tree:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tada:</td><td><code>:tada:</code></td><td>:confetti_ball:</td><td><code>:confetti_ball:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:balloon:</td><td><code>:balloon:</code></td><td>:crystal_ball:</td><td><code>:crystal_ball:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cd:</td><td><code>:cd:</code></td><td>:dvd:</td><td><code>:dvd:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:floppy_disk:</td><td><code>:floppy_disk:</code></td><td>:camera:</td><td><code>:camera:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:video_camera:</td><td><code>:video_camera:</code></td><td>:movie_camera:</td><td><code>:movie_camera:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:computer:</td><td><code>:computer:</code></td><td>:tv:</td><td><code>:tv:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:iphone:</td><td><code>:iphone:</code></td><td>:phone:</td><td><code>:phone:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:telephone:</td><td><code>:telephone:</code></td><td>:telephone_receiver:</td><td><code>:telephone_receiver:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pager:</td><td><code>:pager:</code></td><td>:fax:</td><td><code>:fax:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:minidisc:</td><td><code>:minidisc:</code></td><td>:vhs:</td><td><code>:vhs:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sound:</td><td><code>:sound:</code></td><td>:speaker:</td><td><code>:speaker:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mute:</td><td><code>:mute:</code></td><td>:loudspeaker:</td><td><code>:loudspeaker:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mega:</td><td><code>:mega:</code></td><td>:hourglass:</td><td><code>:hourglass:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hourglass_flowing_sand:</td><td><code>:hourglass_flowing_sand:</code></td><td>:alarm_clock:</td><td><code>:alarm_clock:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:watch:</td><td><code>:watch:</code></td><td>:radio:</td><td><code>:radio:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:satellite:</td><td><code>:satellite:</code></td><td>:loop:</td><td><code>:loop:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mag:</td><td><code>:mag:</code></td><td>:mag_right:</td><td><code>:mag_right:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:unlock:</td><td><code>:unlock:</code></td><td>:lock:</td><td><code>:lock:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:lock_with_ink_pen:</td><td><code>:lock_with_ink_pen:</code></td><td>:closed_lock_with_key:</td><td><code>:closed_lock_with_key:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:key:</td><td><code>:key:</code></td><td>:bulb:</td><td><code>:bulb:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:flashlight:</td><td><code>:flashlight:</code></td><td>:high_brightness:</td><td><code>:high_brightness:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:low_brightness:</td><td><code>:low_brightness:</code></td><td>:electric_plug:</td><td><code>:electric_plug:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:battery:</td><td><code>:battery:</code></td><td>:calling:</td><td><code>:calling:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:email:</td><td><code>:email:</code></td><td>:mailbox:</td><td><code>:mailbox:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:postbox:</td><td><code>:postbox:</code></td><td>:bath:</td><td><code>:bath:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bathtub:</td><td><code>:bathtub:</code></td><td>:shower:</td><td><code>:shower:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:toilet:</td><td><code>:toilet:</code></td><td>:wrench:</td><td><code>:wrench:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:nut_and_bolt:</td><td><code>:nut_and_bolt:</code></td><td>:hammer:</td><td><code>:hammer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:seat:</td><td><code>:seat:</code></td><td>:moneybag:</td><td><code>:moneybag:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:yen:</td><td><code>:yen:</code></td><td>:dollar:</td><td><code>:dollar:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pound:</td><td><code>:pound:</code></td><td>:euro:</td><td><code>:euro:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:credit_card:</td><td><code>:credit_card:</code></td><td>:money_with_wings:</td><td><code>:money_with_wings:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:e-mail:</td><td><code>:e-mail:</code></td><td>:inbox_tray:</td><td><code>:inbox_tray:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:outbox_tray:</td><td><code>:outbox_tray:</code></td><td>:envelope:</td><td><code>:envelope:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:incoming_envelope:</td><td><code>:incoming_envelope:</code></td><td>:postal_horn:</td><td><code>:postal_horn:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mailbox_closed:</td><td><code>:mailbox_closed:</code></td><td>:mailbox_with_mail:</td><td><code>:mailbox_with_mail:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mailbox_with_no_mail:</td><td><code>:mailbox_with_no_mail:</code></td><td>:package:</td><td><code>:package:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:door:</td><td><code>:door:</code></td><td>:smoking:</td><td><code>:smoking:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bomb:</td><td><code>:bomb:</code></td><td>:gun:</td><td><code>:gun:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hocho:</td><td><code>:hocho:</code></td><td>:pill:</td><td><code>:pill:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:syringe:</td><td><code>:syringe:</code></td><td>:page_facing_up:</td><td><code>:page_facing_up:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:page_with_curl:</td><td><code>:page_with_curl:</code></td><td>:bookmark_tabs:</td><td><code>:bookmark_tabs:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bar_chart:</td><td><code>:bar_chart:</code></td><td>:chart_with_upwards_trend:</td><td><code>:chart_with_upwards_trend:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:chart_with_downwards_trend:</td><td><code>:chart_with_downwards_trend:</code></td><td>:scroll:</td><td><code>:scroll:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clipboard:</td><td><code>:clipboard:</code></td><td>:calendar:</td><td><code>:calendar:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:date:</td><td><code>:date:</code></td><td>:card_index:</td><td><code>:card_index:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:file_folder:</td><td><code>:file_folder:</code></td><td>:open_file_folder:</td><td><code>:open_file_folder:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:scissors:</td><td><code>:scissors:</code></td><td>:pushpin:</td><td><code>:pushpin:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:paperclip:</td><td><code>:paperclip:</code></td><td>:black_nib:</td><td><code>:black_nib:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pencil2:</td><td><code>:pencil2:</code></td><td>:straight_ruler:</td><td><code>:straight_ruler:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:triangular_ruler:</td><td><code>:triangular_ruler:</code></td><td>:closed_book:</td><td><code>:closed_book:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:green_book:</td><td><code>:green_book:</code></td><td>:blue_book:</td><td><code>:blue_book:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:orange_book:</td><td><code>:orange_book:</code></td><td>:notebook:</td><td><code>:notebook:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:notebook_with_decorative_cover:</td><td><code>:notebook_with_decorative_cover:</code></td><td>:ledger:</td><td><code>:ledger:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:books:</td><td><code>:books:</code></td><td>:bookmark:</td><td><code>:bookmark:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:name_badge:</td><td><code>:name_badge:</code></td><td>:microscope:</td><td><code>:microscope:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:telescope:</td><td><code>:telescope:</code></td><td>:newspaper:</td><td><code>:newspaper:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:football:</td><td><code>:football:</code></td><td>:basketball:</td><td><code>:basketball:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:soccer:</td><td><code>:soccer:</code></td><td>:baseball:</td><td><code>:baseball:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tennis:</td><td><code>:tennis:</code></td><td>:8ball:</td><td><code>:8ball:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rugby_football:</td><td><code>:rugby_football:</code></td><td>:bowling:</td><td><code>:bowling:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:golf:</td><td><code>:golf:</code></td><td>:mountain_bicyclist:</td><td><code>:mountain_bicyclist:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bicyclist:</td><td><code>:bicyclist:</code></td><td>:horse_racing:</td><td><code>:horse_racing:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:snowboarder:</td><td><code>:snowboarder:</code></td><td>:swimmer:</td><td><code>:swimmer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:surfer:</td><td><code>:surfer:</code></td><td>:ski:</td><td><code>:ski:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:spades:</td><td><code>:spades:</code></td><td>:hearts:</td><td><code>:hearts:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clubs:</td><td><code>:clubs:</code></td><td>:diamonds:</td><td><code>:diamonds:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:gem:</td><td><code>:gem:</code></td><td>:ring:</td><td><code>:ring:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:trophy:</td><td><code>:trophy:</code></td><td>:musical_score:</td><td><code>:musical_score:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:musical_keyboard:</td><td><code>:musical_keyboard:</code></td><td>:violin:</td><td><code>:violin:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:space_invader:</td><td><code>:space_invader:</code></td><td>:video_game:</td><td><code>:video_game:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:black_joker:</td><td><code>:black_joker:</code></td><td>:flower_playing_cards:</td><td><code>:flower_playing_cards:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:game_die:</td><td><code>:game_die:</code></td><td>:dart:</td><td><code>:dart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mahjong:</td><td><code>:mahjong:</code></td><td>:clapper:</td><td><code>:clapper:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:memo:</td><td><code>:memo:</code></td><td>:pencil:</td><td><code>:pencil:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:book:</td><td><code>:book:</code></td><td>:art:</td><td><code>:art:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:microphone:</td><td><code>:microphone:</code></td><td>:headphones:</td><td><code>:headphones:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:trumpet:</td><td><code>:trumpet:</code></td><td>:saxophone:</td><td><code>:saxophone:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:guitar:</td><td><code>:guitar:</code></td><td>:shoe:</td><td><code>:shoe:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sandal:</td><td><code>:sandal:</code></td><td>:high_heel:</td><td><code>:high_heel:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:lipstick:</td><td><code>:lipstick:</code></td><td>:boot:</td><td><code>:boot:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:shirt:</td><td><code>:shirt:</code></td><td>:tshirt:</td><td><code>:tshirt:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:necktie:</td><td><code>:necktie:</code></td><td>:womans_clothes:</td><td><code>:womans_clothes:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dress:</td><td><code>:dress:</code></td><td>:running_shirt_with_sash:</td><td><code>:running_shirt_with_sash:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:jeans:</td><td><code>:jeans:</code></td><td>:kimono:</td><td><code>:kimono:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bikini:</td><td><code>:bikini:</code></td><td>:ribbon:</td><td><code>:ribbon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tophat:</td><td><code>:tophat:</code></td><td>:crown:</td><td><code>:crown:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:womans_hat:</td><td><code>:womans_hat:</code></td><td>:mans_shoe:</td><td><code>:mans_shoe:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:closed_umbrella:</td><td><code>:closed_umbrella:</code></td><td>:briefcase:</td><td><code>:briefcase:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:handbag:</td><td><code>:handbag:</code></td><td>:pouch:</td><td><code>:pouch:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:purse:</td><td><code>:purse:</code></td><td>:eyeglasses:</td><td><code>:eyeglasses:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fishing_pole_and_fish:</td><td><code>:fishing_pole_and_fish:</code></td><td>:coffee:</td><td><code>:coffee:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tea:</td><td><code>:tea:</code></td><td>:sake:</td><td><code>:sake:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:baby_bottle:</td><td><code>:baby_bottle:</code></td><td>:beer:</td><td><code>:beer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:beers:</td><td><code>:beers:</code></td><td>:cocktail:</td><td><code>:cocktail:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tropical_drink:</td><td><code>:tropical_drink:</code></td><td>:wine_glass:</td><td><code>:wine_glass:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fork_and_knife:</td><td><code>:fork_and_knife:</code></td><td>:pizza:</td><td><code>:pizza:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hamburger:</td><td><code>:hamburger:</code></td><td>:fries:</td><td><code>:fries:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:poultry_leg:</td><td><code>:poultry_leg:</code></td><td>:meat_on_bone:</td><td><code>:meat_on_bone:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:spaghetti:</td><td><code>:spaghetti:</code></td><td>:curry:</td><td><code>:curry:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fried_shrimp:</td><td><code>:fried_shrimp:</code></td><td>:bento:</td><td><code>:bento:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sushi:</td><td><code>:sushi:</code></td><td>:fish_cake:</td><td><code>:fish_cake:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rice_ball:</td><td><code>:rice_ball:</code></td><td>:rice_cracker:</td><td><code>:rice_cracker:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rice:</td><td><code>:rice:</code></td><td>:ramen:</td><td><code>:ramen:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:stew:</td><td><code>:stew:</code></td><td>:oden:</td><td><code>:oden:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dango:</td><td><code>:dango:</code></td><td>:egg:</td><td><code>:egg:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bread:</td><td><code>:bread:</code></td><td>:doughnut:</td><td><code>:doughnut:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:custard:</td><td><code>:custard:</code></td><td>:icecream:</td><td><code>:icecream:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ice_cream:</td><td><code>:ice_cream:</code></td><td>:shaved_ice:</td><td><code>:shaved_ice:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:birthday:</td><td><code>:birthday:</code></td><td>:cake:</td><td><code>:cake:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cookie:</td><td><code>:cookie:</code></td><td>:chocolate_bar:</td><td><code>:chocolate_bar:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:candy:</td><td><code>:candy:</code></td><td>:lollipop:</td><td><code>:lollipop:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:honey_pot:</td><td><code>:honey_pot:</code></td><td>:apple:</td><td><code>:apple:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:green_apple:</td><td><code>:green_apple:</code></td><td>:tangerine:</td><td><code>:tangerine:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:lemon:</td><td><code>:lemon:</code></td><td>:cherries:</td><td><code>:cherries:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:grapes:</td><td><code>:grapes:</code></td><td>:watermelon:</td><td><code>:watermelon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:strawberry:</td><td><code>:strawberry:</code></td><td>:peach:</td><td><code>:peach:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:melon:</td><td><code>:melon:</code></td><td>:banana:</td><td><code>:banana:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pear:</td><td><code>:pear:</code></td><td>:pineapple:</td><td><code>:pineapple:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sweet_potato:</td><td><code>:sweet_potato:</code></td><td>:eggplant:</td><td><code>:eggplant:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tomato:</td><td><code>:tomato:</code></td><td>:corn:</td><td><code>:corn:</code></td></tr></tbody></table><h3 id="Places"><a href="#Places" class="headerlink" title="Places"></a>Places</h3><table><thead><tr><th></th><th>ico</th><th>emoji</th><th>ico</th><th>emoji</th></tr></thead><tbody><tr><td><a href="#table-of-contents">top</a></td><td>:house:</td><td><code>:house:</code></td><td>:house_with_garden:</td><td><code>:house_with_garden:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:school:</td><td><code>:school:</code></td><td>:office:</td><td><code>:office:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:post_office:</td><td><code>:post_office:</code></td><td>:hospital:</td><td><code>:hospital:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bank:</td><td><code>:bank:</code></td><td>:convenience_store:</td><td><code>:convenience_store:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:love_hotel:</td><td><code>:love_hotel:</code></td><td>:hotel:</td><td><code>:hotel:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:wedding:</td><td><code>:wedding:</code></td><td>:church:</td><td><code>:church:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:department_store:</td><td><code>:department_store:</code></td><td>:european_post_office:</td><td><code>:european_post_office:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:city_sunrise:</td><td><code>:city_sunrise:</code></td><td>:city_sunset:</td><td><code>:city_sunset:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:japanese_castle:</td><td><code>:japanese_castle:</code></td><td>:european_castle:</td><td><code>:european_castle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tent:</td><td><code>:tent:</code></td><td>:factory:</td><td><code>:factory:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tokyo_tower:</td><td><code>:tokyo_tower:</code></td><td>:japan:</td><td><code>:japan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mount_fuji:</td><td><code>:mount_fuji:</code></td><td>:sunrise_over_mountains:</td><td><code>:sunrise_over_mountains:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sunrise:</td><td><code>:sunrise:</code></td><td>:stars:</td><td><code>:stars:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:statue_of_liberty:</td><td><code>:statue_of_liberty:</code></td><td>:bridge_at_night:</td><td><code>:bridge_at_night:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:carousel_horse:</td><td><code>:carousel_horse:</code></td><td>:rainbow:</td><td><code>:rainbow:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ferris_wheel:</td><td><code>:ferris_wheel:</code></td><td>:fountain:</td><td><code>:fountain:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:roller_coaster:</td><td><code>:roller_coaster:</code></td><td>:ship:</td><td><code>:ship:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:speedboat:</td><td><code>:speedboat:</code></td><td>:boat:</td><td><code>:boat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sailboat:</td><td><code>:sailboat:</code></td><td>:rowboat:</td><td><code>:rowboat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:anchor:</td><td><code>:anchor:</code></td><td>:rocket:</td><td><code>:rocket:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:airplane:</td><td><code>:airplane:</code></td><td>:helicopter:</td><td><code>:helicopter:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:steam_locomotive:</td><td><code>:steam_locomotive:</code></td><td>:tram:</td><td><code>:tram:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mountain_railway:</td><td><code>:mountain_railway:</code></td><td>:bike:</td><td><code>:bike:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:aerial_tramway:</td><td><code>:aerial_tramway:</code></td><td>:suspension_railway:</td><td><code>:suspension_railway:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mountain_cableway:</td><td><code>:mountain_cableway:</code></td><td>:tractor:</td><td><code>:tractor:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:blue_car:</td><td><code>:blue_car:</code></td><td>:oncoming_automobile:</td><td><code>:oncoming_automobile:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:car:</td><td><code>:car:</code></td><td>:red_car:</td><td><code>:red_car:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:taxi:</td><td><code>:taxi:</code></td><td>:oncoming_taxi:</td><td><code>:oncoming_taxi:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:articulated_lorry:</td><td><code>:articulated_lorry:</code></td><td>:bus:</td><td><code>:bus:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:oncoming_bus:</td><td><code>:oncoming_bus:</code></td><td>:rotating_light:</td><td><code>:rotating_light:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:police_car:</td><td><code>:police_car:</code></td><td>:oncoming_police_car:</td><td><code>:oncoming_police_car:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fire_engine:</td><td><code>:fire_engine:</code></td><td>:ambulance:</td><td><code>:ambulance:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:minibus:</td><td><code>:minibus:</code></td><td>:truck:</td><td><code>:truck:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:train:</td><td><code>:train:</code></td><td>:station:</td><td><code>:station:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:train2:</td><td><code>:train2:</code></td><td>:bullettrain_front:</td><td><code>:bullettrain_front:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bullettrain_side:</td><td><code>:bullettrain_side:</code></td><td>:light_rail:</td><td><code>:light_rail:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:monorail:</td><td><code>:monorail:</code></td><td>:railway_car:</td><td><code>:railway_car:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:trolleybus:</td><td><code>:trolleybus:</code></td><td>:ticket:</td><td><code>:ticket:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fuelpump:</td><td><code>:fuelpump:</code></td><td>:vertical_traffic_light:</td><td><code>:vertical_traffic_light:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:traffic_light:</td><td><code>:traffic_light:</code></td><td>:warning:</td><td><code>:warning:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:construction:</td><td><code>:construction:</code></td><td>:beginner:</td><td><code>:beginner:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:atm:</td><td><code>:atm:</code></td><td>:slot_machine:</td><td><code>:slot_machine:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:busstop:</td><td><code>:busstop:</code></td><td>:barber:</td><td><code>:barber:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hotsprings:</td><td><code>:hotsprings:</code></td><td>:checkered_flag:</td><td><code>:checkered_flag:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:crossed_flags:</td><td><code>:crossed_flags:</code></td><td>:izakaya_lantern:</td><td><code>:izakaya_lantern:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:moyai:</td><td><code>:moyai:</code></td><td>:circus_tent:</td><td><code>:circus_tent:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:performing_arts:</td><td><code>:performing_arts:</code></td><td>:round_pushpin:</td><td><code>:round_pushpin:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:triangular_flag_on_post:</td><td><code>:triangular_flag_on_post:</code></td><td>:jp:</td><td><code>:jp:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:kr:</td><td><code>:kr:</code></td><td>:cn:</td><td><code>:cn:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:us:</td><td><code>:us:</code></td><td>:fr:</td><td><code>:fr:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:es:</td><td><code>:es:</code></td><td>:it:</td><td><code>:it:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ru:</td><td><code>:ru:</code></td><td>:gb:</td><td><code>:gb:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:uk:</td><td><code>:uk:</code></td><td>:de:</td><td><code>:de:</code></td></tr></tbody></table><h3 id="Symbols"><a href="#Symbols" class="headerlink" title="Symbols"></a>Symbols</h3><table><thead><tr><th></th><th>ico</th><th>emoji</th><th>ico</th><th>emoji</th></tr></thead><tbody><tr><td><a href="#table-of-contents">top</a></td><td>:one:</td><td><code>:one:</code></td><td>:two:</td><td><code>:two:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:three:</td><td><code>:three:</code></td><td>:four:</td><td><code>:four:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:five:</td><td><code>:five:</code></td><td>:six:</td><td><code>:six:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:seven:</td><td><code>:seven:</code></td><td>:eight:</td><td><code>:eight:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:nine:</td><td><code>:nine:</code></td><td>:keycap_ten:</td><td><code>:keycap_ten:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:1234:</td><td><code>:1234:</code></td><td>:zero:</td><td><code>:zero:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hash:</td><td><code>:hash:</code></td><td>:symbols:</td><td><code>:symbols:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_backward:</td><td><code>:arrow_backward:</code></td><td>:arrow_down:</td><td><code>:arrow_down:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_forward:</td><td><code>:arrow_forward:</code></td><td>:arrow_left:</td><td><code>:arrow_left:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:capital_abcd:</td><td><code>:capital_abcd:</code></td><td>:abcd:</td><td><code>:abcd:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:abc:</td><td><code>:abc:</code></td><td>:arrow_lower_left:</td><td><code>:arrow_lower_left:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_lower_right:</td><td><code>:arrow_lower_right:</code></td><td>:arrow_right:</td><td><code>:arrow_right:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_up:</td><td><code>:arrow_up:</code></td><td>:arrow_upper_left:</td><td><code>:arrow_upper_left:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_upper_right:</td><td><code>:arrow_upper_right:</code></td><td>:arrow_double_down:</td><td><code>:arrow_double_down:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_double_up:</td><td><code>:arrow_double_up:</code></td><td>:arrow_down_small:</td><td><code>:arrow_down_small:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_heading_down:</td><td><code>:arrow_heading_down:</code></td><td>:arrow_heading_up:</td><td><code>:arrow_heading_up:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:leftwards_arrow_with_hook:</td><td><code>:leftwards_arrow_with_hook:</code></td><td>:arrow_right_hook:</td><td><code>:arrow_right_hook:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:left_right_arrow:</td><td><code>:left_right_arrow:</code></td><td>:arrow_up_down:</td><td><code>:arrow_up_down:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrow_up_small:</td><td><code>:arrow_up_small:</code></td><td>:arrows_clockwise:</td><td><code>:arrows_clockwise:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:arrows_counterclockwise:</td><td><code>:arrows_counterclockwise:</code></td><td>:rewind:</td><td><code>:rewind:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fast_forward:</td><td><code>:fast_forward:</code></td><td>:information_source:</td><td><code>:information_source:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ok:</td><td><code>:ok:</code></td><td>:twisted_rightwards_arrows:</td><td><code>:twisted_rightwards_arrows:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:repeat:</td><td><code>:repeat:</code></td><td>:repeat_one:</td><td><code>:repeat_one:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:new:</td><td><code>:new:</code></td><td>:top:</td><td><code>:top:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:up:</td><td><code>:up:</code></td><td>:cool:</td><td><code>:cool:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:free:</td><td><code>:free:</code></td><td>:ng:</td><td><code>:ng:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cinema:</td><td><code>:cinema:</code></td><td>:koko:</td><td><code>:koko:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:signal_strength:</td><td><code>:signal_strength:</code></td><td>:u5272:</td><td><code>:u5272:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:u5408:</td><td><code>:u5408:</code></td><td>:u55b6:</td><td><code>:u55b6:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:u6307:</td><td><code>:u6307:</code></td><td>:u6708:</td><td><code>:u6708:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:u6709:</td><td><code>:u6709:</code></td><td>:u6e80:</td><td><code>:u6e80:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:u7121:</td><td><code>:u7121:</code></td><td>:u7533:</td><td><code>:u7533:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:u7a7a:</td><td><code>:u7a7a:</code></td><td>:u7981:</td><td><code>:u7981:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sa:</td><td><code>:sa:</code></td><td>:restroom:</td><td><code>:restroom:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mens:</td><td><code>:mens:</code></td><td>:womens:</td><td><code>:womens:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:baby_symbol:</td><td><code>:baby_symbol:</code></td><td>:no_smoking:</td><td><code>:no_smoking:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:parking:</td><td><code>:parking:</code></td><td>:wheelchair:</td><td><code>:wheelchair:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:metro:</td><td><code>:metro:</code></td><td>:baggage_claim:</td><td><code>:baggage_claim:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:accept:</td><td><code>:accept:</code></td><td>:wc:</td><td><code>:wc:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:potable_water:</td><td><code>:potable_water:</code></td><td>:put_litter_in_its_place:</td><td><code>:put_litter_in_its_place:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:secret:</td><td><code>:secret:</code></td><td>:congratulations:</td><td><code>:congratulations:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:m:</td><td><code>:m:</code></td><td>:passport_control:</td><td><code>:passport_control:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:left_luggage:</td><td><code>:left_luggage:</code></td><td>:customs:</td><td><code>:customs:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ideograph_advantage:</td><td><code>:ideograph_advantage:</code></td><td>:cl:</td><td><code>:cl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sos:</td><td><code>:sos:</code></td><td>:id:</td><td><code>:id:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:no_entry_sign:</td><td><code>:no_entry_sign:</code></td><td>:underage:</td><td><code>:underage:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:no_mobile_phones:</td><td><code>:no_mobile_phones:</code></td><td>:do_not_litter:</td><td><code>:do_not_litter:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:non-potable_water:</td><td><code>:non-potable_water:</code></td><td>:no_bicycles:</td><td><code>:no_bicycles:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:no_pedestrians:</td><td><code>:no_pedestrians:</code></td><td>:children_crossing:</td><td><code>:children_crossing:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:no_entry:</td><td><code>:no_entry:</code></td><td>:eight_spoked_asterisk:</td><td><code>:eight_spoked_asterisk:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sparkle:</td><td><code>:sparkle:</code></td><td>:eight_pointed_black_star:</td><td><code>:eight_pointed_black_star:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heart_decoration:</td><td><code>:heart_decoration:</code></td><td>:vs:</td><td><code>:vs:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:vibration_mode:</td><td><code>:vibration_mode:</code></td><td>:mobile_phone_off:</td><td><code>:mobile_phone_off:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:chart:</td><td><code>:chart:</code></td><td>:currency_exchange:</td><td><code>:currency_exchange:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:aries:</td><td><code>:aries:</code></td><td>:taurus:</td><td><code>:taurus:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:gemini:</td><td><code>:gemini:</code></td><td>:cancer:</td><td><code>:cancer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:leo:</td><td><code>:leo:</code></td><td>:virgo:</td><td><code>:virgo:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:libra:</td><td><code>:libra:</code></td><td>:scorpius:</td><td><code>:scorpius:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sagittarius:</td><td><code>:sagittarius:</code></td><td>:capricorn:</td><td><code>:capricorn:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:aquarius:</td><td><code>:aquarius:</code></td><td>:pisces:</td><td><code>:pisces:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ophiuchus:</td><td><code>:ophiuchus:</code></td><td>:six_pointed_star:</td><td><code>:six_pointed_star:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:negative_squared_cross_mark:</td><td><code>:negative_squared_cross_mark:</code></td><td>:a:</td><td><code>:a:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:b:</td><td><code>:b:</code></td><td>:ab:</td><td><code>:ab:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:o2:</td><td><code>:o2:</code></td><td>:diamond_shape_with_a_dot_inside:</td><td><code>:diamond_shape_with_a_dot_inside:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:recycle:</td><td><code>:recycle:</code></td><td>:end:</td><td><code>:end:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:back:</td><td><code>:back:</code></td><td>:on:</td><td><code>:on:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:soon:</td><td><code>:soon:</code></td><td>:clock1:</td><td><code>:clock1:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock130:</td><td><code>:clock130:</code></td><td>:clock10:</td><td><code>:clock10:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock1030:</td><td><code>:clock1030:</code></td><td>:clock11:</td><td><code>:clock11:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock1130:</td><td><code>:clock1130:</code></td><td>:clock12:</td><td><code>:clock12:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock1230:</td><td><code>:clock1230:</code></td><td>:clock2:</td><td><code>:clock2:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock230:</td><td><code>:clock230:</code></td><td>:clock3:</td><td><code>:clock3:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock330:</td><td><code>:clock330:</code></td><td>:clock4:</td><td><code>:clock4:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock430:</td><td><code>:clock430:</code></td><td>:clock5:</td><td><code>:clock5:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock530:</td><td><code>:clock530:</code></td><td>:clock6:</td><td><code>:clock6:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock630:</td><td><code>:clock630:</code></td><td>:clock7:</td><td><code>:clock7:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock730:</td><td><code>:clock730:</code></td><td>:clock8:</td><td><code>:clock8:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock830:</td><td><code>:clock830:</code></td><td>:clock9:</td><td><code>:clock9:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clock930:</td><td><code>:clock930:</code></td><td>:heavy_dollar_sign:</td><td><code>:heavy_dollar_sign:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:copyright:</td><td><code>:copyright:</code></td><td>:registered:</td><td><code>:registered:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tm:</td><td><code>:tm:</code></td><td>:x:</td><td><code>:x:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heavy_exclamation_mark:</td><td><code>:heavy_exclamation_mark:</code></td><td>:bangbang:</td><td><code>:bangbang:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:interrobang:</td><td><code>:interrobang:</code></td><td>:o:</td><td><code>:o:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heavy_multiplication_x:</td><td><code>:heavy_multiplication_x:</code></td><td>:heavy_plus_sign:</td><td><code>:heavy_plus_sign:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heavy_minus_sign:</td><td><code>:heavy_minus_sign:</code></td><td>:heavy_division_sign:</td><td><code>:heavy_division_sign:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:white_flower:</td><td><code>:white_flower:</code></td><td>:100:</td><td><code>:100:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heavy_check_mark:</td><td><code>:heavy_check_mark:</code></td><td>:ballot_box_with_check:</td><td><code>:ballot_box_with_check:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:radio_button:</td><td><code>:radio_button:</code></td><td>:link:</td><td><code>:link:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:curly_loop:</td><td><code>:curly_loop:</code></td><td>:wavy_dash:</td><td><code>:wavy_dash:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:part_alternation_mark:</td><td><code>:part_alternation_mark:</code></td><td>:trident:</td><td><code>:trident:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:black_small_square:</td><td><code>:black_small_square:</code></td><td>:white_small_square:</td><td><code>:white_small_square:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:black_medium_small_square:</td><td><code>:black_medium_small_square:</code></td><td>:white_medium_small_square:</td><td><code>:white_medium_small_square:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:black_medium_square:</td><td><code>:black_medium_square:</code></td><td>:white_medium_square:</td><td><code>:white_medium_square:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:black_large_square:</td><td><code>:black_large_square:</code></td><td>:white_large_square:</td><td><code>:white_large_square:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:white_check_mark:</td><td><code>:white_check_mark:</code></td><td>:black_square_button:</td><td><code>:black_square_button:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:white_square_button:</td><td><code>:white_square_button:</code></td><td>:black_circle:</td><td><code>:black_circle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:white_circle:</td><td><code>:white_circle:</code></td><td>:red_circle:</td><td><code>:red_circle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:large_blue_circle:</td><td><code>:large_blue_circle:</code></td><td>:large_blue_diamond:</td><td><code>:large_blue_diamond:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:large_orange_diamond:</td><td><code>:large_orange_diamond:</code></td><td>:small_blue_diamond:</td><td><code>:small_blue_diamond:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:small_orange_diamond:</td><td><code>:small_orange_diamond:</code></td><td>:small_red_triangle:</td><td><code>:small_red_triangle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:small_red_triangle_down:</td><td><code>:small_red_triangle_down:</code></td><td>:shipit:</td><td><code>:shipit:</code></td></tr></tbody></table><h3 id="Uncategorized"><a href="#Uncategorized" class="headerlink" title="Uncategorized"></a>Uncategorized</h3><table><thead><tr><th></th><th>ico</th><th>emoji</th><th>ico</th><th>emoji</th></tr></thead><tbody><tr><td><a href="#table-of-contents">top</a></td><td>:1st_place_medal:</td><td><code>:1st_place_medal:</code></td><td>:2nd_place_medal:</td><td><code>:2nd_place_medal:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:3rd_place_medal:</td><td><code>:3rd_place_medal:</code></td><td>:afghanistan:</td><td><code>:afghanistan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:aland_islands:</td><td><code>:aland_islands:</code></td><td>:albania:</td><td><code>:albania:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:alembic:</td><td><code>:alembic:</code></td><td>:algeria:</td><td><code>:algeria:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:american_samoa:</td><td><code>:american_samoa:</code></td><td>:amphora:</td><td><code>:amphora:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:andorra:</td><td><code>:andorra:</code></td><td>:angola:</td><td><code>:angola:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:anguilla:</td><td><code>:anguilla:</code></td><td>:antarctica:</td><td><code>:antarctica:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:antigua_barbuda:</td><td><code>:antigua_barbuda:</code></td><td>:argentina:</td><td><code>:argentina:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:armenia:</td><td><code>:armenia:</code></td><td>:artificial_satellite:</td><td><code>:artificial_satellite:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:aruba:</td><td><code>:aruba:</code></td><td>:asterisk:</td><td><code>:asterisk:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:athletic_shoe:</td><td><code>:athletic_shoe:</code></td><td>:atom:</td><td><code>:atom:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:atom_symbol:</td><td><code>:atom_symbol:</code></td><td>:australia:</td><td><code>:australia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:austria:</td><td><code>:austria:</code></td><td>:avocado:</td><td><code>:avocado:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:azerbaijan:</td><td><code>:azerbaijan:</code></td><td>:bacon:</td><td><code>:bacon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:badminton:</td><td><code>:badminton:</code></td><td>:baguette_bread:</td><td><code>:baguette_bread:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bahamas:</td><td><code>:bahamas:</code></td><td>:bahrain:</td><td><code>:bahrain:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:balance_scale:</td><td><code>:balance_scale:</code></td><td>:ballot_box:</td><td><code>:ballot_box:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bangladesh:</td><td><code>:bangladesh:</code></td><td>:barbados:</td><td><code>:barbados:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:basecamp:</td><td><code>:basecamp:</code></td><td>:basecampy:</td><td><code>:basecampy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:basketball_man:</td><td><code>:basketball_man:</code></td><td>:basketball_woman:</td><td><code>:basketball_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bat:</td><td><code>:bat:</code></td><td>:beach_umbrella:</td><td><code>:beach_umbrella:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bed:</td><td><code>:bed:</code></td><td>:bee:</td><td><code>:bee:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:belarus:</td><td><code>:belarus:</code></td><td>:belgium:</td><td><code>:belgium:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:belize:</td><td><code>:belize:</code></td><td>:bellhop_bell:</td><td><code>:bellhop_bell:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:benin:</td><td><code>:benin:</code></td><td>:bermuda:</td><td><code>:bermuda:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bhutan:</td><td><code>:bhutan:</code></td><td>:biking_man:</td><td><code>:biking_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:biking_woman:</td><td><code>:biking_woman:</code></td><td>:biohazard:</td><td><code>:biohazard:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:black_flag:</td><td><code>:black_flag:</code></td><td>:black_heart:</td><td><code>:black_heart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:blonde_man:</td><td><code>:blonde_man:</code></td><td>:blonde_woman:</td><td><code>:blonde_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bolivia:</td><td><code>:bolivia:</code></td><td>:bosnia_herzegovina:</td><td><code>:bosnia_herzegovina:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:botswana:</td><td><code>:botswana:</code></td><td>:bow_and_arrow:</td><td><code>:bow_and_arrow:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bowing_man:</td><td><code>:bowing_man:</code></td><td>:bowing_woman:</td><td><code>:bowing_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:boxing_glove:</td><td><code>:boxing_glove:</code></td><td>:brazil:</td><td><code>:brazil:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:british_indian_ocean_territory:</td><td><code>:british_indian_ocean_territory:</code></td><td>:british_virgin_islands:</td><td><code>:british_virgin_islands:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:brunei:</td><td><code>:brunei:</code></td><td>:building_construction:</td><td><code>:building_construction:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:bulgaria:</td><td><code>:bulgaria:</code></td><td>:burkina_faso:</td><td><code>:burkina_faso:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:burrito:</td><td><code>:burrito:</code></td><td>:burundi:</td><td><code>:burundi:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:business_suit_levitating:</td><td><code>:business_suit_levitating:</code></td><td>:butterfly:</td><td><code>:butterfly:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:call_me_hand:</td><td><code>:call_me_hand:</code></td><td>:cambodia:</td><td><code>:cambodia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:camera_flash:</td><td><code>:camera_flash:</code></td><td>:cameroon:</td><td><code>:cameroon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:camping:</td><td><code>:camping:</code></td><td>:canada:</td><td><code>:canada:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:canary_islands:</td><td><code>:canary_islands:</code></td><td>:candle:</td><td><code>:candle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:canoe:</td><td><code>:canoe:</code></td><td>:cape_verde:</td><td><code>:cape_verde:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:card_file_box:</td><td><code>:card_file_box:</code></td><td>:card_index_dividers:</td><td><code>:card_index_dividers:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:caribbean_netherlands:</td><td><code>:caribbean_netherlands:</code></td><td>:carrot:</td><td><code>:carrot:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cayman_islands:</td><td><code>:cayman_islands:</code></td><td>:central_african_republic:</td><td><code>:central_african_republic:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:chad:</td><td><code>:chad:</code></td><td>:chains:</td><td><code>:chains:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:champagne:</td><td><code>:champagne:</code></td><td>:cheese:</td><td><code>:cheese:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:chile:</td><td><code>:chile:</code></td><td>:chipmunk:</td><td><code>:chipmunk:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:christmas_island:</td><td><code>:christmas_island:</code></td><td>:cityscape:</td><td><code>:cityscape:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clamp:</td><td><code>:clamp:</code></td><td>:classical_building:</td><td><code>:classical_building:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:clinking_glasses:</td><td><code>:clinking_glasses:</code></td><td>:cloud_with_lightning:</td><td><code>:cloud_with_lightning:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cloud_with_lightning_and_rain:</td><td><code>:cloud_with_lightning_and_rain:</code></td><td>:cloud_with_rain:</td><td><code>:cloud_with_rain:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cloud_with_snow:</td><td><code>:cloud_with_snow:</code></td><td>:clown_face:</td><td><code>:clown_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cocos_islands:</td><td><code>:cocos_islands:</code></td><td>:coffin:</td><td><code>:coffin:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:colombia:</td><td><code>:colombia:</code></td><td>:comet:</td><td><code>:comet:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:comoros:</td><td><code>:comoros:</code></td><td>:computer_mouse:</td><td><code>:computer_mouse:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:congo_brazzaville:</td><td><code>:congo_brazzaville:</code></td><td>:congo_kinshasa:</td><td><code>:congo_kinshasa:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:construction_worker_man:</td><td><code>:construction_worker_man:</code></td><td>:construction_worker_woman:</td><td><code>:construction_worker_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:control_knobs:</td><td><code>:control_knobs:</code></td><td>:cook_islands:</td><td><code>:cook_islands:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:costa_rica:</td><td><code>:costa_rica:</code></td><td>:cote_divoire:</td><td><code>:cote_divoire:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:couch_and_lamp:</td><td><code>:couch_and_lamp:</code></td><td>:couple_with_heart_man_man:</td><td><code>:couple_with_heart_man_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:couple_with_heart_woman_man:</td><td><code>:couple_with_heart_woman_man:</code></td><td>:couple_with_heart_woman_woman:</td><td><code>:couple_with_heart_woman_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:couplekiss_man_man:</td><td><code>:couplekiss_man_man:</code></td><td>:couplekiss_man_woman:</td><td><code>:couplekiss_man_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:couplekiss_woman_woman:</td><td><code>:couplekiss_woman_woman:</code></td><td>:cowboy_hat_face:</td><td><code>:cowboy_hat_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:crab:</td><td><code>:crab:</code></td><td>:crayon:</td><td><code>:crayon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cricket:</td><td><code>:cricket:</code></td><td>:croatia:</td><td><code>:croatia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:croissant:</td><td><code>:croissant:</code></td><td>:crossed_fingers:</td><td><code>:crossed_fingers:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:crossed_swords:</td><td><code>:crossed_swords:</code></td><td>:cuba:</td><td><code>:cuba:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cucumber:</td><td><code>:cucumber:</code></td><td>:curacao:</td><td><code>:curacao:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:cyprus:</td><td><code>:cyprus:</code></td><td>:czech_republic:</td><td><code>:czech_republic:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dagger:</td><td><code>:dagger:</code></td><td>:dancing_men:</td><td><code>:dancing_men:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dancing_women:</td><td><code>:dancing_women:</code></td><td>:dark_sunglasses:</td><td><code>:dark_sunglasses:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:deer:</td><td><code>:deer:</code></td><td>:denmark:</td><td><code>:denmark:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:derelict_house:</td><td><code>:derelict_house:</code></td><td>:desert:</td><td><code>:desert:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:desert_island:</td><td><code>:desert_island:</code></td><td>:desktop_computer:</td><td><code>:desktop_computer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:detective:</td><td><code>:detective:</code></td><td>:djibouti:</td><td><code>:djibouti:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dominica:</td><td><code>:dominica:</code></td><td>:dominican_republic:</td><td><code>:dominican_republic:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:dove:</td><td><code>:dove:</code></td><td>:drooling_face:</td><td><code>:drooling_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:drum:</td><td><code>:drum:</code></td><td>:duck:</td><td><code>:duck:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:eagle:</td><td><code>:eagle:</code></td><td>:ecuador:</td><td><code>:ecuador:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:egypt:</td><td><code>:egypt:</code></td><td>:el_salvador:</td><td><code>:el_salvador:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:electron:</td><td><code>:electron:</code></td><td>:envelope_with_arrow:</td><td><code>:envelope_with_arrow:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:equatorial_guinea:</td><td><code>:equatorial_guinea:</code></td><td>:eritrea:</td><td><code>:eritrea:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:estonia:</td><td><code>:estonia:</code></td><td>:ethiopia:</td><td><code>:ethiopia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:eu:</td><td><code>:eu:</code></td><td>:european_union:</td><td><code>:european_union:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:eye:</td><td><code>:eye:</code></td><td>:eye_speech_bubble:</td><td><code>:eye_speech_bubble:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:face_with_head_bandage:</td><td><code>:face_with_head_bandage:</code></td><td>:face_with_thermometer:</td><td><code>:face_with_thermometer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:falkland_islands:</td><td><code>:falkland_islands:</code></td><td>:family_man_boy:</td><td><code>:family_man_boy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_man_boy_boy:</td><td><code>:family_man_boy_boy:</code></td><td>:family_man_girl:</td><td><code>:family_man_girl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_man_girl_boy:</td><td><code>:family_man_girl_boy:</code></td><td>:family_man_girl_girl:</td><td><code>:family_man_girl_girl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_man_man_boy:</td><td><code>:family_man_man_boy:</code></td><td>:family_man_man_boy_boy:</td><td><code>:family_man_man_boy_boy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_man_man_girl:</td><td><code>:family_man_man_girl:</code></td><td>:family_man_man_girl_boy:</td><td><code>:family_man_man_girl_boy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_man_man_girl_girl:</td><td><code>:family_man_man_girl_girl:</code></td><td>:family_man_woman_boy:</td><td><code>:family_man_woman_boy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_man_woman_boy_boy:</td><td><code>:family_man_woman_boy_boy:</code></td><td>:family_man_woman_girl:</td><td><code>:family_man_woman_girl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_man_woman_girl_boy:</td><td><code>:family_man_woman_girl_boy:</code></td><td>:family_man_woman_girl_girl:</td><td><code>:family_man_woman_girl_girl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_woman_boy:</td><td><code>:family_woman_boy:</code></td><td>:family_woman_boy_boy:</td><td><code>:family_woman_boy_boy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_woman_girl:</td><td><code>:family_woman_girl:</code></td><td>:family_woman_girl_boy:</td><td><code>:family_woman_girl_boy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_woman_girl_girl:</td><td><code>:family_woman_girl_girl:</code></td><td>:family_woman_woman_boy:</td><td><code>:family_woman_woman_boy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_woman_woman_boy_boy:</td><td><code>:family_woman_woman_boy_boy:</code></td><td>:family_woman_woman_girl:</td><td><code>:family_woman_woman_girl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:family_woman_woman_girl_boy:</td><td><code>:family_woman_woman_girl_boy:</code></td><td>:family_woman_woman_girl_girl:</td><td><code>:family_woman_woman_girl_girl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:faroe_islands:</td><td><code>:faroe_islands:</code></td><td>:female_detective:</td><td><code>:female_detective:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ferry:</td><td><code>:ferry:</code></td><td>:field_hockey:</td><td><code>:field_hockey:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fiji:</td><td><code>:fiji:</code></td><td>:file_cabinet:</td><td><code>:file_cabinet:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:film_projector:</td><td><code>:film_projector:</code></td><td>:film_strip:</td><td><code>:film_strip:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:finland:</td><td><code>:finland:</code></td><td>:fist_left:</td><td><code>:fist_left:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fist_oncoming:</td><td><code>:fist_oncoming:</code></td><td>:fist_raised:</td><td><code>:fist_raised:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fist_right:</td><td><code>:fist_right:</code></td><td>:fleur_de_lis:</td><td><code>:fleur_de_lis:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:flight_arrival:</td><td><code>:flight_arrival:</code></td><td>:flight_departure:</td><td><code>:flight_departure:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:flipper:</td><td><code>:flipper:</code></td><td>:fog:</td><td><code>:fog:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:footprints:</td><td><code>:footprints:</code></td><td>:fountain_pen:</td><td><code>:fountain_pen:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:fox_face:</td><td><code>:fox_face:</code></td><td>:framed_picture:</td><td><code>:framed_picture:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:french_guiana:</td><td><code>:french_guiana:</code></td><td>:french_polynesia:</td><td><code>:french_polynesia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:french_southern_territories:</td><td><code>:french_southern_territories:</code></td><td>:fried_egg:</td><td><code>:fried_egg:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:frowning_face:</td><td><code>:frowning_face:</code></td><td>:frowning_man:</td><td><code>:frowning_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:frowning_woman:</td><td><code>:frowning_woman:</code></td><td>:funeral_urn:</td><td><code>:funeral_urn:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:gabon:</td><td><code>:gabon:</code></td><td>:gambia:</td><td><code>:gambia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:gear:</td><td><code>:gear:</code></td><td>:georgia:</td><td><code>:georgia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ghana:</td><td><code>:ghana:</code></td><td>:gibraltar:</td><td><code>:gibraltar:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:goal_net:</td><td><code>:goal_net:</code></td><td>:golfing_man:</td><td><code>:golfing_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:golfing_woman:</td><td><code>:golfing_woman:</code></td><td>:gorilla:</td><td><code>:gorilla:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:greece:</td><td><code>:greece:</code></td><td>:green_salad:</td><td><code>:green_salad:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:greenland:</td><td><code>:greenland:</code></td><td>:grenada:</td><td><code>:grenada:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:guadeloupe:</td><td><code>:guadeloupe:</code></td><td>:guam:</td><td><code>:guam:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:guardswoman:</td><td><code>:guardswoman:</code></td><td>:guatemala:</td><td><code>:guatemala:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:guernsey:</td><td><code>:guernsey:</code></td><td>:guinea:</td><td><code>:guinea:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:guinea_bissau:</td><td><code>:guinea_bissau:</code></td><td>:guyana:</td><td><code>:guyana:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:haircut_man:</td><td><code>:haircut_man:</code></td><td>:haircut_woman:</td><td><code>:haircut_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:haiti:</td><td><code>:haiti:</code></td><td>:hammer_and_pick:</td><td><code>:hammer_and_pick:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hammer_and_wrench:</td><td><code>:hammer_and_wrench:</code></td><td>:handshake:</td><td><code>:handshake:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:heavy_heart_exclamation:</td><td><code>:heavy_heart_exclamation:</code></td><td>:hole:</td><td><code>:hole:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:honduras:</td><td><code>:honduras:</code></td><td>:hong_kong:</td><td><code>:hong_kong:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hot_pepper:</td><td><code>:hot_pepper:</code></td><td>:hotdog:</td><td><code>:hotdog:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:houses:</td><td><code>:houses:</code></td><td>:hugs:</td><td><code>:hugs:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:hungary:</td><td><code>:hungary:</code></td><td>:ice_hockey:</td><td><code>:ice_hockey:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ice_skate:</td><td><code>:ice_skate:</code></td><td>:iceland:</td><td><code>:iceland:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:india:</td><td><code>:india:</code></td><td>:indonesia:</td><td><code>:indonesia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:iran:</td><td><code>:iran:</code></td><td>:iraq:</td><td><code>:iraq:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ireland:</td><td><code>:ireland:</code></td><td>:isle_of_man:</td><td><code>:isle_of_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:israel:</td><td><code>:israel:</code></td><td>:jamaica:</td><td><code>:jamaica:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:jersey:</td><td><code>:jersey:</code></td><td>:jordan:</td><td><code>:jordan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:joystick:</td><td><code>:joystick:</code></td><td>:kaaba:</td><td><code>:kaaba:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:kazakhstan:</td><td><code>:kazakhstan:</code></td><td>:kenya:</td><td><code>:kenya:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:keyboard:</td><td><code>:keyboard:</code></td><td>:kick_scooter:</td><td><code>:kick_scooter:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:kiribati:</td><td><code>:kiribati:</code></td><td>:kiwi_fruit:</td><td><code>:kiwi_fruit:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:knife:</td><td><code>:knife:</code></td><td>:kosovo:</td><td><code>:kosovo:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:kuwait:</td><td><code>:kuwait:</code></td><td>:kyrgyzstan:</td><td><code>:kyrgyzstan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:label:</td><td><code>:label:</code></td><td>:lantern:</td><td><code>:lantern:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:laos:</td><td><code>:laos:</code></td><td>:latin_cross:</td><td><code>:latin_cross:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:latvia:</td><td><code>:latvia:</code></td><td>:lebanon:</td><td><code>:lebanon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:lesotho:</td><td><code>:lesotho:</code></td><td>:level_slider:</td><td><code>:level_slider:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:liberia:</td><td><code>:liberia:</code></td><td>:libya:</td><td><code>:libya:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:liechtenstein:</td><td><code>:liechtenstein:</code></td><td>:lion:</td><td><code>:lion:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:lithuania:</td><td><code>:lithuania:</code></td><td>:lizard:</td><td><code>:lizard:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:loud_sound:</td><td><code>:loud_sound:</code></td><td>:luxembourg:</td><td><code>:luxembourg:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:lying_face:</td><td><code>:lying_face:</code></td><td>:macau:</td><td><code>:macau:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:macedonia:</td><td><code>:macedonia:</code></td><td>:madagascar:</td><td><code>:madagascar:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:malawi:</td><td><code>:malawi:</code></td><td>:malaysia:</td><td><code>:malaysia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:maldives:</td><td><code>:maldives:</code></td><td>:male_detective:</td><td><code>:male_detective:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mali:</td><td><code>:mali:</code></td><td>:malta:</td><td><code>:malta:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_artist:</td><td><code>:man_artist:</code></td><td>:man_astronaut:</td><td><code>:man_astronaut:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_cartwheeling:</td><td><code>:man_cartwheeling:</code></td><td>:man_cook:</td><td><code>:man_cook:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_dancing:</td><td><code>:man_dancing:</code></td><td>:man_facepalming:</td><td><code>:man_facepalming:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_factory_worker:</td><td><code>:man_factory_worker:</code></td><td>:man_farmer:</td><td><code>:man_farmer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_firefighter:</td><td><code>:man_firefighter:</code></td><td>:man_health_worker:</td><td><code>:man_health_worker:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_in_tuxedo:</td><td><code>:man_in_tuxedo:</code></td><td>:man_judge:</td><td><code>:man_judge:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_juggling:</td><td><code>:man_juggling:</code></td><td>:man_mechanic:</td><td><code>:man_mechanic:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_office_worker:</td><td><code>:man_office_worker:</code></td><td>:man_pilot:</td><td><code>:man_pilot:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_playing_handball:</td><td><code>:man_playing_handball:</code></td><td>:man_playing_water_polo:</td><td><code>:man_playing_water_polo:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_scientist:</td><td><code>:man_scientist:</code></td><td>:man_shrugging:</td><td><code>:man_shrugging:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_singer:</td><td><code>:man_singer:</code></td><td>:man_student:</td><td><code>:man_student:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:man_teacher:</td><td><code>:man_teacher:</code></td><td>:man_technologist:</td><td><code>:man_technologist:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mandarin:</td><td><code>:mandarin:</code></td><td>:mantelpiece_clock:</td><td><code>:mantelpiece_clock:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:marshall_islands:</td><td><code>:marshall_islands:</code></td><td>:martial_arts_uniform:</td><td><code>:martial_arts_uniform:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:martinique:</td><td><code>:martinique:</code></td><td>:massage_man:</td><td><code>:massage_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:massage_woman:</td><td><code>:massage_woman:</code></td><td>:mauritania:</td><td><code>:mauritania:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mauritius:</td><td><code>:mauritius:</code></td><td>:mayotte:</td><td><code>:mayotte:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:medal_military:</td><td><code>:medal_military:</code></td><td>:medal_sports:</td><td><code>:medal_sports:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:men_wrestling:</td><td><code>:men_wrestling:</code></td><td>:menorah:</td><td><code>:menorah:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mexico:</td><td><code>:mexico:</code></td><td>:micronesia:</td><td><code>:micronesia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:middle_finger:</td><td><code>:middle_finger:</code></td><td>:milk_glass:</td><td><code>:milk_glass:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:moldova:</td><td><code>:moldova:</code></td><td>:monaco:</td><td><code>:monaco:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:money_mouth_face:</td><td><code>:money_mouth_face:</code></td><td>:mongolia:</td><td><code>:mongolia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:montenegro:</td><td><code>:montenegro:</code></td><td>:montserrat:</td><td><code>:montserrat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:moon:</td><td><code>:moon:</code></td><td>:morocco:</td><td><code>:morocco:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mosque:</td><td><code>:mosque:</code></td><td>:motor_boat:</td><td><code>:motor_boat:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:motor_scooter:</td><td><code>:motor_scooter:</code></td><td>:motorcycle:</td><td><code>:motorcycle:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:motorway:</td><td><code>:motorway:</code></td><td>:mountain:</td><td><code>:mountain:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mountain_biking_man:</td><td><code>:mountain_biking_man:</code></td><td>:mountain_biking_woman:</td><td><code>:mountain_biking_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mountain_snow:</td><td><code>:mountain_snow:</code></td><td>:mozambique:</td><td><code>:mozambique:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:mrs_claus:</td><td><code>:mrs_claus:</code></td><td>:myanmar:</td><td><code>:myanmar:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:namibia:</td><td><code>:namibia:</code></td><td>:national_park:</td><td><code>:national_park:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:nauru:</td><td><code>:nauru:</code></td><td>:nauseated_face:</td><td><code>:nauseated_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:nepal:</td><td><code>:nepal:</code></td><td>:nerd_face:</td><td><code>:nerd_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:netherlands:</td><td><code>:netherlands:</code></td><td>:new_caledonia:</td><td><code>:new_caledonia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:new_zealand:</td><td><code>:new_zealand:</code></td><td>:newspaper_roll:</td><td><code>:newspaper_roll:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:next_track_button:</td><td><code>:next_track_button:</code></td><td>:ng_man:</td><td><code>:ng_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:ng_woman:</td><td><code>:ng_woman:</code></td><td>:nicaragua:</td><td><code>:nicaragua:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:niger:</td><td><code>:niger:</code></td><td>:nigeria:</td><td><code>:nigeria:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:night_with_stars:</td><td><code>:night_with_stars:</code></td><td>:niue:</td><td><code>:niue:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:no_good_man:</td><td><code>:no_good_man:</code></td><td>:no_good_woman:</td><td><code>:no_good_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:norfolk_island:</td><td><code>:norfolk_island:</code></td><td>:north_korea:</td><td><code>:north_korea:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:northern_mariana_islands:</td><td><code>:northern_mariana_islands:</code></td><td>:norway:</td><td><code>:norway:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:oil_drum:</td><td><code>:oil_drum:</code></td><td>:ok_man:</td><td><code>:ok_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:old_key:</td><td><code>:old_key:</code></td><td>:om:</td><td><code>:om:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:oman:</td><td><code>:oman:</code></td><td>:open_book:</td><td><code>:open_book:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:open_umbrella:</td><td><code>:open_umbrella:</code></td><td>:orange:</td><td><code>:orange:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:orthodox_cross:</td><td><code>:orthodox_cross:</code></td><td>:owl:</td><td><code>:owl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:paintbrush:</td><td><code>:paintbrush:</code></td><td>:pakistan:</td><td><code>:pakistan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:palau:</td><td><code>:palau:</code></td><td>:palestinian_territories:</td><td><code>:palestinian_territories:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:panama:</td><td><code>:panama:</code></td><td>:pancakes:</td><td><code>:pancakes:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:paperclips:</td><td><code>:paperclips:</code></td><td>:papua_new_guinea:</td><td><code>:papua_new_guinea:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:paraguay:</td><td><code>:paraguay:</code></td><td>:parasol_on_ground:</td><td><code>:parasol_on_ground:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:passenger_ship:</td><td><code>:passenger_ship:</code></td><td>:pause_button:</td><td><code>:pause_button:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:peace_symbol:</td><td><code>:peace_symbol:</code></td><td>:peanuts:</td><td><code>:peanuts:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pen:</td><td><code>:pen:</code></td><td>:person_fencing:</td><td><code>:person_fencing:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:peru:</td><td><code>:peru:</code></td><td>:philippines:</td><td><code>:philippines:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pick:</td><td><code>:pick:</code></td><td>:ping_pong:</td><td><code>:ping_pong:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pitcairn_islands:</td><td><code>:pitcairn_islands:</code></td><td>:place_of_worship:</td><td><code>:place_of_worship:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:plate_with_cutlery:</td><td><code>:plate_with_cutlery:</code></td><td>:play_or_pause_button:</td><td><code>:play_or_pause_button:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:poland:</td><td><code>:poland:</code></td><td>:policeman:</td><td><code>:policeman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:policewoman:</td><td><code>:policewoman:</code></td><td>:popcorn:</td><td><code>:popcorn:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:portugal:</td><td><code>:portugal:</code></td><td>:potato:</td><td><code>:potato:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pout:</td><td><code>:pout:</code></td><td>:pouting_man:</td><td><code>:pouting_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pouting_woman:</td><td><code>:pouting_woman:</code></td><td>:prayer_beads:</td><td><code>:prayer_beads:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:pregnant_woman:</td><td><code>:pregnant_woman:</code></td><td>:previous_track_button:</td><td><code>:previous_track_button:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:prince:</td><td><code>:prince:</code></td><td>:printer:</td><td><code>:printer:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:puerto_rico:</td><td><code>:puerto_rico:</code></td><td>:qatar:</td><td><code>:qatar:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:racing_car:</td><td><code>:racing_car:</code></td><td>:radioactive:</td><td><code>:radioactive:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:railway_track:</td><td><code>:railway_track:</code></td><td>:rainbow_flag:</td><td><code>:rainbow_flag:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:raised_back_of_hand:</td><td><code>:raised_back_of_hand:</code></td><td>:raised_hand_with_fingers_splayed:</td><td><code>:raised_hand_with_fingers_splayed:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:raising_hand_man:</td><td><code>:raising_hand_man:</code></td><td>:raising_hand_woman:</td><td><code>:raising_hand_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:record_button:</td><td><code>:record_button:</code></td><td>:reminder_ribbon:</td><td><code>:reminder_ribbon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rescue_worker_helmet:</td><td><code>:rescue_worker_helmet:</code></td><td>:reunion:</td><td><code>:reunion:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rhinoceros:</td><td><code>:rhinoceros:</code></td><td>:right_anger_bubble:</td><td><code>:right_anger_bubble:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:robot:</td><td><code>:robot:</code></td><td>:rofl:</td><td><code>:rofl:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:roll_eyes:</td><td><code>:roll_eyes:</code></td><td>:romania:</td><td><code>:romania:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rosette:</td><td><code>:rosette:</code></td><td>:rowing_man:</td><td><code>:rowing_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:rowing_woman:</td><td><code>:rowing_woman:</code></td><td>:running_man:</td><td><code>:running_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:running_woman:</td><td><code>:running_woman:</code></td><td>:rwanda:</td><td><code>:rwanda:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:samoa:</td><td><code>:samoa:</code></td><td>:san_marino:</td><td><code>:san_marino:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sao_tome_principe:</td><td><code>:sao_tome_principe:</code></td><td>:saudi_arabia:</td><td><code>:saudi_arabia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:scorpion:</td><td><code>:scorpion:</code></td><td>:selfie:</td><td><code>:selfie:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:senegal:</td><td><code>:senegal:</code></td><td>:serbia:</td><td><code>:serbia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:seychelles:</td><td><code>:seychelles:</code></td><td>:shallow_pan_of_food:</td><td><code>:shallow_pan_of_food:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:shamrock:</td><td><code>:shamrock:</code></td><td>:shark:</td><td><code>:shark:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:shield:</td><td><code>:shield:</code></td><td>:shinto_shrine:</td><td><code>:shinto_shrine:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:shopping:</td><td><code>:shopping:</code></td><td>:shopping_cart:</td><td><code>:shopping_cart:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:shrimp:</td><td><code>:shrimp:</code></td><td>:sierra_leone:</td><td><code>:sierra_leone:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:singapore:</td><td><code>:singapore:</code></td><td>:sint_maarten:</td><td><code>:sint_maarten:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:skier:</td><td><code>:skier:</code></td><td>:skull_and_crossbones:</td><td><code>:skull_and_crossbones:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sleeping_bed:</td><td><code>:sleeping_bed:</code></td><td>:slightly_frowning_face:</td><td><code>:slightly_frowning_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:slightly_smiling_face:</td><td><code>:slightly_smiling_face:</code></td><td>:slovakia:</td><td><code>:slovakia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:slovenia:</td><td><code>:slovenia:</code></td><td>:small_airplane:</td><td><code>:small_airplane:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sneezing_face:</td><td><code>:sneezing_face:</code></td><td>:snowman_with_snow:</td><td><code>:snowman_with_snow:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:solomon_islands:</td><td><code>:solomon_islands:</code></td><td>:somalia:</td><td><code>:somalia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:south_africa:</td><td><code>:south_africa:</code></td><td>:south_georgia_south_sandwich_islands:</td><td><code>:south_georgia_south_sandwich_islands:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:south_sudan:</td><td><code>:south_sudan:</code></td><td>:speaking_head:</td><td><code>:speaking_head:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:spider:</td><td><code>:spider:</code></td><td>:spider_web:</td><td><code>:spider_web:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:spiral_calendar:</td><td><code>:spiral_calendar:</code></td><td>:spiral_notepad:</td><td><code>:spiral_notepad:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:spoon:</td><td><code>:spoon:</code></td><td>:squid:</td><td><code>:squid:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sri_lanka:</td><td><code>:sri_lanka:</code></td><td>:st_barthelemy:</td><td><code>:st_barthelemy:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:st_helena:</td><td><code>:st_helena:</code></td><td>:st_kitts_nevis:</td><td><code>:st_kitts_nevis:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:st_lucia:</td><td><code>:st_lucia:</code></td><td>:st_pierre_miquelon:</td><td><code>:st_pierre_miquelon:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:st_vincent_grenadines:</td><td><code>:st_vincent_grenadines:</code></td><td>:stadium:</td><td><code>:stadium:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:star_and_crescent:</td><td><code>:star_and_crescent:</code></td><td>:star_of_david:</td><td><code>:star_of_david:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:stop_button:</td><td><code>:stop_button:</code></td><td>:stop_sign:</td><td><code>:stop_sign:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:stopwatch:</td><td><code>:stopwatch:</code></td><td>:studio_microphone:</td><td><code>:studio_microphone:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:stuffed_flatbread:</td><td><code>:stuffed_flatbread:</code></td><td>:sudan:</td><td><code>:sudan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sun_behind_large_cloud:</td><td><code>:sun_behind_large_cloud:</code></td><td>:sun_behind_rain_cloud:</td><td><code>:sun_behind_rain_cloud:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:sun_behind_small_cloud:</td><td><code>:sun_behind_small_cloud:</code></td><td>:surfing_man:</td><td><code>:surfing_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:surfing_woman:</td><td><code>:surfing_woman:</code></td><td>:suriname:</td><td><code>:suriname:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:swaziland:</td><td><code>:swaziland:</code></td><td>:sweden:</td><td><code>:sweden:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:swimming_man:</td><td><code>:swimming_man:</code></td><td>:swimming_woman:</td><td><code>:swimming_woman:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:switzerland:</td><td><code>:switzerland:</code></td><td>:synagogue:</td><td><code>:synagogue:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:syria:</td><td><code>:syria:</code></td><td>:taco:</td><td><code>:taco:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:taiwan:</td><td><code>:taiwan:</code></td><td>:tajikistan:</td><td><code>:tajikistan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tanzania:</td><td><code>:tanzania:</code></td><td>:thailand:</td><td><code>:thailand:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:thermometer:</td><td><code>:thermometer:</code></td><td>:thinking:</td><td><code>:thinking:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tickets:</td><td><code>:tickets:</code></td><td>:timer_clock:</td><td><code>:timer_clock:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:timor_leste:</td><td><code>:timor_leste:</code></td><td>:tipping_hand_man:</td><td><code>:tipping_hand_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tipping_hand_woman:</td><td><code>:tipping_hand_woman:</code></td><td>:togo:</td><td><code>:togo:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tokelau:</td><td><code>:tokelau:</code></td><td>:tonga:</td><td><code>:tonga:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tornado:</td><td><code>:tornado:</code></td><td>:tr:</td><td><code>:tr:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:trackball:</td><td><code>:trackball:</code></td><td>:trinidad_tobago:</td><td><code>:trinidad_tobago:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:tumbler_glass:</td><td><code>:tumbler_glass:</code></td><td>:tunisia:</td><td><code>:tunisia:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:turkey:</td><td><code>:turkey:</code></td><td>:turkmenistan:</td><td><code>:turkmenistan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:turks_caicos_islands:</td><td><code>:turks_caicos_islands:</code></td><td>:tuvalu:</td><td><code>:tuvalu:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:uganda:</td><td><code>:uganda:</code></td><td>:ukraine:</td><td><code>:ukraine:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:unicorn:</td><td><code>:unicorn:</code></td><td>:united_arab_emirates:</td><td><code>:united_arab_emirates:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:upside_down_face:</td><td><code>:upside_down_face:</code></td><td>:uruguay:</td><td><code>:uruguay:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:us_virgin_islands:</td><td><code>:us_virgin_islands:</code></td><td>:uzbekistan:</td><td><code>:uzbekistan:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:vanuatu:</td><td><code>:vanuatu:</code></td><td>:vatican_city:</td><td><code>:vatican_city:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:venezuela:</td><td><code>:venezuela:</code></td><td>:vietnam:</td><td><code>:vietnam:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:volleyball:</td><td><code>:volleyball:</code></td><td>:vulcan_salute:</td><td><code>:vulcan_salute:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:walking:</td><td><code>:walking:</code></td><td>:walking_man:</td><td><code>:walking_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:walking_woman:</td><td><code>:walking_woman:</code></td><td>:wallis_futuna:</td><td><code>:wallis_futuna:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:wastebasket:</td><td><code>:wastebasket:</code></td><td>:weight_lifting_man:</td><td><code>:weight_lifting_man:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:weight_lifting_woman:</td><td><code>:weight_lifting_woman:</code></td><td>:western_sahara:</td><td><code>:western_sahara:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:wheel_of_dharma:</td><td><code>:wheel_of_dharma:</code></td><td>:white_flag:</td><td><code>:white_flag:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:wilted_flower:</td><td><code>:wilted_flower:</code></td><td>:wind_face:</td><td><code>:wind_face:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_artist:</td><td><code>:woman_artist:</code></td><td>:woman_astronaut:</td><td><code>:woman_astronaut:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_cartwheeling:</td><td><code>:woman_cartwheeling:</code></td><td>:woman_cook:</td><td><code>:woman_cook:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_facepalming:</td><td><code>:woman_facepalming:</code></td><td>:woman_factory_worker:</td><td><code>:woman_factory_worker:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_farmer:</td><td><code>:woman_farmer:</code></td><td>:woman_firefighter:</td><td><code>:woman_firefighter:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_health_worker:</td><td><code>:woman_health_worker:</code></td><td>:woman_judge:</td><td><code>:woman_judge:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_juggling:</td><td><code>:woman_juggling:</code></td><td>:woman_mechanic:</td><td><code>:woman_mechanic:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_office_worker:</td><td><code>:woman_office_worker:</code></td><td>:woman_pilot:</td><td><code>:woman_pilot:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_playing_handball:</td><td><code>:woman_playing_handball:</code></td><td>:woman_playing_water_polo:</td><td><code>:woman_playing_water_polo:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_scientist:</td><td><code>:woman_scientist:</code></td><td>:woman_shrugging:</td><td><code>:woman_shrugging:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_singer:</td><td><code>:woman_singer:</code></td><td>:woman_student:</td><td><code>:woman_student:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_teacher:</td><td><code>:woman_teacher:</code></td><td>:woman_technologist:</td><td><code>:woman_technologist:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:woman_with_turban:</td><td><code>:woman_with_turban:</code></td><td>:women_wrestling:</td><td><code>:women_wrestling:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:world_map:</td><td><code>:world_map:</code></td><td>:writing_hand:</td><td><code>:writing_hand:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:yemen:</td><td><code>:yemen:</code></td><td>:yin_yang:</td><td><code>:yin_yang:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:zambia:</td><td><code>:zambia:</code></td><td>:zimbabwe:</td><td><code>:zimbabwe:</code></td></tr><tr><td><a href="#table-of-contents">top</a></td><td>:zipper_mouth_face:</td><td><code>:zipper_mouth_face:</code></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> emoji </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jekyll-theme-next添加Valine评论系统</title>
      <link href="2019/03/18/valine/"/>
      <url>2019/03/18/valine/</url>
      
        <content type="html"><![CDATA[<p>给Jekyll添加Valine评论系统</p><a id="more"></a><p>一直想给博客配置一款简洁的评论系统，但是没有发现合适的，最近倒腾一下Valine之后，发现效果还不错☺️  </p><p>详情请访问官网：<a href="https://valine.js.org/">https://valine.js.org</a>  </p><p>这个评论系统是基于LeanCloud的，对Jekyll的博客是支持的，官网网址：<a href="https://leancloud.cn/">https://leancloud.cn</a>  </p><h4 id="获取-APP-ID-和-APP-KEY"><a href="#获取-APP-ID-和-APP-KEY" class="headerlink" title="获取 APP ID 和 APP KEY"></a>获取 APP ID 和 APP KEY</h4><p>需要注册登录LeanCloud然后创建应用获取  </p><ol><li><p><a href="https://leancloud.cn/dashboard/login.html#/signup">点击这里登录或注册Leancloud</a></p></li><li><p>然后<a href="https://leancloud.cn/dashboard/applist.html#/newapp">创建应用</a>  </p><p><img src="/images/valine/blog1.png" alt="blog">    </p></li><li><p>选择刚刚创建的<code>应用</code>&gt;<code>设置</code>&gt;<code>应用 Key</code>，然后你就能看到你的<code>APP ID</code>和<code>APP KEY</code>  </p><p><img src="/images/valine/blog2.png" alt="blog2">  </p></li><li><p>然后填写<code>应用</code>&gt;<code>设置</code>&gt;<code>安全设置</code>中的<code>Web 安全域名</code>  </p><p><img src="/images/valine/blog3.png" alt="blog3">  </p></li></ol><h4 id="在blog中添加valine评论系统"><a href="#在blog中添加valine评论系统" class="headerlink" title="在blog中添加valine评论系统"></a>在blog中添加valine评论系统</h4><blockquote><p>由于我使用的是<a href="https://github.com/Simpleyyt/jekyll-theme-next">jekyll-theme-next</a>, 所以可能在其他模板中不适用  </p></blockquote><h5 id="创建valine-html"><a href="#创建valine-html" class="headerlink" title="创建valine.html"></a>创建valine.html</h5><p>在 <code>/_includes/_third-party/comments</code>文件夹中添加一个文件<code>valine.html</code><br>在文件里添加代码：  </p><p><img src="/images/valine/blog6.png" alt="blog4">  </p><p>中间几行需要配置在_config.yml文件当中  </p><h5 id="添加-config-yml配置"><a href="#添加-config-yml配置" class="headerlink" title="添加_config.yml配置"></a>添加_config.yml配置</h5><p>将<code>app_id</code>，<code>app_key</code>， <code>placeholde</code>等信息添加到_config.yml配置当中<br>具体使用代码：  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine_comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># app_id</span></span><br><span class="line">  <span class="attr">leancloud_appid:</span> <span class="string">XXX</span></span><br><span class="line"><span class="comment"># app_key</span></span><br><span class="line">  <span class="attr">leancloud_appkey:</span> <span class="string">XXX</span></span><br><span class="line"><span class="comment"># placeholde</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">“Just</span> <span class="string">go</span> <span class="string">go”</span></span><br></pre></td></tr></table></figure><h5 id="更改调用valine-html"><a href="#更改调用valine-html" class="headerlink" title="更改调用valine.html"></a>更改调用valine.html</h5><p>由于前面创建了valine.html，要jekyll博客能够运行这个页面的代码，使评论框显示在每篇文章的页面，需要在<code>/_includes/_third-party/comments/index.html</code>里面适当位置添加以下代码：  </p><p><img src="/images/valine/blog7.png" alt="blog5">  </p><p>此外，在<code>/_includes/_partials/comments.html</code>里面插入下列代码：  </p><p><img src="/images/valine/blog4.png" alt="blog6">  </p><p>最后生成的评论框如下：  </p><p><img src="/images/valine/blog5.png" alt="blog7"></p><p>感觉还不错！！  </p>]]></content>
      
      
      <categories>
          
          <category> Jekyll </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进击的tibble</title>
      <link href="2019/03/14/tibble/"/>
      <url>2019/03/14/tibble/</url>
      
        <content type="html"><![CDATA[<p><code>tibble</code>是升级版的<code>data.frame</code>，它保留了<code>data.famre</code>的优势，并且以更友好的方式展示出来  </p><h3 id="构建tibble"><a href="#构建tibble" class="headerlink" title="构建tibble"></a>构建tibble</h3><ul><li><code>readr</code>已知读入数据形成tibble  </li><li><code>tibble()</code>直接构建  </li><li><code>tribble()</code>直观构建  </li><li><code>as_tibble()</code>转换格式  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">df2 &lt;- read_csv(readr_example(<span class="string">&quot;challenge.csv&quot;</span>), guess_max = <span class="number">1001</span>)</span><br><span class="line"><span class="comment">#&gt;  Parsed with column specification:</span></span><br><span class="line"><span class="comment">#&gt;  cols(</span></span><br><span class="line"><span class="comment">#&gt;    x = col_double(),</span></span><br><span class="line"><span class="comment">#&gt;    y = col_date(format = &quot;&quot;)</span></span><br><span class="line"><span class="comment">#&gt;  )</span></span><br><span class="line">tibble(x = <span class="number">1</span>:<span class="number">3</span>, y = list(<span class="number">1</span>:<span class="number">5</span>, <span class="number">1</span>:<span class="number">10</span>, <span class="number">1</span>:<span class="number">20</span>))</span><br><span class="line"><span class="comment">#&gt;  # A tibble: 3 x 2</span></span><br><span class="line"><span class="comment">#&gt;        x y         </span></span><br><span class="line"><span class="comment">#&gt;    &lt;int&gt; &lt;list&gt;    </span></span><br><span class="line"><span class="comment">#&gt;  1     1 &lt;int [5]&gt; </span></span><br><span class="line"><span class="comment">#&gt;  2     2 &lt;int [10]&gt;</span></span><br><span class="line"><span class="comment">#&gt;  3     3 &lt;int [20]&gt;</span></span><br><span class="line">tribble(</span><br><span class="line">~x, ~y,</span><br><span class="line"><span class="string">&quot;a&quot;</span>, <span class="number">1</span>:<span class="number">3</span>,</span><br><span class="line"><span class="string">&quot;b&quot;</span>, <span class="number">4</span>:<span class="number">6</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">#&gt; A tibble: 2 x 2</span></span><br><span class="line"><span class="comment">#&gt;   x     y        </span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt; &lt;list&gt;   </span></span><br><span class="line"><span class="comment">#&gt; 1 a     &lt;int [3]&gt;</span></span><br><span class="line"><span class="comment">#&gt; 2 b     &lt;int [3]&gt;</span></span><br><span class="line">l &lt;- list(x = <span class="number">1</span>:<span class="number">500</span>, y = runif(<span class="number">500</span>), z = <span class="number">500</span>:<span class="number">1</span>)</span><br><span class="line">df &lt;- as_tibble(l)</span><br><span class="line"><span class="comment">#&gt;  A tibble: 500 x 3</span></span><br><span class="line"><span class="comment">#&gt;        x     y     z</span></span><br><span class="line"><span class="comment">#&gt;    &lt;int&gt; &lt;dbl&gt; &lt;int&gt;</span></span><br><span class="line"><span class="comment">#&gt;  1     1 0.311   500</span></span><br><span class="line"><span class="comment">#&gt;  2     2 0.512   499</span></span><br><span class="line"><span class="comment">#&gt;  3     3 0.440   498</span></span><br><span class="line"><span class="comment">#&gt;  4     4 0.501   497</span></span><br><span class="line"><span class="comment">#&gt;  5     5 0.131   496</span></span><br><span class="line"><span class="comment">#&gt;  6     6 0.566   495</span></span><br><span class="line"><span class="comment">#&gt;  7     7 0.647   494</span></span><br><span class="line"><span class="comment">#&gt;  8     8 0.200   493</span></span><br><span class="line"><span class="comment">#&gt;  9     9 0.121   492</span></span><br><span class="line"><span class="comment">#&gt; 10    10 0.315   491</span></span><br><span class="line"><span class="comment">#&gt; # ... with 490 more rows</span></span><br></pre></td></tr></table></figure><h3 id="tibble和data-frame的区别"><a href="#tibble和data-frame的区别" class="headerlink" title="tibble和data.frame的区别"></a>tibble和data.frame的区别</h3><h4 id="print结果"><a href="#print结果" class="headerlink" title="print结果"></a>print结果</h4><p><code>tibble</code>默认只展示前10行的信息  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tibble(x = -<span class="number">5</span>:<span class="number">1000</span>)</span><br><span class="line"><span class="comment">#&gt; # A tibble: 1,006 x 1</span></span><br><span class="line"><span class="comment">#&gt;        x</span></span><br><span class="line"><span class="comment">#&gt;    &lt;int&gt;</span></span><br><span class="line"><span class="comment">#&gt;  1    -5</span></span><br><span class="line"><span class="comment">#&gt;  2    -4</span></span><br><span class="line"><span class="comment">#&gt;  3    -3</span></span><br><span class="line"><span class="comment">#&gt;  4    -2</span></span><br><span class="line"><span class="comment">#&gt;  5    -1</span></span><br><span class="line"><span class="comment">#&gt;  6     0</span></span><br><span class="line"><span class="comment">#&gt;  7     1</span></span><br><span class="line"><span class="comment">#&gt;  8     2</span></span><br><span class="line"><span class="comment">#&gt;  9     3</span></span><br><span class="line"><span class="comment">#&gt; 10     4</span></span><br><span class="line"><span class="comment">#&gt; # … with 996 more rows</span></span><br></pre></td></tr></table></figure><blockquote><p>可以使用<code>options(tibble.print_max = n, tibble.print_min = m)</code>参数设置展示的信息  </p></blockquote><h4 id="子集提取"><a href="#子集提取" class="headerlink" title="子集提取"></a>子集提取</h4><p><code>tibble</code>通过<code>[</code>提取子集返回的是一个<code>tibble</code>，如果提取某一列需要使用<code>[[</code>或者<code>$</code>  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">df2 &lt;- tibble(x = <span class="number">1</span>:<span class="number">3</span>, y = <span class="number">3</span>:<span class="number">1</span>)</span><br><span class="line">class(df2)</span><br><span class="line"><span class="comment">#&gt; [1] &quot;tbl_df&quot;     &quot;tbl&quot;        &quot;data.frame&quot;</span></span><br><span class="line">class(df2[, <span class="number">1</span>])</span><br><span class="line"><span class="comment">#&gt; [1] &quot;tbl_df&quot;     &quot;tbl&quot;        &quot;data.frame&quot;</span></span><br><span class="line">class(df2[[<span class="number">1</span>]])</span><br><span class="line"><span class="comment">#&gt; [1] &quot;integer&quot;</span></span><br><span class="line">class(df2$x)</span><br><span class="line"><span class="comment">#&gt; [1] &quot;integer&quot;</span></span><br></pre></td></tr></table></figure><h4 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h4><p>在构建<code>tibble</code>时，只有长度为1的值才会被循环填充  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">tibble(a = <span class="number">1</span>:<span class="number">3</span>, b = <span class="number">1</span>)</span><br><span class="line"><span class="comment">#&gt; # A tibble: 3 x 2</span></span><br><span class="line"><span class="comment">#&gt;       a     b</span></span><br><span class="line"><span class="comment">#&gt;   &lt;int&gt; &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1     1     1</span></span><br><span class="line"><span class="comment">#&gt; 2     2     1</span></span><br><span class="line"><span class="comment">#&gt; 3     3     1</span></span><br><span class="line">tibble(a = <span class="number">1</span>:<span class="number">3</span>, c = <span class="number">1</span>:<span class="number">2</span>)</span><br><span class="line"><span class="comment">#&gt; Error: Tibble columns must have consistent lengths, only values of length one are recycled:</span></span><br><span class="line"><span class="comment">#&gt; * Length 2: Column `c`</span></span><br><span class="line"><span class="comment">#&gt; * Length 3: Column `a`</span></span><br></pre></td></tr></table></figure><h4 id="没有行名"><a href="#没有行名" class="headerlink" title="没有行名"></a>没有行名</h4><p><code>tibble</code>对象中是没有行名的，因此需要一些函数进行辅助操作  </p><ul><li><code>has_rownames(.data)</code>：判断数据是否有行名  </li><li><code>remove_rownames(.data)</code>：去掉数据行名  </li><li><code>rownames_to_column(.data, var = &quot;rowname&quot;)</code>：行名转为数据的第一列，<code>var</code>是行名所在列的名字  </li><li><code>rowid_to_column(.data, var = &quot;rowid&quot;)</code>：行ID号转为数据的第一列，<code>var</code>是行名所在列的名字  </li><li><code>column_to_rownames(.data, var = &quot;rowname&quot;)</code>：列转行名  </li></ul><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><ul><li><code>add_column</code>和<code>add_row</code><br>添加行和列  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_column(df, z = -<span class="number">1</span>:<span class="number">1</span>, w = <span class="number">0</span>)</span><br><span class="line"><span class="comment">#&gt;      # A tibble: 3 x 4</span></span><br><span class="line"><span class="comment">#&gt;        x     y     z     w</span></span><br><span class="line"><span class="comment">#&gt;     &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1     1     3    -1     0</span></span><br><span class="line"><span class="comment">#&gt; 2     2     2     0     0</span></span><br><span class="line"><span class="comment">#&gt; 3     3     1     1     0</span></span><br></pre></td></tr></table></figure></li><li><code>enframe</code>和<code>deframe</code><br>把向量变成<code>tibble</code>和把<code>tibble</code>变成向量  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">enframe(c(a = <span class="number">5</span>, b = <span class="number">7</span>), name = <span class="string">&quot;name&quot;</span>, value = <span class="string">&quot;value&quot;</span>)</span><br><span class="line"><span class="comment">#&gt;   # A tibble: 2 x 2</span></span><br><span class="line"><span class="comment">#&gt;     name  value</span></span><br><span class="line"><span class="comment">#&gt;     &lt;chr&gt; &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt;  1  a         5</span></span><br><span class="line"><span class="comment">#&gt;  2  b         7</span></span><br><span class="line">deframe(tibble(a = <span class="number">1</span>:<span class="number">3</span>))</span><br><span class="line"><span class="comment">#&gt; [1] 1 2 3</span></span><br></pre></td></tr></table></figure></li><li><code>glimpse()</code><br>相当于<code>tibble</code>的<code>str()</code>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">glimpse(df)</span><br><span class="line"><span class="comment">#&gt;  Observations: 3</span></span><br><span class="line"><span class="comment">#&gt;  Variables: 2</span></span><br><span class="line"><span class="comment">#&gt;  $ x &lt;int&gt; 1, 2, 3</span></span><br><span class="line"><span class="comment">#&gt;  $ y &lt;int&gt; 3, 2, 1</span></span><br></pre></td></tr></table></figure></li><li><code>tbl_sum</code><br>提供简要数据信息<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tbl_sum(df)</span><br><span class="line"><span class="comment">#&gt; A tibble </span></span><br><span class="line"><span class="comment">#&gt; &quot;3 x 2&quot; </span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> tidyverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>readr包使用指南</title>
      <link href="2019/03/13/readr/"/>
      <url>2019/03/13/readr/</url>
      
        <content type="html"><![CDATA[<p><code>readr</code>包是<code>tidyverse</code>的一部分，它提供了一种快速友好的方式来读取规则的矩形文件（如：csv，tsv，fwf等）。  </p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The easiest way to get readr is to install the whole tidyverse:</span></span><br><span class="line">install.packages(<span class="string">&quot;tidyverse&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Alternatively, install just readr:</span></span><br><span class="line">install.packages(<span class="string">&quot;readr&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Or the the development version from GitHub:</span></span><br><span class="line"><span class="comment"># install.packages(&quot;devtools&quot;)</span></span><br><span class="line">devtools::install_github(<span class="string">&quot;tidyverse/readr&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h3><h4 id="数据读入"><a href="#数据读入" class="headerlink" title="数据读入"></a>数据读入</h4><p>使用<code>readr</code>读取数据需要指定两个内容：</p><ol><li>整个文件的格式（csv、tsv、fwf）  </li><li>文件中每一列的特定属性（double、integer、numeric）    </li></ol><p>一般来说<code>readr</code>会自动猜测每一列的属性，并且自动赋予其最合适的数据类型  </p><p><code>readr</code>提供了七个<code>read_*</code>函数，来适应不同格式文件的读取：  </p><ul><li><a href="https://readr.tidyverse.org/reference/read_delim.html"><code>read_csv()</code></a>: 逗号分隔符文件（csv）  </li><li><a href="https://readr.tidyverse.org/reference/read_delim.html"><code>read_tsv()</code></a>: tab分隔符文件（tsv）  </li><li><a href="https://readr.tidyverse.org/reference/read_delim.html"><code>read_delim()</code></a>: 自定义分隔符文件  </li><li><a href="https://readr.tidyverse.org/reference/read_fwf.html"><code>read_fwf()</code></a>: 固定宽度的文件  </li><li><a href="https://readr.tidyverse.org/reference/read_table.html"><code>read_table()</code></a>: 空格分隔符的文件,类似于<code>read.table()</code>  </li><li><a href="https://readr.tidyverse.org/reference/read_log.html"><code>read_log()</code></a>: 读取web log 文件  </li></ul><blockquote><p>这些函数运行之后返回的是一个tibble对象，是data frame的进阶版  </p></blockquote><p><code>readr</code>比较友好的是可以对 <code>.gz</code>, <code>.bz2</code>, <code>.xz</code>, <code>.zip</code>等文件自动解压，对 <code>http://</code>, <code>https://</code>, <code>ftp://</code>, <code>ftps://</code>等链接自动进行下载  </p><h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><p><code>readr</code>是将数据按照字符读入，然后自行判定数据的属性。因此<code>readr</code>提供了<code>parse_*</code>和<code>guess_parser()</code>来判断和指定元素的属性：  </p><h5 id="判断属性"><a href="#判断属性" class="headerlink" title="判断属性"></a>判断属性</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">guess_parser(c(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] &quot;character&quot;</span></span><br><span class="line">guess_parser(c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] &quot;double&quot;</span></span><br><span class="line">guess_parser(c(<span class="string">&quot;1,000&quot;</span>, <span class="string">&quot;2,000&quot;</span>, <span class="string">&quot;3,000&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] &quot;number&quot;</span></span><br><span class="line">guess_parser(c(<span class="string">&quot;2001/10/10&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] &quot;date&quot;</span></span><br></pre></td></tr></table></figure><h5 id="指定属性"><a href="#指定属性" class="headerlink" title="指定属性"></a>指定属性</h5><blockquote><p><code>parse_*</code>函数类似于<code>as.numeric()</code>等函数</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">parse_integer(c(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] 1 2 3</span></span><br><span class="line">parse_double(c(<span class="string">&quot;1.56&quot;</span>, <span class="string">&quot;2.34&quot;</span>, <span class="string">&quot;3.56&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] 1.56 2.34 3.56</span></span><br><span class="line">parse_logical(c(<span class="string">&quot;true&quot;</span>, <span class="string">&quot;false&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1]  TRUE FALSE</span></span><br></pre></td></tr></table></figure><p>一般来说<code>parse_integer</code>和<code>parse_double</code>的判定方式比较严格，要求字符中不能包含除数字外的其他字符；<code>readr</code>提供了<code>parse_number</code>来更为灵活的读取数字，它会忽略掉字符串中的非数字字符。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">parse_number(c(<span class="string">&quot;0%&quot;</span>, <span class="string">&quot;10%&quot;</span>, <span class="string">&quot;150%&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1]   0  10 150</span></span><br><span class="line">parse_number(c(<span class="string">&quot;$1,234.5&quot;</span>, <span class="string">&quot;$12.45&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] 1234.50   12.45</span></span><br></pre></td></tr></table></figure><p>读取向量作为因子时，需要设定<code>levels</code>顺序  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parse_factor(c(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;a&quot;</span>), levels = c(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; [1] a b a</span></span><br><span class="line"><span class="comment">#&gt; Levels: a b c</span></span><br></pre></td></tr></table></figure><h4 id="数据属性查看"><a href="#数据属性查看" class="headerlink" title="数据属性查看"></a>数据属性查看</h4><p>可以使用<code>spec_*</code>等函数查看数据整体的列的属性  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- spec_csv(readr_example(<span class="string">&quot;challenge.csv&quot;</span>))</span><br><span class="line"><span class="comment">#&gt; Parsed with column specification:</span></span><br><span class="line"><span class="comment">#&gt; cols(</span></span><br><span class="line"><span class="comment">#&gt;   x = col_double(),</span></span><br><span class="line"><span class="comment">#&gt;   y = col_logical()</span></span><br><span class="line"><span class="comment">#&gt; )</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>readr</code>默认只查看数据的前1000行，当后续数据的属性发生变化时，是不能检测到的，因此如果查看全局属性，需要添加参数<code>guess_max</code>  </p></blockquote><p>对于特定的<code>tibble</code>对象，则使用<code>spec()</code>查看  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">spec(df1)</span><br><span class="line"><span class="comment">#&gt; cols(</span></span><br><span class="line"><span class="comment">#&gt;   x = col_double(),</span></span><br><span class="line"><span class="comment">#&gt;   y = col_logical()</span></span><br><span class="line"><span class="comment">#&gt; )</span></span><br><span class="line">spec(df2)</span><br><span class="line"><span class="comment">#&gt; cols(</span></span><br><span class="line"><span class="comment">#&gt;   x = col_double(),</span></span><br><span class="line"><span class="comment">#&gt;   y = col_date(format = &quot;&quot;)</span></span><br><span class="line"><span class="comment">#&gt; )</span></span><br></pre></td></tr></table></figure><h4 id="更改默认属性"><a href="#更改默认属性" class="headerlink" title="更改默认属性"></a>更改默认属性</h4><p>在读取数据时，可以使用<code>col_type</code>参数手动设置每列数据的属性  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">df3 &lt;- read_csv(</span><br><span class="line">  readr_example(<span class="string">&quot;challenge.csv&quot;</span>), </span><br><span class="line">  col_types = cols(</span><br><span class="line">    x = col_double(),</span><br><span class="line">    y = col_date(format = <span class="string">&quot;&quot;</span>)</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>常用的属性设置和缩写如下：  </p><table><thead><tr><th align="center">属性</th><th align="center">简写</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><code>col_logical()</code></td><td align="center"><code>l</code></td><td align="center">containing only T, F, TRUE or FALSE</td></tr><tr><td align="center"><code>col_integer()</code></td><td align="center"><code>i</code></td><td align="center">integers</td></tr><tr><td align="center"><code>col_double()</code></td><td align="center"><code>d</code></td><td align="center">doubles</td></tr><tr><td align="center"><code>col_character()</code></td><td align="center"><code>c</code></td><td align="center">everything else</td></tr><tr><td align="center"><code>col_factor(levels, ordered)</code></td><td align="center"><code>f</code></td><td align="center">a fixed set of values</td></tr><tr><td align="center"><code>col_date(format = &quot;&quot;)</code></td><td align="center"><code>D</code></td><td align="center">with the locale’s date_format</td></tr><tr><td align="center"><code>col_time(format = &quot;&quot;)</code></td><td align="center"><code>t</code></td><td align="center">with the locale’s time_format</td></tr><tr><td align="center"><code>col_datetime(format = &quot;&quot;)</code></td><td align="center"><code>T</code></td><td align="center">ISO8601 date times</td></tr><tr><td align="center"><code>col_number()</code></td><td align="center"><code>n</code></td><td align="center">numbers</td></tr><tr><td align="center"><code>col_skip()</code></td><td align="center"><code>_</code> or <code>-</code></td><td align="center">don’t import this column</td></tr><tr><td align="center"><code>col_guess()</code></td><td align="center"><code>?</code></td><td align="center">parse using the “best” type based on the input</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> tidyverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅识apply家族</title>
      <link href="2019/03/11/apply/"/>
      <url>2019/03/11/apply/</url>
      
        <content type="html"><![CDATA[<p>apply 家族函数</p><a id="more"></a><h3 id="apply函数"><a href="#apply函数" class="headerlink" title="apply函数"></a>apply函数</h3><p>apply函数是最常用的代替for循环的函数。apply函数可以对矩阵、数据框、数组(二维、多维)，按行或列进行循环计算，对子元素进行迭代，并把子元素以参数传递的形式给自定义的FUN函数中，并以返回计算结果。  </p><h4 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply(X, MARGIN, FUN, <span class="keyword">...</span>)</span><br></pre></td></tr></table></figure><h4 id="参数列表"><a href="#参数列表" class="headerlink" title="参数列表"></a>参数列表</h4><p><code>X</code>：矩阵、数据框、数组  </p><p><code>MARGIN</code>：按行计算或按按列计算，1表示按行，2表示按列  </p><p><code>FUN</code>: 自定义函数  </p><p><code>…</code>: 自定义参数  </p><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><ol><li>对于矩阵行求和    </li></ol>   <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x&lt;-matrix(<span class="number">1</span>:<span class="number">12</span>,ncol=<span class="number">3</span>)</span><br><span class="line">apply(x,<span class="number">1</span>,sum)</span><br></pre></td></tr></table></figure>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 15 18 21 24</span><br></pre></td></tr></table></figure><ol start="2"><li>自定义函数的使用  </li></ol>   <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  生成data.frame  </span></span><br><span class="line">x &lt;- cbind(x1 = <span class="number">3</span>, x2 = c(<span class="number">4</span>:<span class="number">1</span>, <span class="number">2</span>:<span class="number">5</span>)); x</span><br></pre></td></tr></table></figure>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">##      x1 x2</span><br><span class="line">## [1,]  3  4</span><br><span class="line">## [2,]  3  3</span><br><span class="line">## [3,]  3  2</span><br><span class="line">## [4,]  3  1</span><br><span class="line">## [5,]  3  2</span><br><span class="line">## [6,]  3  3</span><br><span class="line">## [7,]  3  4</span><br><span class="line">## [8,]  3  5</span><br></pre></td></tr></table></figure>   <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义函数myFUN，第一个参数x为数据</span></span><br><span class="line"><span class="comment"># 第二、三个参数为自定义参数，可以通过apply的&#x27;...&#x27;进行传入。</span></span><br><span class="line">myFUN&lt;- <span class="keyword">function</span>(x, c1, c2) &#123;</span><br><span class="line">   c(sum(x[c1],<span class="number">1</span>), mean(x[c2])) </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 把数据框按行做循环，每行分别传递给myFUN函数，设置c1,c2对应myFUN的第二、三个参数</span></span><br><span class="line">apply(x,<span class="number">1</span>,myFUN,c1=<span class="string">&#x27;x1&#x27;</span>,c2=c(<span class="string">&#x27;x1&#x27;</span>,<span class="string">&#x27;x2&#x27;</span>))</span><br></pre></td></tr></table></figure>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">##      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]</span><br><span class="line">## [1,]  4.0    4  4.0    4  4.0    4  4.0    4</span><br><span class="line">## [2,]  3.5    3  2.5    2  2.5    3  3.5    4</span><br></pre></td></tr></table></figure><h3 id="lapply函数"><a href="#lapply函数" class="headerlink" title="lapply函数"></a>lapply函数</h3><p>lapply函数是一个最基础循环操作函数之一。主要操作对象是list、data.frame，并返回和X长度同样的list结构作为结果集。  </p><h4 id="函数定义-1"><a href="#函数定义-1" class="headerlink" title="函数定义"></a>函数定义</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lapply(X, FUN, <span class="keyword">...</span>)</span><br></pre></td></tr></table></figure><h4 id="参数列表-1"><a href="#参数列表-1" class="headerlink" title="参数列表"></a>参数列表</h4><p><code>X</code>：矩阵、数据框、数组<br><code>FUN</code>: 自定义函数<br><code>…</code>: 自定义参数  </p><h4 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h4><ol><li>对list进行操作  </li></ol>   <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- list(a = c(<span class="number">1</span>:<span class="number">3</span>), b = c(<span class="number">4</span>:<span class="number">6</span>), d = c(<span class="number">10</span>:<span class="number">20</span>))</span><br><span class="line">lapply(x, sum)</span><br></pre></td></tr></table></figure>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## $a</span><br><span class="line">## [1] 6</span><br><span class="line">## </span><br><span class="line">## $b</span><br><span class="line">## [1] 15</span><br><span class="line">## </span><br><span class="line">## $d</span><br><span class="line">## [1] 165</span><br></pre></td></tr></table></figure><ol start="2"><li>对data.frame进行操作  </li></ol>   <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- data.frame(x1=<span class="number">3</span>, x2=c(<span class="number">2</span>:<span class="number">1</span>,<span class="number">4</span>:<span class="number">5</span>))</span><br><span class="line">lapply(x, sum)</span><br></pre></td></tr></table></figure>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## $x1</span><br><span class="line">## [1] 12</span><br><span class="line">## </span><br><span class="line">## $x2</span><br><span class="line">## [1] 12</span><br></pre></td></tr></table></figure><h3 id="sapply函数"><a href="#sapply函数" class="headerlink" title="sapply函数"></a>sapply函数</h3><p>sapply函数是一个简化版的lapply，sapply增加了2个参数simplify和USE.NAMES，主要就是让输出看起来更友好，返回值为向量，而不是list对象。  </p><h4 id="函数定义-2"><a href="#函数定义-2" class="headerlink" title="函数定义"></a>函数定义</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sapply(X, FUN, <span class="keyword">...</span>, simplify=<span class="literal">TRUE</span>, USE.NAMES = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h4 id="参数列表-2"><a href="#参数列表-2" class="headerlink" title="参数列表"></a>参数列表</h4><p><code>X</code>：矩阵、数据框、数组<br><code>FUN</code>: 自定义函数<br><code>…</code>: 自定义参数<br><code>simplify</code>：是否数组化，当值是array时，输出结果按数组进行分组<br><code>USE.NAMES</code>：如果X为字符串，TRUE设置字符串为数据名，FALSE不设置  </p><h4 id="应用-2"><a href="#应用-2" class="headerlink" title="应用"></a>应用</h4><p>对上面的数据框<code>x</code>进行操作：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sapply(x, sum)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## x1 x2 </span><br><span class="line">## 12 12</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class(lapply(x, sum)) <span class="comment"># lapply返回list，sapply返回vector</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;list&quot;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class(sapply(x, sum))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;numeric&quot;</span><br></pre></td></tr></table></figure><h3 id="vapply函数"><a href="#vapply函数" class="headerlink" title="vapply函数"></a>vapply函数</h3><p>vapply类似于sapply，提供了FUN.VALUE参数，用来控制返回值的行名。  </p><h4 id="函数定义-3"><a href="#函数定义-3" class="headerlink" title="函数定义"></a>函数定义</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vapply(X, FUN, FUN.VALUE, <span class="keyword">...</span>, USE.NAMES = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h4 id="参数列表-3"><a href="#参数列表-3" class="headerlink" title="参数列表"></a>参数列表</h4><p><code>X</code>：矩阵、数据框、数组<br><code>FUN</code>: 自定义函数<br><code>FUN.VALUE</code>：定义返回值的行名<br><code>…</code>: 自定义参数<br><code>USE.NAMES</code>：如果X为字符串，TRUE设置字符串为数据名，FALSE不设置  </p><h4 id="应用-3"><a href="#应用-3" class="headerlink" title="应用"></a>应用</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- data.frame(cbind(x1=<span class="number">3</span>, x2=c(<span class="number">2</span>:<span class="number">1</span>,<span class="number">4</span>:<span class="number">5</span>)))</span><br><span class="line">vapply(x,cumsum,FUN.VALUE = c(<span class="string">&#x27;a&#x27;</span>=<span class="number">0</span>,<span class="string">&#x27;b&#x27;</span>=<span class="number">0</span>,<span class="string">&#x27;c&#x27;</span>=<span class="number">0</span>,<span class="string">&#x27;d&#x27;</span>=<span class="number">0</span>)) <span class="comment">#注意FUN.VALUE的用法</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">##   x1 x2</span><br><span class="line">## a  3  2</span><br><span class="line">## b  6  3</span><br><span class="line">## c  9  7</span><br><span class="line">## d 12 12</span><br></pre></td></tr></table></figure><h3 id="mapply函数"><a href="#mapply函数" class="headerlink" title="mapply函数"></a>mapply函数</h3><p>相当于多参数版本的 sapply。第一次计算传入各组向量的第一个元素到FUN，进行结算得到结果；第二次传入各组向量的第二个元素，得到结果；第三次传入各组向量的第三个元素…以此类推。  </p><h4 id="函数定义-4"><a href="#函数定义-4" class="headerlink" title="函数定义"></a>函数定义</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapply(FUN, <span class="keyword">...</span>, MoreArgs = <span class="literal">NULL</span>, SIMPLIFY = <span class="literal">TRUE</span>,USE.NAMES = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h4 id="参数列表-4"><a href="#参数列表-4" class="headerlink" title="参数列表"></a>参数列表</h4><p>主要使用的参数有三个<br><code>FUN</code>: 自定义函数<br><code>FUN.VALUE</code>：定义返回值的行名<br><code>…</code>: 自定义参数  </p><h4 id="应用-4"><a href="#应用-4" class="headerlink" title="应用"></a>应用</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapply(rep, <span class="number">1</span>:<span class="number">4</span>, <span class="number">4</span>:<span class="number">1</span>) <span class="comment">#每一组参数都是对应的</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## [[1]]</span><br><span class="line">## [1] 1 1 1 1</span><br><span class="line">## </span><br><span class="line">## [[2]]</span><br><span class="line">## [1] 2 2 2</span><br><span class="line">## </span><br><span class="line">## [[3]]</span><br><span class="line">## [1] 3 3</span><br><span class="line">## </span><br><span class="line">## [[4]]</span><br><span class="line">## [1] 4</span><br></pre></td></tr></table></figure><h3 id="tapply函数"><a href="#tapply函数" class="headerlink" title="tapply函数"></a>tapply函数</h3><p>tapply用于分组的循环计算，通过INDEX参数可以把数据集X进行分组，相当于group by的操作。  </p><h4 id="函数定义-5"><a href="#函数定义-5" class="headerlink" title="函数定义"></a>函数定义</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tapply(X, INDEX, FUN = <span class="literal">NULL</span>, <span class="keyword">...</span>, simplify = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h4 id="参数列表-5"><a href="#参数列表-5" class="headerlink" title="参数列表"></a>参数列表</h4><p><code>X</code>：向量<br><code>INDEX</code>: 分组索引<br><code>FUN</code>: 自定义函数<br><code>…</code>: 接收多个数据<br><code>simplify</code>：是否数组化，当值array时，输出结果按数组进行分组  </p><h4 id="应用-5"><a href="#应用-5" class="headerlink" title="应用"></a>应用</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对样本分组计数</span></span><br><span class="line">tapply(warpbreaks$breaks, warpbreaks[,-<span class="number">1</span>], sum)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">##     tension</span><br><span class="line">## wool   L   M   H</span><br><span class="line">##    A 401 216 221</span><br><span class="line">##    B 254 259 169</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tryCatch抓取错误</title>
      <link href="2019/03/06/trycatch/"/>
      <url>2019/03/06/trycatch/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在使用R进行循环操作时，出现错误，为了对错误进行分析，使用<code>tryCatch()</code>函数抓取处理错误  </p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>tryCatch常用的三种用法:  </p><h3 id="抓取错误"><a href="#抓取错误" class="headerlink" title="抓取错误"></a>抓取错误</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tryCatch</span>(libray(test), error = <span class="keyword">function</span>(e)&#123;print(<span class="string">&quot;出现错误&quot;</span>)&#125; )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;出现错误&quot;</span><br></pre></td></tr></table></figure><p>释义：当加载<code>test</code>包时，出现错误，执行<code>error</code>函数  </p><blockquote><p>这里很适合在循环中出现错误的情况，可以对错误的循环结果进行赋值  </p></blockquote><h3 id="抓取警告和错误"><a href="#抓取警告和错误" class="headerlink" title="抓取警告和错误"></a>抓取警告和错误</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tryCatch</span>(<span class="keyword">stop</span>(<span class="string">&quot;test&quot;</span>), <span class="keyword">warning</span> = <span class="keyword">function</span>(w)&#123;print(<span class="string">&quot;出现警告&quot;</span>)&#125;,</span><br><span class="line">          finally=&#123;</span><br><span class="line">            print(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">          &#125;)</span><br><span class="line"><span class="comment">## Error in doTryCatch(return(expr), name, parentenv, handler) : test</span></span><br><span class="line"><span class="comment">## [1] &quot;test&quot;</span></span><br></pre></td></tr></table></figure><p>释义：执行语句出错，打印出错误，并执行<code>finally</code>函数  </p><blockquote><p>如果单独只有warning函数，则只是打印错误  </p></blockquote><h3 id="继续执行"><a href="#继续执行" class="headerlink" title="继续执行"></a>继续执行</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tryCatch</span>(a = <span class="number">1</span>, finally=&#123;print(<span class="string">&quot;我是个测试&quot;</span>)&#125;)</span><br><span class="line"><span class="comment">## Error in tryCatchList(expr, classes, parentenv, handlers) : </span></span><br><span class="line"><span class="comment">##   argument &quot;expr&quot; is missing, with no default</span></span><br><span class="line"><span class="comment">## [1] &quot;我是个测试&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>finally</code>函数无论错与对都会执行  </p></blockquote><h2 id="封装函数"><a href="#封装函数" class="headerlink" title="封装函数"></a>封装函数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">log_calculator &lt;- <span class="keyword">function</span>(x)&#123;</span><br><span class="line">    <span class="keyword">tryCatch</span>(</span><br><span class="line">        expr = &#123;</span><br><span class="line">            message(log(x))</span><br><span class="line">            message(<span class="string">&quot;Successfully executed the log(x) call.&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        error = <span class="keyword">function</span>(e)&#123;</span><br><span class="line">            message(<span class="string">&#x27;Caught an error!&#x27;</span>)</span><br><span class="line">            print(e)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">warning</span> = <span class="keyword">function</span>(w)&#123;</span><br><span class="line">            message(<span class="string">&#x27;Caught an warning!&#x27;</span>)</span><br><span class="line">            print(w)</span><br><span class="line">        &#125;,</span><br><span class="line">        finally = &#123;</span><br><span class="line">            message(<span class="string">&#x27;All done, quitting.&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    )    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果如下：  </p><ul><li>如果<code>x</code>是有效数字，则<code>expr</code>和<code>finally</code>被执行：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_calculator(-<span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Caught an warning!</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &lt;simpleWarning in log(x): NaNs produced&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## All done, quitting.</span><br></pre></td></tr></table></figure><ul><li>如果<code>x</code>不是有效数字，则<code>expr</code>会报错，<code>warning</code>和<code>finally</code>被执行：  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_calculator(<span class="string">&quot;10&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Caught an error!</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &lt;simpleError in log(x): non-numeric argument to mathematical function&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## All done, quitting.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据拆分与合并</title>
      <link href="2019/03/05/split-combn/"/>
      <url>2019/03/05/split-combn/</url>
      
        <content type="html"><![CDATA[<p>长宽数据格式的转换</p><a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近在使用ggplot2绘制图像时，发现ggplot2对于数据的格式要求极为严格，对于不规则的数据进行转换十分头疼。经过一番研究发现一些函数可以简化数据的整形过程，收集如下：  </p><h2 id="数据的拆分与合并"><a href="#数据的拆分与合并" class="headerlink" title="数据的拆分与合并"></a>数据的拆分与合并</h2><p>ggplot2的输入数据需要是data.frame的形式，因此需要将list等进行融合整形，此时使用reshape2包的<code>melt()</code>函数进行操作就比较方便，此外还有几个相似功能的函数，具体使用如下：  </p><h3 id="reshape2"><a href="#reshape2" class="headerlink" title="reshape2"></a>reshape2</h3><p><code>melt()</code>—把宽格式数据转化成长格式  </p><p><code>cast()</code>—把长格式数据转化成宽格式【其中<code>dcast()</code>输出时返回一个数据框,<code>acast()</code>输出时返回一个向量/矩阵/数组】  </p><h4 id="具体用法"><a href="#具体用法" class="headerlink" title="具体用法"></a>具体用法</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mydata</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">##   ID Time X1 X2</span><br><span class="line">## 1 NA    1  5 NA</span><br><span class="line">## 2  1    2  3  5</span><br><span class="line">## 3  2   NA NA  1</span><br><span class="line">## 4  2    1  2  4</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md &lt;- melt(mydata, id=c(<span class="string">&quot;ID&quot;</span>,<span class="string">&quot;Time&quot;</span>)) <span class="comment"># 等同于md &lt;- melt(mydata, id=1:2)</span></span><br><span class="line">md <span class="comment">#固定id，融合其他列</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">##   ID Time variable value</span><br><span class="line">## 1 NA    1       X1     5</span><br><span class="line">## 2  1    2       X1     3</span><br><span class="line">## 3  2   NA       X1    NA</span><br><span class="line">## 4  2    1       X1     2</span><br><span class="line">## 5 NA    1       X2    NA</span><br><span class="line">## 6  1    2       X2     5</span><br><span class="line">## 7  2   NA       X2     1</span><br><span class="line">## 8  2    1       X2     4</span><br></pre></td></tr></table></figure><blockquote><p>其实是固定id两列，将其他变量通过”variable”和”value”揉合在一起，结果产生了新的两列，一列是变量variable，指代是哪个揉合变量，另外一列是取值value，即变量对应的值  </p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newmd&lt;- dcast(md, ID~variable, mean)</span><br><span class="line">newmd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">##   ID X1  X2</span><br><span class="line">## 1  1  3 5.0</span><br><span class="line">## 2  2 NA 2.5</span><br><span class="line">## 3 NA  5  NA</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acast(md, ID~variable, mean)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">##    X1  X2</span><br><span class="line">## 1   3 5.0</span><br><span class="line">## 2  NA 2.5</span><br><span class="line">## NA  5  NA</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acast(md, ID~Time~variable)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">## , , X1</span><br><span class="line">## </span><br><span class="line">##     1  2 NA</span><br><span class="line">## 1  NA  3 NA</span><br><span class="line">## 2   2 NA NA</span><br><span class="line">## NA  5 NA NA</span><br><span class="line">## </span><br><span class="line">## , , X2</span><br><span class="line">## </span><br><span class="line">##     1  2 NA</span><br><span class="line">## 1  NA  5 NA</span><br><span class="line">## 2   4 NA  1</span><br><span class="line">## NA NA NA NA</span><br></pre></td></tr></table></figure><blockquote><p><code>cast()</code>函数处理的对象应该是<code>melt()</code>函数的结果  </p></blockquote><h3 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h3><h4 id="tidyr包"><a href="#tidyr包" class="headerlink" title="tidyr包"></a>tidyr包</h4><p><code>gather()</code>—-把宽度较大的数据转换成一个更长的形式，它类比于从reshape2包中<code>melt()</code>函数的功能  </p><p><code>spread()</code>—-把长的数据转换成一个更宽的形式，它类比于从reshape2包中<code>cast()</code>函数的功能  </p><h4 id="data-table包"><a href="#data-table包" class="headerlink" title="data.table包"></a>data.table包</h4><p><code>data.table</code>包中的<code>melt()</code> 和<code>dcast()</code> 是<code>reshape2</code>包里同名函数的扩展  </p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>数据拆分和合并的关系可以用《R语言实战》中的图形表示  </p><p><img src="/images/split-combn/reshape.png" alt="rashape">  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GSEA-基因集富集分析</title>
      <link href="2019/02/24/gsea/"/>
      <url>2019/02/24/gsea/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h2 id="富集分析"><a href="#富集分析" class="headerlink" title="富集分析"></a>富集分析</h2><p>说到富集分析，富集分析是将基因根据一些先验的知识（也就是常见的注释）进行分类的过程。我们一般会想到最常见的是GO/KEGG富集，其思路是先筛选差异基因，然后确定这些差异基因的GO/KEGG注释，然后通过超几何分布计算出哪些通路富集到了，通常会选择一个阈值来卡一下，比如p值和FDR等。因此这会涉及到人为的阈值选择，具有一定的主观性，而且只能用于差异较大的基因，所以结果可能有一定的局限性。  </p><h2 id="GSEA"><a href="#GSEA" class="headerlink" title="GSEA"></a>GSEA</h2><p>由于一般的富集分析需要人为的选定阈值进行分析，那么对于未达到阈值要求的基因，它们对于生物学的影响该如何计算？GSEA就是为了解决这一问题而提出的，该方法不再强调单个基因的出现与否对富集造成的显著影响，而考虑到基因的表达等微量变化的叠加对于整个富集过程的影响。<br>GSEA分析主要有三个特点：（1）分析的是基因集合而不是单个基因；（2）将基因与预定义的基因集进行比较；（3）富集分析  </p><h1 id="GSEA原理"><a href="#GSEA原理" class="headerlink" title="GSEA原理"></a>GSEA原理</h1><p>GSEA的思路最早发表于2005年的<a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1239896/">Gene set enrichment analysis: a knowledge-based approach for interpreting genome-wide expression profiles</a>，主要包括两个概念：<strong>预先定义的基因集S</strong>和<strong>待测基因集L</strong>；GSEA目的就是为了判断S基因集中的基因是随机分布于L，还是聚集分布在L的顶部或者底部；如果待测基因集中的某些基因显著富集在L的顶部或者底部，这说明这些基因的表达对你定义的分组（预先分组）的差异有显著影响，从而找到我们关注的基因集。<br>从富集分析的算法来看，GSEA属于功能集打分法（Functional Class Scoring）。<br><img src="/images/gsea/GSEA-homegraphic.gif" alt="GSEA">    </p><h1 id="GSEA的使用"><a href="#GSEA的使用" class="headerlink" title="GSEA的使用"></a>GSEA的使用</h1><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p>GSEA官网提供了各种版本的GSEA分析工具，包括java，R，GenePattern等平台的</p>]]></content>
      
      
      <categories>
          
          <category> bioinformatics </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>超几何分布和二项分布</title>
      <link href="2019/02/21/hypergeometric/"/>
      <url>2019/02/21/hypergeometric/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="超几何分布"><a href="#超几何分布" class="headerlink" title="超几何分布"></a>超几何分布</h2><p><strong>超几何分布</strong>是统计学上一种离散概率分布。它描述了由有限个物件中抽出<code>$n$</code> 个物件，成功抽出指定种类的物件的个数的概率（不归还）。  </p><p><strong>黑白球问题解释</strong>：例如共有<code>$N$</code>个球，其中<code>$m$</code>个白球。超几何分布描述了在该<code>$N$</code>个球中抽出<code>$n$</code>个，其中<code>$k$</code>个是白球的机率：<br>$$<br>f(k;n,m,N) = \frac{\binom{m} {k} \binom {N-m} {n-k}} {\binom {N} {n}}<br>$$<br>上式可如此理解：  </p><p><code>$\left( N \over n\right)$</code>表示所有在<code>$N$</code>个样本中抽出<code>$n$</code>个，而抽出的结果不一样的数目。  </p><p><code>$\left(m \over k\right)$</code>表示在<code>$m$</code>个样本中，抽出<code>$k$</code>个的方法数目。剩下来的样本都是及格的，而及格的样本有<code>$N-m$</code>个，剩下的抽法便有<code>$\left(&#123;N-m&#125; \over &#123;n-k&#125;\right)$</code>种。  </p><blockquote><p>若<code>$n=1$</code>，超几何分布还原为伯努利分布。若<code>$N$</code>接近 <code>$\infty$</code>，超几何分布可视为二项分布  </p></blockquote><h2 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h2><p>在概率论和统计学中，<strong>二项分布</strong>（英语：Binomial distribution）是<strong>n个独立的是/非试验中成功的次数的离散概率分布</strong>，其中每次试验的成功概率为<code>$p$</code>。这样的单次成功/失败试验又称为伯努利试验。实际上，当<code>$n=1$</code>时，二项分布就是伯努利分布。  </p><p><strong>具体解释：</strong>  </p><p>假设进行<code>$n$</code>次独立实验，每次实验“成功”的概率为<code>$p$</code>，失败的概率为<code>$1-p$</code>，所有成功的次数X就是一个参数为<code>$n$</code>和<code>$p$</code>的二项随机变量.数学公式定义为：<br>$$<br>p(k) = \binom {n} {k} * p^k * (1-p)^{n-k}<br>$$<br>二项分布公式基于伯努利分布得到，因为二项分布中每项实验都是独立的，因此每一次实验都是一次伯努利实验，在<code>$n$</code>次实验中，成功<code>$k$</code>次，排列方式有<code>$\left( &#123;n \over k&#125; \right)$</code>种，根据乘法原理，即可得到二项分布的公式。  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>超几何分布相当于连续抽取<code>$n$</code>次成功的概率（不放回抽样），二项分布是重复抽<code>$n$</code>次成功的概率（放回抽样）。  </p>]]></content>
      
      
      <categories>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fisher精确检验</title>
      <link href="2019/02/19/fisher/"/>
      <url>2019/02/19/fisher/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>Fisher精确检验是用于分析列联表的统计显着性检验。虽然在实践中它适用于样本量较小的情况，但实际上它适用于所有样本量。它可以精确的计算出差异的显著性p值，而不是卡方检验得到的近似p值。  </p><h2 id="理论依据"><a href="#理论依据" class="headerlink" title="理论依据"></a>理论依据</h2><p>Fisher精确检验是基于超几何分布计算的，它分为两种，分别是单边检验（等同于超几何检验）和双边检验。  </p><blockquote><p>超几何分布是统计学上一种离散概率分布。它描述了由有限个物件中抽出n个物件，成功抽出指定种类的物件的次数（不归还）。称为超几何分布，是因为其形式与“超几何函数”的级数展式的系数有关。超几何分布的一个形象例子是：有N件物品，M件为次品，求取n件，其中有k件为次品的概率 = <code>$\frac &#123;\binom &#123;M&#125; &#123;k&#125; * \binom &#123;N-M&#125; &#123;n-k&#125;&#125; &#123;\binom &#123;N&#125; &#123;n&#125;&#125;$</code>   </p></blockquote><h2 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h2><p>在2*2列联表中，四格表周边和（即边际分布）计数固定不变的条件下，计算表内4个实际频数变动时的各种组合之概率Pi；再按照检验假设用单侧或双侧的累计概率P，依据所取的检验水准做出推断。  </p><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><p>假如想要知道学习好坏是否和男女性别有关，那么现在随机抽出20个人，对应的统计列联表如下：  </p><table><thead><tr><th align="left"></th><th align="left">男</th><th align="left">女</th><th align="left">行总数</th></tr></thead><tbody><tr><td align="left"><strong>好</strong></td><td align="left">9</td><td align="left">3</td><td align="left"><strong>12</strong></td></tr><tr><td align="left"><strong>坏</strong></td><td align="left">1</td><td align="left">7</td><td align="left"><strong>8</strong></td></tr><tr><td align="left"><strong>列总数</strong></td><td align="left"><strong>10</strong></td><td align="left"><strong>10</strong></td><td align="left"><strong>20</strong></td></tr></tbody></table><p><strong>零假设</strong>：男女性别和学习好坏无关  </p><p>为了知道能否拒绝零假设，我们下面做个Fisher精确检验（单侧检验）  </p><p><strong>第一步</strong>：在零假设成立时（即性别与学习好坏无关），我们随机一抽就能抽出这20个样本的概率是（超几何概率）：<br>$$<br>p_1 = {\binom{12} {9}  \binom{8} {1} \over \binom{20} {10}} =  0.0095<br>$$<br><strong>第二步</strong>：如果行总数与列总数（又叫边际总数）不变，零假设不成立时的极端情况应该是，男生学习都好，那么我们可以得到新的列联表：  </p><table><thead><tr><th align="left">男</th><th align="left">女</th><th align="left">行总数</th><th></th></tr></thead><tbody><tr><td align="left"><strong>好</strong></td><td align="left">10</td><td align="left">2</td><td><strong>12</strong></td></tr><tr><td align="left"><strong>坏</strong></td><td align="left">0</td><td align="left">8</td><td><strong>8</strong></td></tr><tr><td align="left"><strong>列总数</strong></td><td align="left"><strong>10</strong></td><td align="left"><strong>10</strong></td><td><strong>20</strong></td></tr></tbody></table><p>这时，可以计算这个表格的超几何概率：<br>$$<br>p_2 = {\binom{12} {10}  \binom{8} {0} \over \binom{20} {10}} =  3.5723 \times 10^{-4}<br>$$<br>那么Fisher精确检验的P value就是两者加和，即<br>$$<br>p_1 + p_2 = 0.0099<br>$$<br>p值越小，我们越有信心拒绝零假设。如果我们以0.05为显著性水平判断值的话，我们可以认为，男生的学习更好  </p><blockquote><p>注意：以上例子计算的是单侧检验的结果，对于双侧结果，一般是说在所有四格表的组合当中，将概率小于或等于原四格表的概率相加，得到双侧概率（需要进一步验证这种说法）  </p></blockquote><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>Fisher精确检验是基于超几何分布检验的，相对于卡方检验来说，适用于小样本量的计算（卡方检验是通过大样本量来近似卡方分布求得近似的p值）  </p>]]></content>
      
      
      <categories>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>富集分析</title>
      <link href="2019/02/18/enrichment/"/>
      <url>2019/02/18/enrichment/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>不管是转录组，还是芯片数据，或者其他有关基因的组学分析，每当数据分析到后面，要想得到结果，都躲不过这个富集分析。对基因功能进行富集分析, 就有可能发现在生物学过程中起关键作用的生物通路, 并且帮助理解生物学过程的分子机制。  </p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>基因集</strong>，即 gene set，是一群具有某一特征的基因构成的集合，比如这些基因可能是出现在同一条通路（pathway）中，或者是具有相同的生物学功能。假如现在有一堆基因，如果想要知道这些基因是属于哪一条生物学通路，或者具有什么样的功能我们应该怎么办？这时候就需要使用到富集分析。  </p><h2 id="富集分析方法"><a href="#富集分析方法" class="headerlink" title="富集分析方法"></a>富集分析方法</h2><h3 id="ORA-Over-Representation-Analysis-：过表达分析【最常使用】"><a href="#ORA-Over-Representation-Analysis-：过表达分析【最常使用】" class="headerlink" title="ORA(Over Representation Analysis)：过表达分析【最常使用】"></a>ORA(Over Representation Analysis)：过表达分析【最常使用】</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>ORA其实可以通过黑白球问题来解释，假设现在有一堆球，包括m个黑球和n个白球；现在我从这一堆球中取出W个，那么最后要看的是这W个球中是黑色的多还是白色的多，即这W个球中主要富集黑色还是白色。  </p><blockquote><p>需要注意的是该方法假设样本或者说基因间是相互独立的，忽略了样本之间的相互联系  </p></blockquote><h4 id="常用统计学方法"><a href="#常用统计学方法" class="headerlink" title="常用统计学方法"></a>常用统计学方法</h4><p>超几何分布检验，二项分布检验，卡方检验，Fisher精确检验  </p><blockquote><p>实际上超几何分布是不放回的抽样，而二项分布是有放回的抽样，因此一般来说二项分布检验可以作为一个近似的估计  </p></blockquote><h3 id="FCS-Functional-Class-Scoring-功能集打分法"><a href="#FCS-Functional-Class-Scoring-功能集打分法" class="headerlink" title="FCS(Functional Class Scoring) 功能集打分法"></a>FCS(Functional Class Scoring) 功能集打分法</h3><p>该种方法已经不再强调单个基因的出现与否对富集造成的显著影响，而考虑到基因的表达等微量变化的叠加对于整个富集过程的影响。  </p><h4 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h4><p>要求的输入是一个排序的基因列表和一个基因集合，不需要设置阈值。计算单个基因表达水平的统计值，采用如衡量差异基因的ANOVA、Q-statistic、t检验、Z-score、信噪比，进行打分或排序，或者直接使用排序好的基因表达谱。同一通路上所有基因的表达水平统计值进行整合，汇集成单个通路水平的分数或统计值，采用基因水平统计的和、均值或中位数，Wilcoxon rank sum, Maxmean statistic, Kolmogorov-Smirnov statistic。对通路水平的显著性进行评估：利用重抽样(bootstrap)的统计学方法  </p><blockquote><p>该方法考虑了基因表达量的差异，相对于ORA来说更加细致化  </p></blockquote><h3 id="PT-Pathway-Topology-通路拓扑学"><a href="#PT-Pathway-Topology-通路拓扑学" class="headerlink" title="PT(Pathway Topology)通路拓扑学"></a>PT(Pathway Topology)通路拓扑学</h3><p>在通路的富集分析中，一般上游基因的表达水平改变要显著大于下游基因对整个通路的影响。PT方法就是把基因在通路中的位置，和其他基因的互作和调控关系结合在一起，评估每个基因对通路的贡献并算出权重，然后把权重整合到富集分析。  </p><h3 id="NT-Network-topology-网络拓扑学"><a href="#NT-Network-topology-网络拓扑学" class="headerlink" title="NT(Network topology)网络拓扑学"></a>NT(Network topology)网络拓扑学</h3><p>利用现有的全基因组范围的生物网络，提取数据库的基因相互作用关系（如：基因连接度、基因在网络中的距离），把基因的生物学属性整合到功能分析。利用网络拓扑结构来计算基因对特定生物通路的重要性并给予相应的权重，再利用传统的ORA 或 FCS 方法来评估特定生物通路的富集程度，如GANPA 和 LEGO。  </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在富集分析中，使用最多的应该是Over Representation Analysis，常见的GO富集分析和KEGG富集都是基于Over Representation Analysis  </p>]]></content>
      
      
      <categories>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>paste()和paste0()用法</title>
      <link href="2019/01/16/paste/"/>
      <url>2019/01/16/paste/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h3 id="函数用法"><a href="#函数用法" class="headerlink" title="函数用法"></a>函数用法</h3><p><strong>paste (…, sep = “ “, collapse = NULL)</strong>  </p><h3 id="用法详解"><a href="#用法详解" class="headerlink" title="用法详解"></a>用法详解</h3><p>其中<code>...</code>表示一个或多个R可以被转化为字符型的对象；参数<code>sep</code>表示分隔符，默认为空格；参数<code>collapse</code>可选，如果不指定值，那么函数paste的返回值是自变量之间通过sep指定的分隔符连接后得到的一个字符型向量；如果为其指定了特定的值，那么自变量连接后的字符型向量会再被连接成一个字符串，之间通过collapse的值分隔。  </p><h3 id="案例展示"><a href="#案例展示" class="headerlink" title="案例展示"></a>案例展示</h3><p>当不添加后置参数时，paste函数和as.character函数的效果是一样的：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste(<span class="number">1</span>:<span class="number">12</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##  [1] &quot;1&quot;  &quot;2&quot;  &quot;3&quot;  &quot;4&quot;  &quot;5&quot;  &quot;6&quot;  &quot;7&quot;  &quot;8&quot;  &quot;9&quot;  &quot;10&quot; &quot;11&quot; &quot;12&quot;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste0(<span class="number">1</span>:<span class="number">12</span>) <span class="comment">#same</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##  [1] &quot;1&quot;  &quot;2&quot;  &quot;3&quot;  &quot;4&quot;  &quot;5&quot;  &quot;6&quot;  &quot;7&quot;  &quot;8&quot;  &quot;9&quot;  &quot;10&quot; &quot;11&quot; &quot;12&quot;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">as.character(<span class="number">1</span>:<span class="number">12</span>) <span class="comment">#same</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##  [1] &quot;1&quot;  &quot;2&quot;  &quot;3&quot;  &quot;4&quot;  &quot;5&quot;  &quot;6&quot;  &quot;7&quot;  &quot;8&quot;  &quot;9&quot;  &quot;10&quot; &quot;11&quot; &quot;12&quot;</span><br></pre></td></tr></table></figure><p>paste函数把它的自变量连成一个字符串，中间默认用空格分开，如：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste(<span class="string">&quot;Hello&quot;</span>,<span class="string">&quot;world&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;Hello world&quot;</span><br></pre></td></tr></table></figure><p>连接的自变量可以是向量，这时各对应元素连接起来，长度不相同时较短的向量被重复使用。如：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste(<span class="string">&quot;A&quot;</span>, <span class="number">1</span>:<span class="number">6</span>, sep = <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;A1&quot; &quot;A2&quot; &quot;A3&quot; &quot;A4&quot; &quot;A5&quot; &quot;A6&quot;</span><br></pre></td></tr></table></figure><p>如果希望返回的结果是一个元素，使用<code>paste(x,collapse)</code>来实现。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste(letters[<span class="number">1</span>:<span class="number">6</span>],collapse=<span class="string">&quot;,&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;a,b,c,d,e,f&quot;</span><br></pre></td></tr></table></figure><p>同时，可以结合<code>sep</code>参数来使用：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste(<span class="string">&quot;A&quot;</span>, <span class="number">1</span>:<span class="number">6</span>, sep = <span class="string">&quot;&quot;</span>,collapse=<span class="string">&quot;,&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;A1,A2,A3,A4,A5,A6&quot;</span><br></pre></td></tr></table></figure><blockquote><p>sep的优先级应该是高于collapse参数的，因此是先执行sep的操作，再执行collpase  </p></blockquote><h3 id="paste0-函数"><a href="#paste0-函数" class="headerlink" title="paste0()函数"></a>paste0()函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">paste (<span class="keyword">...</span>, sep = <span class="string">&quot; &quot;</span>, collapse = <span class="literal">NULL</span>)</span><br><span class="line">paste0(<span class="keyword">...</span>, collapse = <span class="literal">NULL</span>)</span><br></pre></td></tr></table></figure><p>两者对比不难发现：  </p><p><code>paste0(..., collapse)</code> 等同于 <code>paste(..., sep = &quot;&quot;, collapse)</code>, 效率更高些，其他用法相同  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于C-index计算的相关问题</title>
      <link href="2019/01/07/cindex/"/>
      <url>2019/01/07/cindex/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在进行Cox模型的预后能力评估比较时，C-index作为一个重要的评价指标被广泛的使用。目前有多个R包<br>可以实现C-index的计算，如：Hmisc，survcomp等。但是，当进行计算时，发现一个问题，使用不同的<br>R包计算出的C-index值可能不同，虽然这一结果可能是由于对于<a href="http://zeegroom.com/">tied risk</a>事件的处理手段不同所造成的；<br>但是为了尽量获得可靠的C-index，决定采用Harrell本人开发的Hmisc包进行计算  </p><h2 id="计算过程"><a href="#计算过程" class="headerlink" title="计算过程"></a>计算过程</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(survival)</span><br><span class="line">&gt; <span class="keyword">library</span>(Hmisc)</span><br><span class="line">&gt; data(colon)</span><br><span class="line">&gt; d &lt;- colon</span><br><span class="line">&gt; surv &lt;- y &lt;- Surv(d $time, <span class="number">1</span>-(d$ status))</span><br><span class="line">&gt; m1 &lt;- coxph(surv ~ rx+sex, data=d)</span><br><span class="line">&gt; m2 &lt;- coxph(surv ~ rx+sex+age, data=d)</span><br><span class="line">&gt; m1.cindex &lt;- rcorr.cens(-predict(m1), surv)</span><br><span class="line"><span class="comment">#m1的C-index和置信区间</span></span><br><span class="line">&gt; m1.cindex</span><br><span class="line">       C Index            Dxy           S.D.              n        missing     uncensored </span><br><span class="line">  <span class="number">5.266315e-01</span>   <span class="number">5.326294e-02</span>   <span class="number">2.170980e-02</span>   <span class="number">1.858000e+03</span>   <span class="number">0.000000e+00</span>   <span class="number">9.380000e+02</span> </span><br><span class="line">Relevant Pairs     Concordant      Uncertain </span><br><span class="line">  <span class="number">9.379880e+05</span>   <span class="number">4.939740e+05</span>   <span class="number">2.510688e+06</span></span><br><span class="line"></span><br><span class="line">&gt; CIndex &lt;- round(m1.cindex[<span class="string">&#x27;C Index&#x27;</span>], digits = <span class="number">4</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.5266</span> </span><br><span class="line">&gt; Lower &lt;- round(CIndex - <span class="number">1.96</span>*m1.cindex[<span class="string">&#x27;S.D.&#x27;</span>]/<span class="number">2</span>, digits = <span class="number">4</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.5053</span></span><br><span class="line">&gt; Upper &lt;- round(CIndex + <span class="number">1.96</span>*m1.cindex[<span class="string">&#x27;S.D.&#x27;</span>]/<span class="number">2</span>, digits = <span class="number">4</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.5479</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># C-index比较的p值</span></span><br><span class="line">&gt; (r &lt;- rcorrp.cens(predict(m1), predict(m2), surv))</span><br><span class="line">         Dxy        S.D. x1 more concordant x2 more concordant         n </span><br><span class="line">     <span class="number">6.069800e-02</span>    <span class="number">2.345218e-02</span>    <span class="number">5.282221e-01</span>    <span class="number">4.675241e-01</span>    <span class="number">1.858000e+03</span> </span><br><span class="line">       missing     uncensored   Relevant Pairs     Uncertain        C X1 </span><br><span class="line">     <span class="number">0.000000e+00</span>    <span class="number">9.380000e+02</span>    <span class="number">9.379880e+05</span>    <span class="number">2.510688e+06</span>    <span class="number">4.733685e-01</span> </span><br><span class="line">         C X2       Dxy X1       Dxy X2 </span><br><span class="line">     <span class="number">4.614846e-01</span>   -<span class="number">5.326294e-02</span>   -<span class="number">7.703084e-02</span> </span><br><span class="line">&gt; (p.value &lt;- round(<span class="number">2</span>*(<span class="number">1</span> - pnorm(r[[<span class="string">&#x27;Dxy&#x27;</span>]] / r[[<span class="string">&#x27;S.D.&#x27;</span>]])), digits=<span class="number">4</span>))</span><br><span class="line">[<span class="number">1</span>] <span class="number">0.0096</span> </span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://stats.stackovernet.com/cn/q/30724">https://stats.stackovernet.com/cn/q/30724</a></p>]]></content>
      
      
      <categories>
          
          <category> bioinformatics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绘图配色</title>
      <link href="2019/01/07/color/"/>
      <url>2019/01/07/color/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>本篇文章主要收集R语言绘图配色可能用到的一些方案，网站等信息，持续更新ing….  </p><h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><h3 id="colorbrewer"><a href="#colorbrewer" class="headerlink" title="colorbrewer"></a><a href="http://colorbrewer2.org/">colorbrewer</a></h3><p>这个网站中包含多种可视化主题，RColorBrewer包中的配色方案来源于此  </p><h3 id="R语言中的色彩和调色板"><a href="#R语言中的色彩和调色板" class="headerlink" title="R语言中的色彩和调色板"></a><a href="http://iccm.cc/colors-and-palettes-in-r-language/">R语言中的色彩和调色板</a></h3><p>该博文中介绍了介绍了几种常见的R的色彩配色  </p><h3 id="RGB颜色表"><a href="#RGB颜色表" class="headerlink" title="RGB颜色表"></a><a href="http://www.5tu.cn/colors/rgb-peisebiao.html">RGB颜色表</a></h3><p>提供了各种颜色对应的RGB和16色代码  </p><p>更新ing… …  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> color </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何高效的使用谷歌</title>
      <link href="2018/12/20/google/"/>
      <url>2018/12/20/google/</url>
      
        <content type="html"><![CDATA[<p>谷歌是我们常用的搜索工具，对于谷歌的正确使用可以很大程度的节省我们的工作时间，提高工作效率，<strong>以下是几个常用的Google搜索技巧</strong>：  </p><ul><li>使用双引号<strong>“搜索内容”</strong>进行精确的搜索  </li></ul><p>在很多时候，精确搜索是非常必要的，加入引号后Google会自动进行精确的匹配，常用的环境有：软件安装，软件报错等。  </p><ul><li>“减去”搜索内容的搜索  </li></ul><p>一般情况下，我们在搜索时通常采用的是关键词的形式，这时候会搜索出大量的内容，如果需要去除某一类型的结果可以使用“-”的方法进行，这时谷歌会自动过滤掉这一类型的结果。  </p><ul><li>具体文档类型的搜索  </li></ul><p>当你在想要查找具体类型文档的时候非常有用。如你想要pdf版本的只需要在搜索内容的最后加上 filetype:pdf  </p><ul><li>指定网站搜索  </li></ul><p>如果我们想在某个特定的网站进行搜索的话，你可以在搜索内容之后加上site:<em>.com</em>，你得到的答案就全部来自这个网站了。  </p>]]></content>
      
      
      <categories>
          
          <category> opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R的更新</title>
      <link href="2018/11/22/updateR/"/>
      <url>2018/11/22/updateR/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在windows中R和Rstudio的更新是非常头疼的问题，每次更新都需要把之前的版本删掉重新安装，甚是麻烦。所以一直在想是否有R包可以实现R的自动更新和配置。  </p><h3 id="R的更新"><a href="#R的更新" class="headerlink" title="R的更新"></a>R的更新</h3><p>目前R已经提供了<code>installr</code>包用于更新R版本及其相关的软件，目前这种方法只适合于Windows平台。  </p><h4 id="installr安装"><a href="#installr安装" class="headerlink" title="installr安装"></a><code>installr</code>安装</h4><p>目前支持镜像安装，或者从<code>github</code>安装：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 镜像安装</span></span><br><span class="line">install.packages(<span class="string">&#x27;installr&#x27;</span>)  </span><br><span class="line"></span><br><span class="line"><span class="comment"># github安装</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">require</span>(<span class="string">&#x27;devtools&#x27;</span>)) install.packages(<span class="string">&#x27;devtools&#x27;</span>); <span class="comment"># make sure you have Rtools installed first! if not, then run:</span></span><br><span class="line"><span class="comment">#install.packages(&#x27;installr&#x27;)</span></span><br><span class="line"><span class="comment">#install.Rtools()</span></span><br><span class="line">devtools::install_github(<span class="string">&#x27;talgalili/installr&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="安装更新"><a href="#安装更新" class="headerlink" title="安装更新"></a>安装更新</h4><p>直接运行<code>installr()</code>，就会出现下面的选项框，选择需要更新的内容即可  </p><div align = center>     <img src = "/images/updateR/updateR.png"></div><p>目前使用这种方法更新的下载速度比较慢，可能是由于镜像的原因，建议切换到清华的镜像  </p><p><strong>注意</strong>：使用此方法更新Rstudio时，需要在R下运行，如果在Rstudio下将不能完成安装。  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown常用语法</title>
      <link href="2018/11/20/markdown/"/>
      <url>2018/11/20/markdown/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><ol><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AFmarkdown">什么是Markdown</a></li><li><a href="#%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8%E7%9A%84%E4%BC%A0%E5%A5%87%E4%BA%BA%E7%94%9F">亚伦·斯沃茨的传奇人生</a></li><li><a href="#markdown%E7%9A%84%E4%BC%98%E7%82%B9">Markdown的优点</a></li><li><a href="#markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95">Markdown常用语法</a></li><li><a href="#%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95">扩展语法</a>  </li></ol><h3 id="什么是Markdown"><a href="#什么是Markdown" class="headerlink" title="什么是Markdown"></a>什么是Markdown</h3><p><strong>Markdown</strong>是一种<a href="https://zh.wikipedia.org/wiki/%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">轻量级标记语言</a>，创始人为<a href="https://zh.wikipedia.org/wiki/%E7%B4%84%E7%BF%B0%C2%B7%E6%A0%BC%E9%AD%AF%E4%BC%AF">约翰·格鲁伯</a>（英语：John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的<a href="https://zh.wikipedia.org/wiki/XHTML">XHTML</a>（或者<a href="https://zh.wikipedia.org/wiki/HTML">HTML</a>）文档”。作为一种小型标记语言，Markdown很容易阅读，也很容易使用普通的文本编辑器编辑。  </p><p><strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。  </p><h3 id="亚伦·斯沃茨的传奇人生"><a href="#亚伦·斯沃茨的传奇人生" class="headerlink" title="亚伦·斯沃茨的传奇人生"></a>亚伦·斯沃茨的传奇人生</h3><p><strong>Markdown</strong>是由<a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计的，<strong>Aaron Swartz</strong>就是那位于2013年自杀,有着<strong>开挂</strong>一般传奇人生经历的美国程序员。死后也被追授入<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%9A%9B%E7%B6%B2%E8%B7%AF%E5%90%8D%E4%BA%BA%E5%A0%82">互联网名人堂</a>。维基百科对他的评价是：<a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD">美国</a><a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E8%84%91%E7%A8%8B%E5%BA%8F%E5%91%98">计算机程序员</a>、<a href="https://zh.wikipedia.org/wiki/%E4%BC%81%E4%B8%9A%E5%AE%B6">企业家</a>、<a href="https://zh.wikipedia.org/wiki/%E4%BD%9C%E5%AE%B6">作家</a>、<a href="https://zh.wikipedia.org/w/index.php?title=%E6%94%BF%E6%B2%BB%E6%B4%BB%E5%8A%A8%E8%80%85&action=edit&redlink=1">政治活动者</a>和互联网<a href="https://zh.wikipedia.org/w/index.php?title=%E9%BB%91%E5%AE%A2%E4%B8%BB%E4%B9%89&action=edit&redlink=1">黑客主义者</a>  </p><p>他的一生足以让我们膜拜：  </p><ul><li>13岁时，斯沃茨赢得为创办“有用、有教育意义、协作而非商业的网站”的年轻人而设的<a href="https://zh.wikipedia.org/w/index.php?title=ArsDigita_Prize&action=edit&redlink=1">ArsDigita</a>奖。</li><li>14岁时，斯沃茨加入编写早期版本的<a href="https://zh.wikipedia.org/wiki/RSS">RSS</a>1.0版本的工作组。</li><li><strong>2004</strong>年入读<strong>斯坦福</strong>，2005年暑假之后就退学创业。。。</li><li><strong>2005</strong>年创建<a href="http://infogami.org/">Infogami</a>，之后与<a href="http://www.reddit.com/">Reddit</a>合并成为其合伙人，斯沃茨被给予公司联合创始人的头衔。</li><li>2008 年，斯沃茨创办了 Watchdog.net，“会咬人的优秀政府类网站”（”the good government site with teeth”），用于汇集政治人物相关的数据起来并进行数据可视化。此外，他最著名的项目之一是《DeadDrop》（之后更名为《<a href="https://zh.wikipedia.org/w/index.php?title=SecureDrop&action=edit&redlink=1">SecureDrop</a>》），一个致力于帮助记者和线人（<a href="https://zh.wikipedia.org/wiki/%E5%91%8A%E5%AF%86%E8%80%85">告密者</a>）安全沟通的平台。</li><li>2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。<ul><li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。</li><li><strong>2013</strong>年1月自杀身亡，死后仍然影响着世界各地的黑客。</li><li><strong>科里·多克托罗的评价</strong>：亚伦拥有无以伦比的政治洞见力、技术能力和处理人、事的智能。我认为他本可以彻底改变美国（及世界）政治。不过——他的遗产仍然可以在将来对政治做出影响。  </li></ul></li></ul><div align = center>    <img src = "/images/markdown/220px-Aaron_Swartz_profile.jpg"/></div>  <h3 id="Markdown的优点"><a href="#Markdown的优点" class="headerlink" title="Markdown的优点"></a>Markdown的优点</h3><ul><li>易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong></li><li>与HTML兼容，是属于程序员的Word</li><li>排版方便</li><li>越来越多的网站支持Markdown。（主要还是写博客方便😜）  </li></ul><h3 id="Markdown常用语法"><a href="#Markdown常用语法" class="headerlink" title="Markdown常用语法"></a>Markdown常用语法</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>标题一般有两种形式：<br>1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p><blockquote><p>一级标题  </p><p><code>========= </code>  </p><p>二级标题  </p><p><code>---------</code>  </p></blockquote><p>效果：</p><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote><p>2）使用<code>#</code>，可表示1-6级标题。</p><blockquote><p><code># 一级标题</code> </p><p><code>## 二级标题</code>    </p><p><code>### 三级标题</code>  </p><p><code>#### 四级标题</code>  </p><p><code>##### 五级标题</code>  </p><p><code>###### 六级标题</code></p></blockquote><p>效果:</p><blockquote><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><h4 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h4><p>Markdown的段落前后都要有空行，如果要段内强制换行，需要使用<strong>两个以上</strong><code>空格键</code>加上<code>回车键</code>  </p><h4 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h4><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p><blockquote><p>&gt;区块引用<br>&gt;&gt; 嵌套引用</p></blockquote><p>效果：</p><blockquote><p>区块引用</p><blockquote><p>嵌套引用  </p></blockquote></blockquote><h4 id="插入代码块"><a href="#插入代码块" class="headerlink" title="插入代码块"></a>插入代码块</h4><p>代码区块的建立有两种方法：<br>1）在每行加上4个空格或者一个制表符，如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello Markdown</span><br></pre></td></tr></table></figure><p><strong>注意</strong>:和普通段落之间需要单独保留空行。  </p><p>2）使用三个**```** 来作为代码开始的标志，如：</p><blockquote><p>```<br>Hello Markdown<br>```</p></blockquote><p>效果如下：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello Markdown</span><br></pre></td></tr></table></figure><h4 id="黑体和斜体"><a href="#黑体和斜体" class="headerlink" title="黑体和斜体"></a>黑体和斜体</h4><p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p><blockquote><p>*斜体*，<em>斜体</em>    </p><p>*<em>粗体\</em>*，<strong>粗体</strong></p></blockquote><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p><strong>无序列表</strong><br>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：    </p><blockquote><p>-（+*） 第一项  </p><p>-（+*） 第二项  </p><p>-（+*）第三项  </p></blockquote><p><strong>注意</strong>：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。  </p><p>效果：  </p><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项  </li></ul></blockquote><p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：  </p><blockquote><p>1 . 第一项<br>2 . 第二项<br>3 . 第三项      </p></blockquote><p>效果：  </p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项  </li></ol></blockquote><h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。  </p><p><strong>注意</strong>： 第一二级标题会自带分割线  </p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><p>链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。  </p><p><strong>行内式</strong>：  </p><blockquote><p> [**Aaron Swartz**](<a href="http://www.aaronsw.com//">http://www.aaronsw.com/\</a>)    </p></blockquote><p>效果：  </p><p><a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a>  </p><p><strong>参考式</strong>：<br>就是以参考的形式给出链接  </p><blockquote><p>[**Aaron Swartz**][1]  </p><p>[**亚伦·斯沃茨**][2]  </p></blockquote><p>效果：  </p><p><a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a><br><a href="http://www.aaronsw.com/"><strong>亚伦·斯沃茨</strong></a>  </p><h4 id="图像插入"><a href="#图像插入" class="headerlink" title="图像插入"></a>图像插入</h4><p>插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个 <code>!</code>。也可分为行内式和参考式两种。   </p><blockquote><p>![亚伦·斯沃茨](<a href="https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Aaron_Swartz_profile.jpg/220px-Aaron_Swartz_profile.jpg/">https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Aaron_Swartz_profile.jpg/220px-Aaron_Swartz_profile.jpg\</a>)</p></blockquote><p>Markdown 不支持指定图片的显示大小，不过可以通过直接插入<code>&lt;img /&gt;</code>标签来指定相关属性。  </p><h4 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h4><p>反斜线（<code>\</code>）用于插入在 Markdown 语法中有特殊作用的字符。  </p><h4 id="行内代码块"><a href="#行内代码块" class="headerlink" title="行内代码块"></a>行内代码块</h4><p>起到标记作用。如：  </p><blockquote><p>`hello`</p></blockquote><p>效果：  </p><blockquote><p><code>hello</code>  </p></blockquote><h3 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h3><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><p>使用<code>~~</code>表示  </p><blockquote><p>~<del>删除线</del>  </p></blockquote><p>效果：</p><blockquote><p><del>删除线</del></p></blockquote><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>使用<code>|</code>表示表格纵向边界，表头和表内容用<code>-</code>隔开，并可用<code>:</code>进行对齐设置，两边都有<code>:</code>则表示居中，若不加<code>:</code>则默认左对齐。  </p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| left | center | right |</span><br><span class="line">| :--- | :----: | ----: |</span><br><span class="line">| aaaa | bbbbbb | ccccc |</span><br><span class="line">| a    | b      | c     |</span><br></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th align="left">left</th><th align="left">center</th><th align="left">right</th></tr></thead><tbody><tr><td align="left">aaaa</td><td align="left">bbbbbb</td><td align="left">ccccc</td></tr><tr><td align="left">a</td><td align="left">b</td><td align="left">c</td></tr></tbody></table><p>表格中不仅可以加入字符，还可以是链接等信息。  </p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卡方检验</title>
      <link href="2018/11/12/chisq/"/>
      <url>2018/11/12/chisq/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="卡方检验"><a href="#卡方检验" class="headerlink" title="卡方检验"></a>卡方检验</h2><p>卡方检验(Chi-square test/Chi-Square Goodness-of-Fit Test)  </p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>卡方检验是一种非参数假设检验，主要用于比较两个分类变量的关联性分析，其根本思想就是在于比较理论频数和实际频数的吻合程度或拟合优度问题。  </p><p>它在分类资料统计推断中的应用，包括：两个率或两个构成比比较的卡方检验；多个率或多个构成比比较的卡方检验以及分类资料的相关分析等。  </p><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><h4 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h4><p>卡方检验是以χ2分布为基础的一种假设检验方法，它的原假设H0是：观察频数与期望频数没有差别。  </p><p>首先假设H0成立，基于此前提下计算出χ2值，它表示观察值与理论值之间的偏离程度。根据χ2分布及自由度可以确定在H0假设成立的情况下获得当前统计量及更极端情况的概率P。如果P值很小，说明观察值与理论值偏离程度太大，应当拒绝无效假设，表示比较资料之间有显著差异；否则就不能拒绝无效假设，尚不能认为样本所代表的实际情况和理论假设有差别。  </p><h4 id="卡方值的计算与意义"><a href="#卡方值的计算与意义" class="headerlink" title="卡方值的计算与意义"></a>卡方值的计算与意义</h4><p>对于χ2统计量的计算，最初是由英国统计学家Karl Pearson在1900年首次提出的，因此也称之为Pearson χ2，其计算公式为<br>$$<br>\chi^2=\sum \frac{(A-E)^2}{E}=\sum_{i=1}^k \frac{(A_i-E_i)^2}{E_i}=\sum_{i=1}^k \frac{(A_i-np_i)^2}{np_i}　　(i=1，2，3，…，k)<br>$$</p><blockquote><p>其中，Ai为i水平的观察频数，Ei为i水平的期望频数，n为总频数，pi为i水平的期望频率。i水平的期望频数Ei等于总频数n×i水平的期望概率pi，k为单元格数。当n比较大时，χ2统计量近似服从k-1(计算Ei时用到的参数个数)个自由度的卡方分布。  </p></blockquote><p>由卡方的计算公式可知，当观察频数与期望频数完全一致时，χ2值为0；观察频数与期望频数越接近，两者之间的差异越小，χ2值越小；反之，观察频数与期望频数差别越大，两者之间的差异越大，χ2值越大。换言之，大的χ2值表明观察频数远离期望频数，即表明远离假设。小的χ2值表明观察频数接近期望频数，接近假设。因此，χ2是观察频数与期望频数之间距离的一种度量指标，也是假设成立与否的度量指标。如果χ2值“小”，研究者就倾向于不拒绝H0；如果χ2值大，就倾向于拒绝H0。至于χ2在每个具体研究中究竟要大到什么程度才能拒绝H0，则要借助于卡方分布求出所对应的P值来确定。  </p><h4 id="样本量要求"><a href="#样本量要求" class="headerlink" title="样本量要求"></a>样本量要求</h4><p>卡方分布本身是连续型分布，但是在分类资料的统计分析中，显然频数只能以整数形式出现，因此计算出的统计量是非连续的。只有当样本量比较充足时，才可以忽略两者问的差异，否则将可能导致较大的偏差具体而言，一般认为对于卡方检验中的每一个单元格，要求其最小期望频数均大于1，且至少有4／5的单元格期望频数大于5，此时使用卡方分布计算出的概率值才是准确的。如果数据不符合要求，可以采用Fisher精确检验计算。  </p><h3 id="卡方检验类型"><a href="#卡方检验类型" class="headerlink" title="卡方检验类型"></a>卡方检验类型</h3><h4 id="四格表资料的卡方检验"><a href="#四格表资料的卡方检验" class="headerlink" title="四格表资料的卡方检验"></a>四格表资料的卡方检验</h4><p>四格表资料的卡方检验用于进行两个率或两个构成比的比较。  </p><p>(1) 公式  </p><p>若四格表资料四个格子的频数分别为a，b，c，d，则四格表资料卡方检验的卡方值=<br>$$<br>(ad-bc)^2 \times n/(a+b)(c+d)(a+c)(b+d)<br>$$<br>自由度v=(行数-1)(列数-1)  </p><p>(2)  应用条件  </p><p>要求样本含量应大于40且每个格子中的理论频数不应小于5。当样本含量大于40但理论频数有小于5的情况时卡方值需要校正，当样本含量小于40时只能用Fisher精确检验计算概率。  </p><h4 id="行×列表资料的卡方检验"><a href="#行×列表资料的卡方检验" class="headerlink" title="行×列表资料的卡方检验"></a>行×列表资料的卡方检验</h4><p>行×列表资料的卡方检验用于多个率或多个构成比的比较。  </p><p>(1) 公式    </p><p>r行c列表资料卡方检验的卡方值:<br>$$<br>n[(A_{11}/n_1n_1+A_{12}/n_1n_2+\cdots+A_{rc}/n_rn_c)-1]<br>$$<br>(2) 应用条件  </p><p>要求每个格子中的理论频数T均大于5或1&lt;T&lt;5的格子数不超过总格子数的1/5。当有T&lt;1或1&lt;T&lt;5的格子较多时，可采用并行并列、删行删列、增大样本含量的办法使其符合行×列表资料卡方检验的应用条件。  </p><h4 id="列联表资料的卡方检验"><a href="#列联表资料的卡方检验" class="headerlink" title="列联表资料的卡方检验"></a>列联表资料的卡方检验</h4><p>同一组对象，观察每一个个体对两种分类方法的表现，结果构成双向交叉排列的统计表就是列联表。  </p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><ul><li>检验某个连续变量的分布是否与某种理论分布相一致。  </li><li>检验某个分类变量各类的出现概率是否等于指定概率。  </li><li>检验某两个分类变量是否相互独立。(最常见到的）  </li><li>检验某两种方法的结果是否一致。  </li></ul><h3 id="应用条件"><a href="#应用条件" class="headerlink" title="应用条件"></a>应用条件</h3><ol><li>所有的理论数T≥5并且总样本量n≥40，用Pearson卡方进行检验。  </li><li>如果理论数T＜5但T≥1，并且1≥40，用连续性校正的卡方进行检验。  </li><li>如果有理论数T＜1或n＜40，则用Fisher’s检验。  </li></ol><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://wiki.mbalib.com/wiki/%E5%8D%A1%E6%96%B9%E6%A3%80%E9%AA%8C">卡方检验-MBA智库百科</a>  </p>]]></content>
      
      
      <categories>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言代码规范</title>
      <link href="2018/11/05/r-format/"/>
      <url>2018/11/05/r-format/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <p>R语言是一门主要用于统计计算和绘图的高级编程语言. 在使用R时，好的代码编写和注释规范，可以提高代码的可读性和工作效率. 然而，什么样的规范更有利于我们自己使用和第三方解读？在此，建议使用《来自Google的R语言编码风格指南》一文中推荐的代码写作风格，这个规则是由Google的R用户群体协同设计而成.</p><h2 id="概要-R编码风格约定"><a href="#概要-R编码风格约定" class="headerlink" title="概要: R编码风格约定"></a>概要: R编码风格约定</h2><ol><li><a href="#%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D">文件命名</a>: 以 .R (大写) 结尾</li><li><a href="#%E6%A0%87%E8%AF%86%E7%AC%A6%E5%91%BD%E5%90%8D">标识符命名</a>: variable.name, FunctionName, kConstantName</li><li><a href="#%E5%8D%95%E8%A1%8C%E9%95%BF%E5%BA%A6">单行长度</a>: 不超过80个字符</li><li><a href="#%E7%BC%A9%E8%BF%9B">缩进</a>: 两个空格, 不使用制表符</li><li><a href="#%E7%A9%BA%E7%99%BD">空白</a></li><li><a href="#%E8%8A%B1%E6%8B%AC%E5%8F%B7">花括号</a>: 前括号不折行写, 后括号独占一行</li><li><a href="#%E8%B5%8B%E5%80%BC">赋值符号</a>: 使用 &lt;-, 而非 =</li><li><a href="#%E5%88%86%E5%8F%B7">分号</a>: 不要用</li><li><a href="#%E6%80%BB%E4%BD%93%E5%B8%83%E5%B1%80%E5%92%8C%E9%A1%BA%E5%BA%8F">总体布局和顺序</a></li><li><a href="#%E6%B3%A8%E9%87%8A%E5%87%86%E5%88%99">注释准则</a>: 所有注释以 # 开始, 后接一个空格; 行内注释需要在 # 前加两个空格</li><li><a href="#%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E8%B0%83%E7%94%A8">函数的定义和调用</a></li><li><a href="#%E5%87%BD%E6%95%B0%E6%96%87%E6%A1%A3">函数文档</a></li><li><a href="#%E7%A4%BA%E4%BE%8B%E5%87%BD%E6%95%B0">示例函数</a></li><li><a href="#TODO%E4%B9%A6%E5%86%99%E9%A3%8E%E6%A0%BC">TODO书写风格</a>: TODO(您的用户名)</li></ol><h3 id="1-表示和命名"><a href="#1-表示和命名" class="headerlink" title="1. 表示和命名"></a>1. 表示和命名</h3><h4 id="文件命名"><a href="#文件命名" class="headerlink" title="文件命名"></a>文件命名</h4><p>文件名应以 .R (大写) 结尾, 文件名本身要有意义.<br>如: <font color = "green">predict_ad_revenue.R</font></p><h4 id="标识符命名"><a href="#标识符命名" class="headerlink" title="标识符命名"></a>标识符命名</h4><p>在标识符中不要使用下划线 ( _ ) 或连字符 ( - ). 标识符应根据如下惯例命名. 变量名应使用点 (.) 分隔所有的小写字母或单词; 函数名首字母大写, 不用点分隔 (所含单词首字母大写); 常数命名规则同函数, 但需使用一个 k 开头.</p><ul><li>变量命名<br>正例: <font color = "green">avg.clicks</font><br>反例: <font color = "red">avg_Clicks , avgClicks</font></li><li>FunctionName<br>正例: <font color = "green">CalculateAvgClicks</font><br>反例: <font color = "red">calculate_avg_clicks , calculateAvgClicks</font><br>函数命名应为动词或动词性短语.</li></ul><p><em>例外: 当创建一个含类 (class) 属性的对象时, 函数名 (也是constructor) 和类名 (class) 应当匹配 (例如, lm).</em></p><ul><li><font color = "green">kConstantName</font></li></ul><h3 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h3><h4 id="单行长度"><a href="#单行长度" class="headerlink" title="单行长度"></a>单行长度</h4><p>最大单行长度为 80 个字符.</p><h4 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h4><p>使用两个空格来缩进代码. 永远不要使用制表符或混合使用二者.<br><em>例外: 当括号内发生折行时, 所折行与括号内的第一个字符对齐.</em></p><h4 id="空白"><a href="#空白" class="headerlink" title="空白"></a>空白</h4><p>在所有二元操作符 (=, +, -, &lt;-, 等等) 的两侧加上空格.<br><em>例外: 在函数调用中传递参数时 = 两边的空格可加可不加</em>.</p><p>不可在逗号前加空格, 逗号后总须加空格.</p><p>例如:  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tabPrior &lt;- table(df[df$daysFromOpt &lt; <span class="number">0</span>, <span class="string">&quot;campaignid&quot;</span>])</span><br><span class="line">        total &lt;- sum(x[, <span class="number">1</span>])</span><br><span class="line">        total &lt;- sum(x[<span class="number">1</span>, ])</span><br></pre></td></tr></table></figure><p>在前括号前加一个空格, 函数调用时除外.<br>例如：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (debug)</span><br></pre></td></tr></table></figure><p>多加空格 (即, 在行内使用多于一个空格) 也是可以的, 如果这样做能够改善等号或箭头 (&lt;-) 的对齐效果.  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plot(x    = xCoord,</span><br><span class="line">     y    = dataMat[, makeColName(metric, ptiles[<span class="number">1</span>], <span class="string">&quot;roiOpt&quot;</span>)],</span><br><span class="line">     ylim = ylim,</span><br><span class="line">     xlab = <span class="string">&quot;dates&quot;</span>,</span><br><span class="line">     ylab = metric,</span><br><span class="line">     main = (paste(metric, <span class="string">&quot; for 3 samples &quot;</span>, sep=<span class="string">&quot;&quot;</span>)))</span><br></pre></td></tr></table></figure><p>不要向圆括号或方括号中的代码两侧加入空格.<br><em>例外: 逗号后总须加空格.</em></p><p>以下写法就是错误的：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( debug )  <span class="comment"># debug 的两边不要加空格</span></span><br><span class="line">x[<span class="number">1</span>,]  <span class="comment"># 需要在逗号后加一个空格</span></span><br></pre></td></tr></table></figure><h4 id="花括号"><a href="#花括号" class="headerlink" title="花括号"></a>花括号</h4><p><strong>前括号永远不应该独占一行; 后括号应当总是独占一行</strong>. 您可以在代码块只含单个语句时省略花括号; 但在处理这类单个语句时, 您必须 前后一致地 要么全部使用花括号, 或者全部不用花括号.</p><p>例如：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (is.null(ylim)) &#123;</span><br><span class="line">  ylim &lt;- c(<span class="number">0</span>, <span class="number">0.06</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (is.null(ylim))</span><br><span class="line">  ylim &lt;- c(<span class="number">0</span>, <span class="number">0.06</span>)</span><br></pre></td></tr></table></figure><p>总在新起的一行开始书写代码块的主体。  </p><h4 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h4><p>使用 <code>&lt;-</code> 进行赋值, 不用<code> =</code> 赋值  </p><h4 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h4><p>不要以分号结束一行, 也不要利用分号在同一行放多于一个命令. (分号是毫无必要的, 并且为了与其他Google编码风格指南保持一致, 此处同样略去.)  </p><h3 id="3-代码组织"><a href="#3-代码组织" class="headerlink" title="3. 代码组织"></a>3. 代码组织</h3><h4 id="总体布局和顺序"><a href="#总体布局和顺序" class="headerlink" title="总体布局和顺序"></a>总体布局和顺序</h4><p>如果所有人都以相同顺序安排代码内容, 我们就可以更加轻松快速地阅读并理解他人的脚本了.  </p><ol><li>版权声明注释</li><li>作者信息注释</li><li>文件描述注释, 包括程序的用途, 输入和输出</li><li><font color = "green">source()</font> 和 <font color = "green">library()</font> 语句</li><li>函数定义</li><li>要执行的语句, 如果有的话 (例如, <font color = "green">print, plot</font>)<br>单元测试应在另一个名为 <font color = "green">原始的文件名_unittest.R</font> 的独立文件中进行  </li></ol><h4 id="注释准则"><a href="#注释准则" class="headerlink" title="注释准则"></a>注释准则</h4><p>注释您的代码. 整行注释应以 <code># </code>后接一个空格开始.  </p><p>行内短注释应在代码后接两个空格, <code>#</code>, 再接一个空格.  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create histogram of frequency of campaigns by pct budget spent.</span></span><br><span class="line">    hist(df$pctSpent,</span><br><span class="line">    breaks = <span class="string">&quot;scott&quot;</span>,  <span class="comment"># method for choosing number of buckets</span></span><br><span class="line">    main   = <span class="string">&quot;Histogram: fraction budget spent by campaignid&quot;</span>,</span><br><span class="line">    xlab   = <span class="string">&quot;Fraction of budget spent&quot;</span>,</span><br><span class="line">    ylab   = <span class="string">&quot;Frequency (count of campaignids)&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="函数的定义和调用"><a href="#函数的定义和调用" class="headerlink" title="函数的定义和调用"></a>函数的定义和调用</h4><p><strong>函数定义应首先列出无默认值的参数, 然后再列出有默认值的参数.</strong>  </p><p>函数定义和函数调用中, 允许每行写多个参数; 折行只允许在赋值语句外进行.  </p><p>例如：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PredictCTR &lt;- <span class="keyword">function</span>(query, property, numDays,</span><br><span class="line">    showPlot = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><p>理想情况下, 单元测试应该充当函数调用的样例 (对于包中的程序来说).  </p><h4 id="函数文档"><a href="#函数文档" class="headerlink" title="函数文档"></a>函数文档</h4><p>函数在定义行下方都应当紧接一个注释区. 这些注释应当由如下内容组成: 此函数的一句话描述; 此函数的参数列表, 用 Args: 表示, 对每个参数的描述 (包括数据类型); 以及对于返回值的描述, 以 Returns: 表示. 这些注释应当描述得足够充分, 这样调用者无须阅读函数中的任何代码即可使用此函数.  </p><h4 id="示例函数"><a href="#示例函数" class="headerlink" title="示例函数"></a>示例函数</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">CalculateSampleCovariance &lt;- <span class="keyword">function</span>(x, y, verbose = <span class="literal">TRUE</span>) &#123;</span><br><span class="line">        <span class="comment"># Computes the sample covariance between two vectors.</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># Args:</span></span><br><span class="line">        <span class="comment">#   x: One of two vectors whose sample covariance is to be calculated.</span></span><br><span class="line">        <span class="comment">#   y: The other vector. x and y must have the same length, greater than one,</span></span><br><span class="line">        <span class="comment">#      with no missing values.</span></span><br><span class="line">        <span class="comment">#   verbose: If TRUE, prints sample covariance; if not, not. Default is TRUE.</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment"># Returns:</span></span><br><span class="line">        <span class="comment">#   The sample covariance between x and y.</span></span><br><span class="line">        n &lt;- length(x)</span><br><span class="line">        <span class="comment"># Error handling</span></span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">1</span> || n != length(y)) &#123;</span><br><span class="line">        <span class="keyword">stop</span>(<span class="string">&quot;Arguments x and y have invalid lengths: &quot;</span>,</span><br><span class="line">        length(x), <span class="string">&quot; and &quot;</span>, length(y), <span class="string">&quot;.&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">TRUE</span> %<span class="keyword">in</span>% is.na(x) || <span class="literal">TRUE</span> %<span class="keyword">in</span>% is.na(y)) &#123;</span><br><span class="line">        <span class="keyword">stop</span>(<span class="string">&quot; Arguments x and y must not have missing values.&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        covariance &lt;- var(x, y)</span><br><span class="line">        <span class="keyword">if</span> (verbose)</span><br><span class="line">        cat(<span class="string">&quot;Covariance = &quot;</span>, round(covariance, <span class="number">4</span>), <span class="string">&quot;.\n&quot;</span>, sep = <span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span>(covariance)</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="TODO书写风格"><a href="#TODO书写风格" class="headerlink" title="TODO书写风格"></a>TODO书写风格</h4><p>编码时通篇使用一种一致的风格来书写TODO.<br><font color = "green">TODO(您的用户名): 所要采取行动的明确描述</font>  </p><hr><p><strong>Reference：</strong>  </p><p><a href="https://nanx.me/rstyle/">来自Google的R语言编码风格指南</a>  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cut()函数的使用</title>
      <link href="2018/11/01/cut/"/>
      <url>2018/11/01/cut/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="函数名"><a href="#函数名" class="headerlink" title="函数名"></a>函数名</h2><p><code>cut()</code>  </p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>将一个数值向量根据间隔划分出不同的组，返回一个因子向量  </p><h2 id="函数用法"><a href="#函数用法" class="headerlink" title="函数用法"></a>函数用法</h2><p><code>cut(x, breaks, labels = NULL, include.lowest = FALSE, right = TRUE, dig.lab = 3, ordered_result = FALSE, ��)</code>  </p><h2 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h2><p><code>x</code> ： 将要被分割的数值型向量  </p><p><code>breaks</code> ：长度大于1的数值型向量，指定切割数据的分割点  </p><p><code>labels</code> ：结果分组中每组的标签  </p><p><code>right</code> ：逻辑值，指定分割区间是左闭右开“[)”还是左开右闭“(]”  </p><p><code>ordered_result</code> : 逻辑值，结果因子是否是有序的？  </p><h2 id="案例说明"><a href="#案例说明" class="headerlink" title="案例说明"></a>案例说明</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test &lt;- c(<span class="number">1</span>:<span class="number">10</span>)</span><br><span class="line">test</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##  [1]  1  2  3  4  5  6  7  8  9 10</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut(test, breaks = c(<span class="number">0</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">10</span>)) <span class="comment">#以3,6作为分割点进行分割 </span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##  [1] (0,3]  (0,3]  (0,3]  (3,6]  (3,6]  (3,6]  (6,10] (6,10] (6,10] (6,10]</span><br><span class="line">## Levels: (0,3] (3,6] (6,10]</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut(test, breaks = c(<span class="number">0</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">10</span>), include.lowest = <span class="literal">T</span>) <span class="comment">#参数include.lowest可以设置是否包括最小的那个值</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##  [1] [0,3]  [0,3]  [0,3]  (3,6]  (3,6]  (3,6]  (6,10] (6,10] (6,10] (6,10]</span><br><span class="line">## Levels: [0,3] (3,6] (6,10]</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut(test, breaks = c(<span class="number">0</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">10</span>),labels = c(<span class="string">&quot;0-3&quot;</span>, <span class="string">&quot;4-6&quot;</span>,<span class="string">&quot;7-10&quot;</span>)) <span class="comment">#参数lables设置每个类的标签</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##  [1] 0-3  0-3  0-3  4-6  4-6  4-6  7-10 7-10 7-10 7-10</span><br><span class="line">## Levels: 0-3 4-6 7-10</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut(test, breaks = c(<span class="number">0</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">10</span>), right = <span class="literal">F</span>) <span class="comment">#参数right可以设置区间是左开右闭还是左闭右开</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##  [1] [0,3)  [0,3)  [3,6)  [3,6)  [3,6)  [6,10) [6,10) [6,10) [6,10) &lt;NA&gt;  </span><br><span class="line">## Levels: [0,3) [3,6) [6,10)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut(test, breaks = c(<span class="number">0</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">10</span>), ordered_result = <span class="literal">T</span>) <span class="comment">#参数ordered_result设置是否返回有序因子向量</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##  [1] (0,3]  (0,3]  (0,3]  (3,6]  (3,6]  (3,6]  (6,10] (6,10] (6,10] (6,10]</span><br><span class="line">## Levels: (0,3] &lt; (3,6] &lt; (6,10]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R for beginners学习笔记</title>
      <link href="2018/10/27/r-beginner/"/>
      <url>2018/10/27/r-beginner/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="R-for-beginners"><a href="#R-for-beginners" class="headerlink" title="R for beginners"></a><strong>R for beginners</strong></h2><h3 id="一、基本原理和概念"><a href="#一、基本原理和概念" class="headerlink" title="一、基本原理和概念"></a><strong>一、基本原理和概念</strong></h3><ol><li>R是一种<strong>解释型语言</strong>， 而不是<strong>编译语言</strong>， 也就意味着输入的命令能够直接被执行， 而不需要像一些语言要首先构成一个完整的程序形式(如C， Fortan, Pascal, . . . )。  </li><li>当R运行时， 所有变量， 数据， 函数及结果都以对象(<em>objects</em>)的形式存在计算机的活动内存中， 并冠有相应的名字代号。  </li><li><strong>命名规范：</strong>对象的名字必须是以一个字母开头(A{Z 或a{z), 中间可以包含字母， 数字(0{9)， 点(.)及下划线( ). 因为R对对象的名字区分大小写， 所以x 和X就可以代表两个完全不同的对象。  </li><li>函数ls的功能是显示所有在内存中的对象，如果只要显示出在名称中带有某个指定字符的对象， 则通过设定选项pattern 来实现。如：<code>ls(pat = &quot;m&quot;)</code>,会显示在名称中以<code>m</code>开头的对象  </li><li>运行函数ls.str()将会展示内存中所有对象的详细信息  </li><li>要在内存中删除某个对象， 可利用函数<code>rm</code>: 运行<code>rm(x)</code>将会删除对象<code>x</code>,运行<code>rm(x,y)</code> 将会删除对象<code>x</code>和<code>y</code>， 而运行<code>rm(list=ls())</code>则会删除内存中的所有对象. 在<code>ls() </code>函数中的一些选项同样也可以运用到<code>rm</code>中来， 以选择的删除一些对象， 如: <code>rm(list=ls(pat=”^m”))</code>。  </li></ol><h3 id="二、R的数据操作"><a href="#二、R的数据操作" class="headerlink" title="二、R的数据操作"></a><strong>二、R的数据操作</strong></h3><h4 id="1-对象"><a href="#1-对象" class="headerlink" title="1. 对象"></a><strong>1. 对象</strong></h4><ol><li>在R中，操作的内容称作对象(<em>objects</em>)，对象的刻画主要通过：1）名称和内容；2）<strong>属性</strong>  </li><li>所有的对象都有两个内在属性： <strong>类型</strong>和<strong>长度</strong>。 类型是对象元素的基本种类，共有四种： <code>数值型</code>， <code>字符型</code>， <code>复数型</code>和<code>逻辑型</code> ；长度是对象中元素的数目。对象的类型和长度可以分别通过函数mode和length得到。  </li><li>对象的类型是可以通过<code>as.something</code>这种形式的函数可以完成转换的。  </li><li>比较两个对象时，需要使用<code>identical</code>和<code>all.equal</code>函数，他们两者之间存在差别：<code>identical</code>比较数据的内在关系， 如果对象是严格相同的返回<code>TRUE</code>， 否则返回<code>FALSE</code>。 <code>all.equal</code>用来判断两个对象是否“ 近似相等” ， 返回结果为<code>TRUE</code>或者对二者差异的描述。 后一个函数在比较数值型变量时考虑到了计算过程中的近似。具体示例如下：  </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0.9</span> == (<span class="number">1</span> - <span class="number">0.1</span>)</span><br><span class="line">identical(<span class="number">0.9</span>, <span class="number">1</span> - <span class="number">0.1</span>)</span><br><span class="line">all.equal(<span class="number">0.9</span>, <span class="number">1</span> - <span class="number">0.1</span>)</span><br><span class="line"><span class="number">0.9</span> == (<span class="number">1.1</span> - <span class="number">0.2</span>)</span><br><span class="line">identical(<span class="number">0.9</span>, <span class="number">1.1</span> - <span class="number">0.2</span>)</span><br><span class="line">all.equal(<span class="number">0.9</span>, <span class="number">1.1</span> - <span class="number">0.2</span>)</span><br><span class="line">all.equal(<span class="number">0.9</span>, <span class="number">1.1</span> - <span class="number">0.2</span>, tolerance = <span class="number">1e-16</span>)</span><br></pre></td></tr></table></figure><h3 id="三、R绘图"><a href="#三、R绘图" class="headerlink" title="三、R绘图"></a><strong>三、R绘图</strong></h3><ol><li>有两种绘图函数： 高级绘图函数（<em>high-level plotting functions</em>） 创建一个新的图形， 低级绘图函数（<em>low-level plotting functions</em>） 在现存的图形上添加元素。 绘图参数（<em>graphical parameters</em>） 控制绘图选项， 可以使用缺省值或者用函数par修改。  </li><li>绘图设备的切换选择：  </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dev.list() <span class="comment">#显示当前绘图设备列表</span></span><br><span class="line">dev.cur()  <span class="comment">#显示当前所在绘图设备</span></span><br><span class="line">dev.set()  <span class="comment">#切换绘图设备</span></span><br><span class="line">dev.off()  <span class="comment">#关闭某个绘图设备</span></span><br></pre></td></tr></table></figure><ol start="3"><li>图形设备面板的分割  <ul><li>函数<code>split.screen</code>分割当前的绘图设备；<code>erase.screen()</code>删除最后绘制的图形。  </li><li>函数<code>layout</code>把当前的图形窗口分割为多个部份， 图形将一次显示在各部分中。 它主要的自变量是一个元素都是整数值的矩阵， 元素指示子窗口（\sub-windows”） 的编号。如：<code>layout(matrix(1:4, 2, 2))</code>,把设备划分为4个相等的部分。<code>layout.show</code>查看创建的分割。  </li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROC曲线和AUC</title>
      <link href="2018/10/10/roc-auc/"/>
      <url>2018/10/10/roc-auc/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="ROC和AUC简介"><a href="#ROC和AUC简介" class="headerlink" title="ROC和AUC简介"></a>ROC和AUC简介</h2><p>ROC（Receiver Operating Characteristic）曲线和AUC常被用来评价一个二值分类器（binary classifier）的优劣，对两者的简单介绍见<a href="https://zh.wikipedia.org/wiki/ROC%E6%9B%B2%E7%BA%BF">wiki百科</a>这篇博文主要简单介绍ROC和AUC的特点，以及如何通过R语言绘制ROC曲线和计算AUC值。  </p><h3 id="ROC曲线意义"><a href="#ROC曲线意义" class="headerlink" title="ROC曲线意义"></a>ROC曲线意义</h3><p>在这里，我们只讨论二值分类的情况，即“非此即彼”。一般对于二分问题来说，预测分类的结果有四种情况：</p><ol><li><strong>真阳性（TP）</strong>：预测为正样本，真实也是正样本。</li><li><strong>伪阳性（FP）</strong>：预测为正样本，而真实是负样本。</li><li><strong>真阴性（TN）</strong>：预测为负样本，真实也是负样本。</li><li><strong>伪阴性（FN）</strong>：预测为负样本，而真实是正样本。<br>用列联表表示其结果，如下所示，1代表正样本，0代表负样本：  </li></ol><p><img src="/images/roc-auc/table.png"></p><p>在这里需要引入两个名词：<br><strong>真阳性率 (TPR, true positive rate)</strong> ：又称：命中率 (hit rate)、敏感度(sensitivity) TPR = TP / P = TP / (TP+FN)<br><strong>伪阳性率(FPR, false positive rate)</strong> ：又称：错误命中率，假警报率 (false alarm rate) FPR = FP / N = FP / (FP + TN)</p><p>给定一个<strong>二元分类</strong>模型和它的<strong>阈值</strong>，就能从所有样本的（阳性／阴性）真实值和预测值计算出一个 (X=FPR, Y=TPR) 座标点。如下图所示：  </p><p><img src="/images/roc-auc/Roccurves.png"></p><p>接下来，我们考虑ROC曲线图中的四个点和一条线。第一个点，(0,1)，即FPR=0, TPR=1，这意味着这是一个完美的分类器，它能够将所有的样本都正确分类。第二个点，(1,0)，即FPR=1，TPR=0，说明这个分类器完全无效能可言，将所有的样本都错误的分类。第三个点，(0,0)，即FPR=TPR=0，说明所有的样本全是负样本。类似的，第四个点（1,1），分类器实际上预测所有的样本都为正样本。经过以上的分析，我们可以发现ROC曲线越接近左上角，说明分类器的分类效能越好。</p><p>下面考虑ROC曲线图中的虚线y=x上的点。这条对角线上的点其实表示的是一个采用随机猜测策略的分类器的结果，例如(0.5,0.5)，表示该分类器随机对于一半的样本猜测其为正样本，另外一半的样本为负样本。  </p><h3 id="ROC曲线绘制原理"><a href="#ROC曲线绘制原理" class="headerlink" title="ROC曲线绘制原理"></a>ROC曲线绘制原理</h3><p>对于一个分类器来说，其特点是“<strong>概率输出</strong>”,即分类一个样本是根据这个样本有多大概率是正样本（或负样本）来确定的。因此当分类器模型的<strong>阈值</strong>变化时，样本的分类情况也会发生改变，每种阈值的设定会得出不同的FPR和TPR。将<strong>同一分类器模型每个阈值</strong>的 (FPR, TPR) 座标都画在ROC空间里，就成为特定模型的ROC曲线。  </p><p>假如我们已经得到了所有样本的概率输出（属于正样本的概率），现在的问题是如何改变“discrimination threashold”？我们根据每个测试样本属于正样本的概率值从大到小排序。下图是一个示例，图中共有20个测试样本，“Class”一栏表示每个测试样本真正的标签（p表示正样本，n表示负样本），“Score”表示每个测试样本属于正样本的概率  </p><p><img src="/images/roc-auc/score-ranking.png">  </p><p>我们从高到低，依次将“Score”值作为阈值threshold，当测试样本属于正样本的概率大于或等于这个threshold时，我们认为它为正样本，否则为负样本。举例来说，对于图中的第4个样本，其“Score”值为0.6，那么样本1，2，3，4都被认为是正样本，因为它们的“Score”值都大于等于0.6，而其他样本则都认为是负样本。每次选取一个不同的threshold，我们就可以得到一组FPR和TPR，即ROC曲线上的一点。这样一来，我们一共得到了20组FPR和TPR的值，将它们画在ROC曲线的结果如下图：  </p><p><img src="/images/roc-auc/roc-example.png"></p><p>当我们将threshold设置为1和0时，分别可以得到ROC曲线上的(0,0)和(1,1)两个点。将这些(FPR,TPR)对连接起来，就得到了ROC曲线。当threshold取值越多，ROC曲线越平滑。  </p><h3 id="AUC的意义"><a href="#AUC的意义" class="headerlink" title="AUC的意义"></a>AUC的意义</h3><p>AUC（Area Under Curve），又称为曲线下面积，其意义为随机抽取一个阳性样本和一个阴性样本，分类器正确判断阳性样本的值高于阴性样本的机率。<strong>AUC值越大，说明当前分类器分类的正确率越高，分类器模型也就越好。</strong>  </p><ul><li>AUC = 1，是完美分类器，采用这个预测模型时，存在至少一个阈值能得出完美预测。绝大多数预测的场合，不存在完美分类器。</li><li>0.5 &lt; AUC &lt; 1，优于随机猜测。这个分类器（模型）妥善设定阈值的话，能有预测价值。</li><li>AUC = 0.5，跟随机猜测一样（例：丢铜板），模型没有预测价值。</li><li>AUC &lt; 0.5，比随机猜测还差；但只要总是反预测而行，就优于随机猜测。  </li></ul><p>图形示例如下：  </p><p><img src="/images/roc-auc/Curvas.png"></p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="http://alexkong.net/2013/06/introduction-to-auc-and-roc/">ROC和AUC介绍以及如何计算AUC</a></li><li><a href="https://zh.wikipedia.org/wiki/ROC%E6%9B%B2%E7%BA%BF">ROC曲线- 维基百科，自由的百科全书</a>  </li></ul>]]></content>
      
      
      <categories>
          
          <category> statistics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ROC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同一电脑配置多个Github账户</title>
      <link href="2018/09/25/more-github/"/>
      <url>2018/09/25/more-github/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>最近在使用github时发现自己日常的代码和博客是放在同一个账户上的，作为一个强迫症患者的我，自然是要再申请一个github账号托管博客:)  </p><p>But！！！当我设置完毕后，发现并不能连接到远端进行克隆。。。简直是坑爹啊~有木有！经过一番研究终于找到解决办法，故记录如下：  </p><h2 id="SSH协议"><a href="#SSH协议" class="headerlink" title="SSH协议"></a>SSH协议</h2><p>Secure Shell（缩写为 SSH），是创建在应用层和传输层基础上的安全协议。目前主要用于远程登录会话和其他网络服务。连接github时，我们需要生成配对的SSH公钥和密钥来连接远程仓库。而一对公钥密钥只能识别一个账户。也就是说，当你设置连接两个远端github仓库时，你需要生成两对公钥密钥来进行身份识别。  </p><h2 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h2><p>以Github来举例说明（<strong>服务器的地址都是github.com，也可以是不同的地址</strong>），如何配置多用户，多地址提交项目。假设当前有两个账号：一个Github的账号是A，另一个Github的账号是B  </p><h3 id="1-配置多个Git账户"><a href="#1-配置多个Git账户" class="headerlink" title="1. 配置多个Git账户"></a>1. 配置多个Git账户</h3><p>这里分两种情况：  </p><blockquote><ol><li>一个账户已经进行了配置，添加另外一个账户</li><li>同时配置两个git账户</li></ol></blockquote><p>假如之前你已经有账户进行了git的全局设置，那么首先需要解除git全局<code>用户名/邮箱</code>的设置  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> <span class="string">&quot;user.name&quot;</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> <span class="string">&quot;user.email&quot;</span></span><br><span class="line">```   </span><br><span class="line">如果之前并未进行全局设置，则直接开始设置每个仓库独立的用户和邮箱  </span><br><span class="line">```shell</span><br><span class="line"><span class="comment">#设置第一个用户/邮箱</span></span><br><span class="line">git config user.email <span class="string">&quot;A@gmail.com&quot;</span></span><br><span class="line">git config user.name <span class="string">&quot;A&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置第二个用户/邮箱</span></span><br><span class="line">git config user.email <span class="string">&quot;B@163.com&quot;</span></span><br><span class="line">git config user.name <span class="string">&quot;B&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建密钥-公钥"><a href="#2-创建密钥-公钥" class="headerlink" title="2. 创建密钥/公钥"></a>2. 创建<code>密钥/公钥</code></h3><p>在进行单用户操作时我们只需要通过：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f -C <span class="string">&quot;yourmail@xxx.com&quot;</span></span><br></pre></td></tr></table></figure><p>命令直接产生相应的<code>密钥/公钥</code>，但是在多用户的情况下,直接产生两次<code>密钥/公钥</code>会将第一次产生的<code>密钥/公钥</code>覆盖掉。因此，进行多用户操作时，需要指定产生的密钥名称，避免覆盖。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建A账户的密钥、公钥</span></span><br><span class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa_A -C <span class="string">&quot;A@gmail.com&quot;</span></span><br><span class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa_B -C <span class="string">&quot;B@163.com&quot;</span></span><br><span class="line">```  </span><br><span class="line">此时会在用户的`.ssh`文件夹下产生`id_rsa_A`、`id_rsa_A.pub`和`id_rsa_B`、`id_rsa_B.pub`两对`密钥/公钥`。  </span><br><span class="line"><span class="comment">##### 3. 设置config文件  </span></span><br><span class="line">在.ssh文件夹下创建config文件,配置不同的仓库指向不同的密钥文件。</span><br><span class="line">```shell</span><br><span class="line"><span class="comment"># A账号</span></span><br><span class="line">Host A <span class="comment">#host别名</span></span><br><span class="line">HostName github.com <span class="comment">#服务器域名</span></span><br><span class="line">User git <span class="comment">#A账号用户名</span></span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"><span class="comment"># B账号</span></span><br><span class="line">Host B  <span class="comment">#host别名</span></span><br><span class="line">HostName github.com <span class="comment">#服务器域名</span></span><br><span class="line">User git <span class="comment">#B账号用户名</span></span><br><span class="line">IdentityFile ~/.ssh/id_rsa_x</span><br></pre></td></tr></table></figure><blockquote><p><strong>原理解析</strong><br>1.ssh 客户端是通过类似 <a href="mailto:git@github.com">git@github.com</a>:githubUserName/repoName.git ** 的地址来识别使用本地的哪个私钥的，地址中的 User 是@前面的git， Host 是@后面的github.com。<br>2.如果所有账号的 User 和 Host 都为 git 和 github.com，那么就只能使用一个私钥。所以要对User 和 Host 进行配置，让每个账号使用自己的 Host，即使用上面的别名来代替域名。<br>3.配置了别名之后，新的地址就是git@A:githubUserName/repName.git**（在添加远程仓库时使用）。这样 ssh 在连接时就可以区别不同的账号了。  </p></blockquote><h3 id="4-添加SSH公钥"><a href="#4-添加SSH公钥" class="headerlink" title="4. 添加SSH公钥"></a>4. 添加SSH公钥</h3><p>把相应的公钥添加到账户的SSH设置当中，这样git就可以识别不同的账户了。  </p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.jianshu.com/p/04e9a885c5c8">https://www.jianshu.com/p/04e9a885c5c8</a>   </p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>library和require的差别</title>
      <link href="2018/08/02/library-require/"/>
      <url>2018/08/02/library-require/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在R语言中，载入R包函数有两个：<code>library()</code> 和 <code>require()</code>，但是两者之间又存在很大的不同  </p><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><ol><li>在初始环境下载入一个R包，如果这个包不存在，执行<code>library()</code>会提示Error，并且停止运行；执行<code>require()</code>会提示Warning，继续执行运算   </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">Error <span class="keyword">in</span> <span class="keyword">library</span>(<span class="string">&quot;abc&quot;</span>) : there is no package called <span class="string">&#x27;abc&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span>(<span class="string">&quot;abc&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Loading required package: abc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning in library(package, lib.loc &#x3D; lib.loc, character.only &#x3D; TRUE, logical.return &#x3D; TRUE, :</span><br><span class="line">## there is no package called &#39;abc&#39;</span><br></pre></td></tr></table></figure><ol start="2"><li>在载入的包不存在时，<code>library()</code>只停止运算，只会显示错误提示，没有返回值；<code>require()</code>会返回一个逻辑值  </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test &lt;- <span class="keyword">library</span>(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">Error <span class="keyword">in</span> <span class="keyword">library</span>(<span class="string">&quot;abc&quot;</span>) : there is no package called <span class="string">&#x27;abc</span></span><br><span class="line"><span class="string">test #显示错误提示</span></span><br><span class="line"><span class="string">Error: object &#x27;</span>test<span class="string">&#x27; not found</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test &lt;- <span class="keyword">require</span>(<span class="string">&quot;abc&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Loading required package: abc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning in library(package, lib.loc &#x3D; lib.loc, character.only &#x3D; TRUE, logical.return &#x3D; TRUE, :</span><br><span class="line">## there is no package called &#39;abc&#39;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] FALSE</span><br></pre></td></tr></table></figure><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>在自定义函数中，可以利用<code>require()</code>函数来检测运行环境，确保函数可以正确运行  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">require</span>(<span class="string">&quot;MASS&quot;</span>))&#123;</span><br><span class="line">    print(<span class="string">&quot;MASS is loaded correctly&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    print(<span class="string">&quot;you need install MASS package&quot;</span>)</span><br><span class="line">    install.packages(<span class="string">&quot;MASS&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">require</span>(MASS))&#123;</span><br><span class="line">        print(<span class="string">&quot;MASS installed and loaded&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">stop</span>(<span class="string">&quot;could not install MASS&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合多张ggplot2图片</title>
      <link href="2018/05/23/combine-ggplot2/"/>
      <url>2018/05/23/combine-ggplot2/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>  <p>在同一页面上安排<strong>多张ggplot2</strong>图片时，普通的标准R函数<code>par()</code>和<code>layout</code>已经不能使用。  </p><p>目前基本的解决办法是使用名叫<code>ggExtra</code>的R包，它包含以下功能：  </p><ul><li><code>grid.arrange（）</code>和<code>arrangeGrob（）</code>可以在一个页面上排列多个ggplots  </li><li><code>marrangeGrob（）</code>可用于在多个页面上排列多个ggplots  </li></ul><p>但是，这些功能不会尝试对齐绘图面板; 相反，这些图只是简单地放置在网格中，因此轴不对齐。  </p><p>因此我们可以使用<code>ggpubr</code>包提供的<code>ggarrange（）</code>函数来实现多个ggplot图画的排布，并且提供统一的共同图例。  </p><h2 id="创建图片"><a href="#创建图片" class="headerlink" title="创建图片"></a>创建图片</h2><p>使用演示数据集 <em><strong>ToothGrowth</strong></em> 和 <em><strong>mtcars</strong></em>创建多个图形：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Box plot (bp)</span></span><br><span class="line">bxp &lt;- ggboxplot(ToothGrowth, x = <span class="string">&quot;dose&quot;</span>, y = <span class="string">&quot;len&quot;</span>,</span><br><span class="line">                 color = <span class="string">&quot;dose&quot;</span>, palette = <span class="string">&quot;jco&quot;</span>)</span><br><span class="line">bxp</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-2-1.png" alt="plot of chunk unnamed-chunk-2"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Dot plot (dp)</span></span><br><span class="line">dp &lt;- ggdotplot(ToothGrowth, x = <span class="string">&quot;dose&quot;</span>, y = <span class="string">&quot;len&quot;</span>,</span><br><span class="line">                 color = <span class="string">&quot;dose&quot;</span>, palette = <span class="string">&quot;jco&quot;</span>, binwidth = <span class="number">1</span>)</span><br><span class="line">dp</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-2-2.png" alt="plot of chunk unnamed-chunk-2"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data(<span class="string">&quot;mtcars&quot;</span>)</span><br><span class="line">mtcars$name &lt;- rownames(mtcars)</span><br><span class="line">mtcars$cyl &lt;- as.factor(mtcars$cyl)</span><br><span class="line">head(mtcars[, c(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;wt&quot;</span>, <span class="string">&quot;mpg&quot;</span>, <span class="string">&quot;cyl&quot;</span>)])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##                                name   wt  mpg cyl</span><br><span class="line">## Mazda RX4                 Mazda RX4 2.62 21.0   6</span><br><span class="line">## Mazda RX4 Wag         Mazda RX4 Wag 2.88 21.0   6</span><br><span class="line">## Datsun 710               Datsun 710 2.32 22.8   4</span><br><span class="line">## Hornet 4 Drive       Hornet 4 Drive 3.21 21.4   6</span><br><span class="line">## Hornet Sportabout Hornet Sportabout 3.44 18.7   8</span><br><span class="line">## Valiant                     Valiant 3.46 18.1   6</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Bar plot (bp)</span></span><br><span class="line">bp &lt;- ggbarplot(mtcars, x = <span class="string">&quot;name&quot;</span>, y = <span class="string">&quot;mpg&quot;</span>,</span><br><span class="line">          fill = <span class="string">&quot;cyl&quot;</span>,               <span class="comment"># change fill color by cyl</span></span><br><span class="line">          color = <span class="string">&quot;white&quot;</span>,            <span class="comment"># Set bar border colors to white</span></span><br><span class="line">          palette = <span class="string">&quot;jco&quot;</span>,            <span class="comment"># jco journal color palett. see ?ggpar</span></span><br><span class="line">          sort.val = <span class="string">&quot;asc&quot;</span>,           <span class="comment"># Sort the value in ascending order</span></span><br><span class="line">          sort.by.groups = <span class="literal">TRUE</span>,      <span class="comment"># Sort inside each group</span></span><br><span class="line">          x.text.angle = <span class="number">90</span>           <span class="comment"># Rotate vertically x axis texts</span></span><br><span class="line">          )</span><br><span class="line">bp + font(<span class="string">&quot;x.text&quot;</span>, size = <span class="number">8</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-4-1.png" alt="plot of chunk unnamed-chunk-4"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Scatter plots (sp)</span></span><br><span class="line">sp &lt;- ggscatter(mtcars, x = <span class="string">&quot;wt&quot;</span>, y = <span class="string">&quot;mpg&quot;</span>,</span><br><span class="line">                add = <span class="string">&quot;reg.line&quot;</span>,               <span class="comment"># Add regression line</span></span><br><span class="line">                conf.int = <span class="literal">TRUE</span>,                <span class="comment"># Add confidence interval</span></span><br><span class="line">                color = <span class="string">&quot;cyl&quot;</span>, palette = <span class="string">&quot;jco&quot;</span>, <span class="comment"># Color by groups &quot;cyl&quot;</span></span><br><span class="line">                shape = <span class="string">&quot;cyl&quot;</span>                   <span class="comment"># Change point shape by groups &quot;cyl&quot;</span></span><br><span class="line">                )+</span><br><span class="line">  stat_cor(aes(color = cyl), label.x = <span class="number">3</span>)       <span class="comment"># Add correlation coefficient</span></span><br><span class="line">sp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;geom_smooth()&#96; using formula &#39;y ~ x&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-4-2.png" alt="plot of chunk unnamed-chunk-4"></p><h2 id="组合多张图片在一个面板上"><a href="#组合多张图片在一个面板上" class="headerlink" title="组合多张图片在一个面板上"></a>组合多张图片在一个面板上</h2><p>使用<code>ggpubr</code>包的<code>ggarrange（）</code>进行以下操作：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ggarrange(bxp, dp, bp + rremove(<span class="string">&quot;x.text&quot;</span>), </span><br><span class="line">          labels = c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>),</span><br><span class="line">          ncol = <span class="number">2</span>, nrow = <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-5-1.png" alt="plot of chunk unnamed-chunk-5"></p><h2 id="给图片添加注释"><a href="#给图片添加注释" class="headerlink" title="给图片添加注释"></a>给图片添加注释</h2><p><code>ggpubr</code>包提供了函数<code>annotate_figure()</code>可以对面板中图片整体或任意图片添加一定量的注释展示效果如下图:  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">figure &lt;- ggarrange(sp, bp + font(<span class="string">&quot;x.text&quot;</span>, size = <span class="number">10</span>),</span><br><span class="line">                    ncol = <span class="number">1</span>, nrow = <span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;geom_smooth()&#96; using formula &#39;y ~ x&#39;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">annotate_figure(figure,</span><br><span class="line">                top = text_grob(<span class="string">&quot;Visualizing mpg&quot;</span>, color = <span class="string">&quot;red&quot;</span>, face = <span class="string">&quot;bold&quot;</span>, size = <span class="number">14</span>),</span><br><span class="line">                bottom = text_grob(<span class="string">&quot;Data source: \n mtcars data set&quot;</span>, color = <span class="string">&quot;blue&quot;</span>,</span><br><span class="line">                                   hjust = <span class="number">1</span>, x = <span class="number">1</span>, face = <span class="string">&quot;italic&quot;</span>, size = <span class="number">10</span>),</span><br><span class="line">                left = text_grob(<span class="string">&quot;Figure arranged using ggpubr&quot;</span>, color = <span class="string">&quot;green&quot;</span>, rot = <span class="number">90</span>),</span><br><span class="line">                right = <span class="string">&quot;I&#x27;m done, thanks :-)!&quot;</span>,</span><br><span class="line">                fig.lab = <span class="string">&quot;Figure 1&quot;</span>, fig.lab.face = <span class="string">&quot;bold&quot;</span></span><br><span class="line">                )</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-6-1.png" alt="plot of chunk unnamed-chunk-6"></p><h2 id="图片对齐"><a href="#图片对齐" class="headerlink" title="图片对齐"></a>图片对齐</h2><p>最经典的例子就是在绘制生存曲线时，把risk table放在生存曲线图的下边。此时，我们需要调节表和图的大小和相对位置，使其分布更为合理  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fit survival curves</span></span><br><span class="line"><span class="keyword">library</span>(survival)</span><br><span class="line">fit &lt;- survfit( Surv(time, status) ~ adhere, data = colon )</span><br><span class="line"><span class="comment"># Plot survival curves</span></span><br><span class="line"><span class="keyword">library</span>(survminer)</span><br><span class="line">ggsurv &lt;- ggsurvplot(fit, data = colon, </span><br><span class="line">                     palette = <span class="string">&quot;jco&quot;</span>,                              <span class="comment"># jco palette</span></span><br><span class="line">                     pval = <span class="literal">TRUE</span>, pval.coord = c(<span class="number">500</span>, <span class="number">0.4</span>),        <span class="comment"># Add p-value</span></span><br><span class="line">                     risk.table = <span class="literal">TRUE</span>                            <span class="comment"># Add risk table</span></span><br><span class="line">                     )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Warning: Vectorized input to &#96;element_text()&#96; is not officially supported.</span><br><span class="line">## Results may be unexpected or may change in future versions of ggplot2.</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ggarrange(ggsurv$plot, ggsurv$table, heights = c(<span class="number">2</span>, <span class="number">0.7</span>),</span><br><span class="line">          ncol = <span class="number">1</span>, nrow = <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-7-1.png" alt="plot of chunk unnamed-chunk-7"></p><p>此时，我们可以看出图和表并不是完全垂直对齐的，要对齐他们需要调用<code>align</code>参数  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ggarrange(ggsurv$plot, ggsurv$table, heights = c(<span class="number">2</span>, <span class="number">0.7</span>),</span><br><span class="line">          ncol = <span class="number">1</span>, nrow = <span class="number">2</span>, align = <span class="string">&quot;v&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-8-1.png" alt="plot of chunk unnamed-chunk-8"></p><h2 id="改变图形的行列布局排布"><a href="#改变图形的行列布局排布" class="headerlink" title="改变图形的行列布局排布"></a>改变图形的行列布局排布</h2><h3 id="使用ggpubr包"><a href="#使用ggpubr包" class="headerlink" title="使用ggpubr包"></a>使用<code>ggpubr</code>包</h3><p>我们将使用嵌套的<code>ggarrange（）</code>函数来更改图的列/行跨度。  </p><p>例如，我们使用下边的代码可以实现这样的布局  </p><ul><li>散点图（sp）将位于第一行并跨越两列  </li><li>箱形图（bxp）和点图（dp）将首先排列，并且将在第二行中生活两列不同的列  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ggarrange(sp,                                                 <span class="comment"># First row with scatter plot</span></span><br><span class="line">          ggarrange(bxp, dp, ncol = <span class="number">2</span>, labels = c(<span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>)), <span class="comment"># Second row with box and dot plots</span></span><br><span class="line">          nrow = <span class="number">2</span>, </span><br><span class="line">          labels = <span class="string">&quot;A&quot;</span>                                        <span class="comment"># Labels of the scatter plot</span></span><br><span class="line">          )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;geom_smooth()&#96; using formula &#39;y ~ x&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-9-1.png" alt="plot of chunk unnamed-chunk-9"></p><h3 id="使用cowplot包"><a href="#使用cowplot包" class="headerlink" title="使用cowplot包"></a>使用<code>cowplot</code>包</h3><p>函数<code>ggdraw（）+ draw_plot（）+ draw_plot_label（）</code>的组合可用于将图形放置在特定大小的特定位置。  </p><p><code>ggdraw（）</code>可以初始化一个空的绘图画布，默认情况是这样的：  </p><p><img src="%22../../img/canva.png%22" alt="canva">  </p><p><code>draw_plot（）</code>可以将绘图放置在绘图画布上的某处：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw_plot(plot, x = <span class="number">0</span>, y = <span class="number">0</span>, width = <span class="number">1</span>, height = <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><code>draw_plot_label()</code> 可以向图的左上角添加绘图标签。它可以处理带有关联坐标的标签向量。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draw_plot_label(label, x = <span class="number">0</span>, y = <span class="number">1</span>, size = <span class="number">16</span>, <span class="keyword">...</span>)</span><br></pre></td></tr></table></figure><p>如果需要组合多张图形，可以通过类似于下边的代码来实现：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">&quot;cowplot&quot;</span>)</span><br><span class="line">ggdraw() +</span><br><span class="line">  draw_plot(bxp, x = <span class="number">0</span>, y = <span class="number">.5</span>, width = <span class="number">.5</span>, height = <span class="number">.5</span>) +</span><br><span class="line">  draw_plot(dp, x = <span class="number">.5</span>, y = <span class="number">.5</span>, width = <span class="number">.5</span>, height = <span class="number">.5</span>) +</span><br><span class="line">  draw_plot(bp, x = <span class="number">0</span>, y = <span class="number">0</span>, width = <span class="number">1</span>, height = <span class="number">0.5</span>) +</span><br><span class="line">  draw_plot_label(label = c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>), size = <span class="number">15</span>,</span><br><span class="line">                  x = c(<span class="number">0</span>, <span class="number">0.5</span>, <span class="number">0</span>), y = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0.5</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-12-1.png" alt="plot of chunk unnamed-chunk-12"></p><h3 id="使用gridExtra包"><a href="#使用gridExtra包" class="headerlink" title="使用gridExtra包"></a>使用<code>gridExtra</code>包</h3><p><code>gridExtra</code>包的使用方法和<code>ggpubr</code>包类似  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">&quot;gridExtra&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## </span><br><span class="line">## Attaching package: &#39;gridExtra&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## The following object is masked from &#39;package:dplyr&#39;:</span><br><span class="line">## </span><br><span class="line">##     combine</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grid.arrange(sp,                             <span class="comment"># First row with one plot spaning over 2 columns</span></span><br><span class="line">             arrangeGrob(bxp, dp, ncol = <span class="number">2</span>), <span class="comment"># Second row with 2 plots in 2 different columns</span></span><br><span class="line">             nrow = <span class="number">2</span>)       </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;geom_smooth()&#96; using formula &#39;y ~ x&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-13-1.png" alt="plot of chunk unnamed-chunk-13"></p><p>我们同样可以使用<code>gird.arrange()</code>函数中的<code>lay_matrix</code>参数来设置，使用方法如下：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grid.arrange(bp,                                    <span class="comment"># bar plot spaning two columns</span></span><br><span class="line">             bxp, sp,                               <span class="comment"># box plot and scatter plot</span></span><br><span class="line">             ncol = <span class="number">2</span>, nrow = <span class="number">2</span>, </span><br><span class="line">             layout_matrix = rbind(c(<span class="number">1</span>,<span class="number">1</span>), c(<span class="number">2</span>,<span class="number">3</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;geom_smooth()&#96; using formula &#39;y ~ x&#39;</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-14-1.png" alt="plot of chunk unnamed-chunk-14"></p><blockquote><p>在上面的R代码中，layout_matrix是一个2×2矩阵（2列和2行）。 第一行全是1，这是第一幅图占的地方，横跨两列; 第二行包含分别占据一列的图2和图3  </p></blockquote><p>此时，如果需要对图形进行注释，<code>ggpubr</code>包已经不足以实现，需要我们使用<code>cowplot</code>包来进行进一步的注释  </p><p>需要注意的是<code>grid.arrange（）</code>/ <code>arrangeGrob（）</code>输出的是一个<code>gtable</code>，首先需要使用<code>ggpubr</code>包中的<code>as_ggplot（）</code>函数将其转换为<code>ggplot</code>。 接下来，就可以使用函数<code>draw_plot_label（）</code>对其进行注释。  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">&quot;gridExtra&quot;</span>)</span><br><span class="line"><span class="keyword">library</span>(<span class="string">&quot;cowplot&quot;</span>)</span><br><span class="line"><span class="comment"># Arrange plots using arrangeGrob</span></span><br><span class="line"><span class="comment"># returns a gtable (gt)</span></span><br><span class="line">gt &lt;- arrangeGrob(bp,                               <span class="comment"># bar plot spaning two columns</span></span><br><span class="line">             bxp, sp,                               <span class="comment"># box plot and scatter plot</span></span><br><span class="line">             ncol = <span class="number">2</span>, nrow = <span class="number">2</span>, </span><br><span class="line">             layout_matrix = rbind(c(<span class="number">1</span>,<span class="number">1</span>), c(<span class="number">2</span>,<span class="number">3</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;geom_smooth()&#96; using formula &#39;y ~ x&#39;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add labels to the arranged plots</span></span><br><span class="line">p &lt;- as_ggplot(gt) +                                <span class="comment"># transform to a ggplot</span></span><br><span class="line">  draw_plot_label(label = c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>), size = <span class="number">15</span>,</span><br><span class="line">                  x = c(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>), y = c(<span class="number">1</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)) <span class="comment"># Add labels</span></span><br><span class="line">p</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-15-1.png" alt="plot of chunk unnamed-chunk-15"></p><blockquote><p>在上面的R代码中，我们使用了<code>arrangeGrob（）</code>而不<code>是grid.arrange（）</code>。<br>请注意，这两个函数的主要区别在于，<code>grid.arrange（）</code>会自动绘制排列好的图<br>由于我们要在绘制之前注释已排列的图，因此在这种情况下，函数<code>arrangeGrob（）</code>是首选。  </p></blockquote><h2 id="使用grid包"><a href="#使用grid包" class="headerlink" title="使用grid包"></a>使用<code>grid</code>包</h2><p>通过函数<code>grid.layout（）</code>，可以使用<code>gridR</code>包创建复杂的图像布局。 它还提供了函数<code>viewport（）</code>来定义布局上图像的区域或位置。 函数<code>print（）</code>用于将图放置在指定区域中。  </p><p>总结起来共以下5个顺序步骤：  </p><ol><li>创建绘图：p1，p2，p3，…  </li><li>使用函数<code>grid.newpage（）</code>创建画板  </li><li>创建画板布局2X2 - 列数= 2; 行数= 2  </li><li>定义图像输出位置：画板中图像显示的区域  </li><li>在画板中输出显示图片  </li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(grid)</span><br><span class="line"><span class="comment"># Move to a new page</span></span><br><span class="line">grid.newpage()</span><br><span class="line"><span class="comment"># Create layout : nrow = 3, ncol = 2</span></span><br><span class="line">pushViewport(viewport(layout = grid.layout(nrow = <span class="number">3</span>, ncol = <span class="number">2</span>)))</span><br><span class="line"><span class="comment"># A helper function to define a region on the layout</span></span><br><span class="line">define_region &lt;- <span class="keyword">function</span>(row, col)&#123;</span><br><span class="line">  viewport(layout.pos.row = row, layout.pos.col = col)</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment"># Arrange the plots</span></span><br><span class="line">print(sp, vp = define_region(row = <span class="number">1</span>, col = <span class="number">1</span>:<span class="number">2</span>))   <span class="comment"># Span over two columns</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## &#96;geom_smooth()&#96; using formula &#39;y ~ x&#39;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(bxp, vp = define_region(row = <span class="number">2</span>, col = <span class="number">1</span>))</span><br><span class="line">print(dp, vp = define_region(row = <span class="number">2</span>, col = <span class="number">2</span>))</span><br><span class="line">print(bp + rremove(<span class="string">&quot;x.text&quot;</span>), vp = define_region(row = <span class="number">3</span>, col = <span class="number">1</span>:<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-16-1.png" alt="plot of chunk unnamed-chunk-16"></p><h2 id="通用图例的设定"><a href="#通用图例的设定" class="headerlink" title="通用图例的设定"></a>通用图例的设定</h2><p>在我们绘制的图片当中，有的可能具有相同的图例，函数<code>ggarrange（）</code>可以与以下参数一起使用,使两幅图使用相同的图例  </p><ul><li><code>common.legend = TRUE</code>：使用公共图例  </li><li><code>legend</code>:指定图例位置。 允许的值包括c（“top”，“bottom”，“left”，“right”）  </li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ggarrange(bxp, dp, labels = c(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>),</span><br><span class="line">          common.legend = <span class="literal">TRUE</span>, legend = <span class="string">&quot;bottom&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-17-1.png" alt="plot of chunk unnamed-chunk-17"></p><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>给散点图添加边界密度图  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Scatter plot colored by groups (&quot;Species&quot;)</span></span><br><span class="line">sp &lt;- ggscatter(iris, x = <span class="string">&quot;Sepal.Length&quot;</span>, y = <span class="string">&quot;Sepal.Width&quot;</span>,</span><br><span class="line">                color = <span class="string">&quot;Species&quot;</span>, palette = <span class="string">&quot;jco&quot;</span>,</span><br><span class="line">                size = <span class="number">3</span>, alpha = <span class="number">0.6</span>)+</span><br><span class="line">  border()                                         </span><br><span class="line"><span class="comment"># Marginal density plot of x (top panel) and y (right panel)</span></span><br><span class="line">xplot &lt;- ggdensity(iris, <span class="string">&quot;Sepal.Length&quot;</span>, fill = <span class="string">&quot;Species&quot;</span>,</span><br><span class="line">                   palette = <span class="string">&quot;jco&quot;</span>)</span><br><span class="line">yplot &lt;- ggdensity(iris, <span class="string">&quot;Sepal.Width&quot;</span>, fill = <span class="string">&quot;Species&quot;</span>, </span><br><span class="line">                   palette = <span class="string">&quot;jco&quot;</span>)+</span><br><span class="line">  rotate()</span><br><span class="line"><span class="comment"># Cleaning the plots</span></span><br><span class="line">yplot &lt;- yplot + clean_theme() </span><br><span class="line">xplot &lt;- xplot + clean_theme()</span><br><span class="line"><span class="comment"># Arranging the plot</span></span><br><span class="line">ggarrange(xplot, <span class="literal">NULL</span>, sp, yplot, </span><br><span class="line">          ncol = <span class="number">2</span>, nrow = <span class="number">2</span>,  align = <span class="string">&quot;hv&quot;</span>, </span><br><span class="line">          widths = c(<span class="number">2</span>, <span class="number">1</span>), heights = c(<span class="number">1</span>, <span class="number">2</span>),</span><br><span class="line">          common.legend = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/combine-ggplot2/unnamed-chunk-18-1.png" alt="plot of chunk unnamed-chunk-18"></p><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><p><a href="http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/81-ggplot2-easy-way-to-mix-multiple-graphs-on-the-same-page/">ggplot2 - Easy Way to Mix Multiple Graphs on The Same Page</a>  </p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ggplot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git与github的使用简介</title>
      <link href="2018/05/23/git-github/"/>
      <url>2018/05/23/git-github/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>   <h2 id="Git的基本使用方法"><a href="#Git的基本使用方法" class="headerlink" title="Git的基本使用方法"></a>Git的基本使用方法</h2><h2 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h2><p>Git是一个功能强大的分布是版本控制系统，由linux系统的创始人Linus创建，用于优化管理linux源码。Git具有强大的分支管理能力，对于代码集成管理具有超越其他集中式版本控制系统的优势。  </p><h2 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h2><p>在windows上安装Git，只需要从Git官网下载<a href="https://git-scm.com/">安装程序</a>，按照默认选项安装即可。  </p><p>最终，安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！  </p><p>安装完成后需要进行一步设置，在Git Bash中输入命令行  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>因为Git是分布式版本控制系统，所以，每个电脑必须有自己的ID：你的名字和Email地址。  </p><p>注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。  </p><h3 id="Git的基本原理"><a href="#Git的基本原理" class="headerlink" title="Git的基本原理"></a>Git的基本原理</h3><p>在Git中,主要有两部分组成：工作区和版本库，而版本库又分为暂存区和分支。  </p><p>当你创建编辑一个文件后，首先需要将文件从工作区添加到版本库的暂存区，然后再从暂存区提交的Git的分支系统上。  </p><blockquote><p>个人认为，从工作区到暂存区的过程相当于将文件的所有更改日志依次保存在暂存区，而从暂存区提交到Git分支的过程则是一次性提交所有的更改  </p></blockquote><h3 id="本地仓库的使用"><a href="#本地仓库的使用" class="headerlink" title="本地仓库的使用"></a>本地仓库的使用</h3><blockquote><p>版本库又名仓库，英文名repository，可以理解成一个文件夹,这个文件夹下的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。  </p></blockquote><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p>找合适的地方，创建一个空目录，创建并进入，一般不要用中文的目录名，容易出现问题.  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">makdir learngit</span><br><span class="line"><span class="built_in">cd</span> learngit</span><br></pre></td></tr></table></figure><h4 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h4><p><code>git init</code> 命令将这个目录变成可以管理的版本仓库（git repository）  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> /home/deepin/learngit/.git/</span><br></pre></td></tr></table></figure><p>此时你已经创建了一个空的版本库，可以发现当前目录下多了一个.git目录，这个目录就是git用来跟踪管理版本仓库的，不要去手动修改。  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deepin@deepin-PC:~/learngit$ ls -a</span><br><span class="line">.  ..  .git</span><br></pre></td></tr></table></figure><h4 id="添加文件到仓库"><a href="#添加文件到仓库" class="headerlink" title="添加文件到仓库"></a>添加文件到仓库</h4><p>把文件添加到版本库，如果没有任何提示信息则为成功添加  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add README.md</span><br></pre></td></tr></table></figure><p>把文件提交到版本库  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;this is a README.md file&quot;</span></span><br></pre></td></tr></table></figure><p>双引号中输入的是文件描述信息，是对此次文件提交的说明  </p><p>同样，你也可以一次提交多个文件  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add file1.txt</span><br><span class="line">git add file2.txt</span><br><span class="line">git add file3.txt</span><br><span class="line">git commit -m <span class="string">&quot;add 3 files.&quot;</span></span><br></pre></td></tr></table></figure><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><p>当你已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，使两个仓库能够远程同步，以下操作可以帮你实现  </p><ol><li>首先需要在远端github账户中创建自己的仓库  </li><li>在本地使用git命令添加远程仓库  </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;adress&gt; <span class="comment">#最后是远程仓库地址</span></span><br></pre></td></tr></table></figure><p>添加后，远程库的名字就是<code>origin</code>，这是Git默认的叫法，也可以改成别的，但是<code>origin</code>这个名字一看就知道是远程库  </p><ol start="3"><li>然后就可以向远端仓库<code>push</code>文件  </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>这条命令实际上是把本地<code>master</code>分支推送到远程仓库上，使用<code>-u</code>参数Git不但会把本地的<code>master</code>分支内容推送的远程新的<code>master</code>分支，还会把本地的<code>maste</code>r分支和远程的<code>master</code>分支关联起来，在以后的推送或者拉取时就可以简化命令。  </p><h3 id="Git的基本命令"><a href="#Git的基本命令" class="headerlink" title="Git的基本命令"></a>Git的基本命令</h3><h4 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h4><ul><li>使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；  </li><li>使用命令<code>git commit -m &lt;message&gt;</code> 提交文件到仓库，添加提交注释信息  </li></ul><h4 id="状态查看"><a href="#状态查看" class="headerlink" title="状态查看"></a>状态查看</h4><p><code>git status</code>查看repository的状态，<code>git diff</code>查看修改了哪些内容  </p><h4 id="文件修改"><a href="#文件修改" class="headerlink" title="文件修改"></a>文件修改</h4><ul><li><code>git status</code>可以查看当前版本库中文件的提交状态  </li><li><code>git rm</code>可以删除某一文件  </li></ul><h4 id="版本退回"><a href="#版本退回" class="headerlink" title="版本退回"></a>版本退回</h4><ul><li><code>git reset</code>命令可以使文件退回之前的版本或者从之前的版本回到修改后的版本  </li></ul><blockquote><p>在Git中，用<code>HEAD</code>表示当前版本，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个^比较容易数不过来，所以写成<code>HEAD~100</code>。   </p></blockquote><ul><li><p><code>git log</code>命令可以查看提交历史，以便确定要回退到哪个版本。  </p></li><li><p><code>git reflog</code>可以查看命令历史，以便确定要回到未来的哪个版本。  </p><blockquote><p>回退到以前的版本A之后，用<code>git log</code>命令就找不到A之后的版本了，如果想回到之后的版本，需要<code>git reset --hard commitID</code>，但是如果不记得<code>commitID</code>,可以用<code>git reflog</code>，它记录了每一个命令  </p></blockquote></li></ul><h3 id="常用的git命令"><a href="#常用的git命令" class="headerlink" title="常用的git命令"></a>常用的git命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment">#使当前目录变成可以管理的版本仓库（git repository)</span></span><br><span class="line">git add filename <span class="comment">#将文件添加到版本仓库</span></span><br><span class="line">git commit -m <span class="string">&quot;description&quot;</span> <span class="comment">#把文件提交到仓库</span></span><br><span class="line">git status <span class="comment">#查看repository的状态</span></span><br><span class="line">git diff <span class="comment">#查看修改了哪些内容</span></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">#查看提交日志</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline <span class="comment">#简洁地显示提交日志</span></span><br><span class="line">git reset --hard HEAD~&lt;3&gt; <span class="comment">#回退到某个版本，比如这里回退到第前3个版本</span></span><br><span class="line">git reset --hard &lt;commit ID&gt; <span class="comment">#回退到特定ID的版本</span></span><br><span class="line">git reflog <span class="comment">#记录了每个命令，可以用来查看每个操作的编号</span></span><br><span class="line">git checkout -b &lt;branch&gt; <span class="comment">#创建并切换分支</span></span><br><span class="line">git branch <span class="comment">#查看当前分支</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cox模型的R实现</title>
      <link href="2018/05/08/Cox-R/"/>
      <url>2018/05/08/Cox-R/</url>
      
        <content type="html"><![CDATA[<h3 id="载入需要的R包"><a href="#载入需要的R包" class="headerlink" title="载入需要的R包"></a>载入需要的R包</h3><ul><li><p><strong>survival</strong>用于计算生存分析  </p></li><li><p><strong>survminer</strong>用于可视化生存分析结果  </p></li></ul><pre><code class="R">library(&quot;survival&quot;)library(&quot;survminer&quot;)</code></pre><h3 id="计算COX-model-coxph"><a href="#计算COX-model-coxph" class="headerlink" title="计算COX model : coxph()"></a>计算COX model : coxph()</h3><p><code>coxph</code> 可以用于构建计算 Cox proportional hazards regression model，常见用法如下：    </p><pre><code class="R">coxph(formula, data, method)</code></pre><blockquote><p>formula : 是通过    <code>Surv</code>构建的生存对象 ，如：<em>Surv(time, event)</em>  </p><p> data：包含变量的data.frame  </p><p>method：计算各项指标所用的检验方法   </p></blockquote><h3 id="Univariate-Cox-regression"><a href="#Univariate-Cox-regression" class="headerlink" title="Univariate Cox regression"></a>Univariate Cox regression</h3><p>以<code>survival</code>包提供的<code>lung</code>数据为例，进行单变量的cox回归分析   </p><pre><code class="R">res.cox &lt;- coxph(Surv(time, status) ~ sex, data = lung)res.cox</code></pre><pre><code class="R">Call:coxph(formula = Surv(time, status) ~ sex, data = lung)      coef exp(coef) se(coef)     z      psex -0.531     0.588    0.167 -3.18 0.0015Likelihood ratio test=10.6  on 1 df, p=0.00111n= 228, number of events= 165 </code></pre><p>使用<code>summary</code>函数显示更加详细的结果：    </p><pre><code class="R">summary(res.cox)</code></pre><pre><code class="R">Call:coxph(formula = Surv(time, status) ~ sex, data = lung)  n= 228, number of events= 165        coef exp(coef) se(coef)      z Pr(&gt;|z|)   sex -0.5310    0.5880   0.1672 -3.176  0.00149 **  ---Signif. codes:  0 &#39;*&#39; 0.001 &#39;&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1    exp(coef) exp(-coef) lower .95 upper .95sex     0.588      1.701    0.4237     0.816Concordance= 0.579  (se = 0.022 )Rsquare= 0.046   (max possible= 0.999 )Likelihood ratio test= 10.63  on 1 df,   p=0.001111Wald test            = 10.09  on 1 df,   p=0.001491Score (logrank) test = 10.33  on 1 df,   p=0.001312</code></pre><p>结果的各项指标解释如下：  </p><ol><li><strong><em>Statistical significance</em></strong>. z值给出了Wald统计值。它对应于每个回归系数与其标准误差的比率（z = coef / se（coef））。 wald统计量评估给定变量的系数（β）是否在统计学上显著，由上可知，变量性别具有高度统计上显著的系数。  </li><li><strong><em>The regression coefficients</em></strong>. Cox模型结果中要注意的第二个特征是回归系数（coef）的符号。如果回归系数为正值，说明死亡风险高，预后差；为负值，则风险低，预后好。 R给出的是第二组相对于第一组的风险比（HR），即女性对男性。在这些数据中，性别的β系数= -0.53表明女性的死亡风险（低存活率）低于男性。 </li><li><strong><em>Hazard ratios</em></strong>. 指数系数（exp（coef）= exp（-0.53）= 0.59）也称为风险比，给出协变量的效应大小。 例如，女性（性别= 2）的风险降低了0.59倍，即41％。 女性与预后良好相关。  </li><li><strong><em>Confidence intervals of the hazard ratios</em></strong>. 给出了风险比（exp（coef））的95％置信区间的上限和下限。  </li><li><strong><em>Global statistical significance of the model</em></strong>.  三个检验模型的P值：The likelihood-ratio test, Wald test, and score logrank statistics.这三种方法是类似的，如果样本量足够大，则三个方法会得到相同的结果，当样本量较小时，The likelihood-ratio test能得到较好的结果。   </li></ol><h3 id="Multivariate-Cox-regression-analysis"><a href="#Multivariate-Cox-regression-analysis" class="headerlink" title="Multivariate Cox regression analysis"></a>Multivariate Cox regression analysis</h3><p>当我们纳入多个变量时，我们可以这样操作：   </p><pre><code class="R">res.cox &lt;- coxph(Surv(time, status) ~ age + sex + ph.ecog, data =  lung)summary(res.cox)</code></pre><pre><code class="R">Call:coxph(formula = Surv(time, status) ~ age + sex + ph.ecog, data = lung)  n= 227, number of events= 164    (1 observation deleted due to missingness)             coef exp(coef)  se(coef)      z Pr(&gt;|z|)    age      0.011067  1.011128  0.009267  1.194 0.232416    sex     -0.552612  0.575445  0.167739 -3.294 0.000986 ***ph.ecog  0.463728  1.589991  0.113577  4.083 4.45e-05 ***---Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1        exp(coef) exp(-coef) lower .95 upper .95age        1.0111     0.9890    0.9929    1.0297sex        0.5754     1.7378    0.4142    0.7994ph.ecog    1.5900     0.6289    1.2727    1.9864Concordance= 0.637  (se = 0.026 )Rsquare= 0.126   (max possible= 0.999 )Likelihood ratio test= 30.5  on 3 df,   p=1.083e-06Wald test            = 29.93  on 3 df,   p=1.428e-06Score (logrank) test = 30.5  on 3 df,   p=1.083e-06</code></pre><p>由上可知：在三种检验方法中，p值都是显著的。这表明了该模型的重要性。  </p><p>在多变量Cox分析中，协变量<code>sex</code>和<code>ph.ecog</code>仍然显着（p &lt;0.05）。然而，协变量<code>age</code>并不显着（p = 0.23）。  </p><blockquote><p><code>sex</code>的p值为0.000986，危险比HR = exp（coef）= 0.58，表明患者性别与死亡风险降低之间有很强的关系。协变量的风险比可以解释为对风险的倍增效应。例如，将其他协变量保持不变，即女性（<code>sex</code>= 2）可将风险降低0.58倍，即降低42％。我们的结论是，女性与良好的预后相关。  </p><p>类似地，<code>ph.ecog</code>的p值为4.45e-05，危险比HR = 1.59，表明<code>ph.ecog</code>值与死亡风险增加之间的强关系。保持其他协变量不变，<code>ph.ecog</code>的较高值与生存率较差相关。  </p><p>相比之下，<code>age</code>的p = 0.23。风险比HR = exp（coef）= 1.01，95％置信区间为0.99至1.03。由于HR的置信区间包括1，因此这些结果表明年龄在调整<code>ph.ecog</code>和<code>sex</code>后对HR差异的贡献较小，并且仅趋向于显着性。例如，将其他协变量保持不变，额外的一年会导致每日死亡风险的因数为exp（beta）= 1.01或1％，这不是一个重大贡献。  </p></blockquote><h3 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h3><p>Cox Proportional Hazards Model<a href="http://www.sthda.com/english/wiki/cox-proportional-hazards-model">http://www.sthda.com/english/wiki/cox-proportional-hazards-model</a></p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> Cox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cox回归分析</title>
      <link href="2018/04/23/cox-regression/"/>
      <url>2018/04/23/cox-regression/</url>
      
        <content type="html"><![CDATA[<p>Cox回归分析是在生存分析中最常用的影响因素分析，回归模型的前提假设只有一个：分析的因素必须满足<strong>比例风险假设</strong>，即协变量不随时间的变化而变化。  </p><h2 id="Cox比例风险模型"><a href="#Cox比例风险模型" class="headerlink" title="Cox比例风险模型"></a>Cox比例风险模型</h2><p>Cox回归模型建模的主要对象是危险率（Hazard Rate），记作$h(t)$，它的基本形式：  </p><p><img src="/images/cox-regression/pic1.png">  </p><p>它表示已生存到时间$t$的观察对象在t时刻的瞬时发生事件的概率，值为非负数。当$Δt=1$时，此时风险函数表示的就是时刻t存活的个体在此后一个单位死亡概率。  </p><p>Cox回归的假设是$h$满足这样的分布：  </p><p><img src="/images/cox-regression/pic2.png">   </p><p>其中$h0(t)$我们不要去管它,，表示的是基线风险，即协变量为0时的风险率。对于两个对象，它们危险率的比值（Hazard Ratio）是和$h0(t)$无关的。    </p><p><img src="/images/cox-regression/pic3.png">  </p><p><strong>对于每一个因素，如果回归系数的检验检验p值小于给定阈值，那么它的回归系数如果为正，该因素为风险因素，否则为保护因素（不利因素）。当确定该因素确实影响生存之后，影响力的大小可以用HR（hazard ratio）来表示。HR表示该影响因素增加一个单位风险率相对于原来增加多少倍。</strong>  </p><p>总结起来就是：  </p><ul><li>P&lt;0.05，β&gt;0，HR&gt;1(95%CI &gt;1)，说明变量X增加时，危险率增加，即X是危险因素；  </li><li>P&lt;0.05,β&lt;0，HR&lt;1(95%CI &lt;1)，说明变量X增加时，危险率下降，即X是保护因素；  </li><li>P=0.05,β较大可能=0，HR较大可能=1，说明变量X增加时，危险率不变，即X是危险无关因素。  </li></ul><h2 id="比例风险的假设的检验"><a href="#比例风险的假设的检验" class="headerlink" title="比例风险的假设的检验"></a>比例风险的假设的检验</h2><p>该假设主要用于评估<strong>协变量是否可以用于cox风险回归模型。但是，一般都不需要进行评估。</strong>  </p><p>判断一个变量是否满足比例风险模型假设有以下三种方式：  </p><ul><li>如果协变量为类协变量（即category var），那么每组别的K-M生存曲线无交叉，则满足比例风险假设；  </li><li>以生存时间t为横轴，对数对数生存率ln[-ln(p)]为纵轴，绘制分类变量的每一组别的生存曲线，如果各组别对应的曲线直观上平行，则满足风险比例条件。  </li><li>对于连续型协变量，可将每个协变量与对数生存时间的交互项X*ln(t)放入回归模型中，如果该将互相项没有统计学意义，则满足风险比例假设，如：  </li></ul><p><img src="/images/cox-regression/pic4.png">   </p><p><strong>当分析按比例风险的假定条件不成立是，可采用两种方法来解决</strong>：  </p><ul><li>将这种不满足假定的协变量作为分层变量，然后再用其余变量进行多元Cox回归模型分析。（分层分析）  </li><li>使用其他的参数模型。  </li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>年龄，作为连续变量，一般情况是默认服从比例风险假设的，可以直接进行回归分析。  </li><li>单因素分析一方面可初步筛选出可能与预后有关的因素；另一方面去除那些根本不可能相关的因素，以减少建立多元回归模型时的“压力”。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> Survival </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>survminer包绘制生存曲线</title>
      <link href="2018/04/23/survminer/"/>
      <url>2018/04/23/survminer/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>   <p><code>survminer</code>包是一个绘制生存曲线的R包，它的主要函数是<code>ggsurvplot()</code>函数，它可以绘制由<code>survival</code>包产生的<code>survfit</code>生存对象。  </p><p>一般用法如下：  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ggsurvplot(fit, data = <span class="literal">NULL</span>, fun = <span class="literal">NULL</span>, color = <span class="literal">NULL</span>, palette = <span class="literal">NULL</span>,</span><br><span class="line">  linetype = <span class="number">1</span>, conf.int = <span class="literal">FALSE</span>, pval = <span class="literal">FALSE</span>, pval.method = <span class="literal">FALSE</span>,</span><br><span class="line">  test.for.trend = <span class="literal">FALSE</span>, surv.median.line = <span class="string">&quot;none&quot;</span>, risk.table = <span class="literal">FALSE</span>,</span><br><span class="line">  cumevents = <span class="literal">FALSE</span>, cumcensor = <span class="literal">FALSE</span>, tables.height = <span class="number">0.25</span>,</span><br><span class="line">  group.by = <span class="literal">NULL</span>, facet.by = <span class="literal">NULL</span>, add.all = <span class="literal">FALSE</span>, combine = <span class="literal">FALSE</span>,</span><br><span class="line">  ggtheme = theme_survminer(), tables.theme = ggtheme, <span class="keyword">...</span>)</span><br></pre></td></tr></table></figure><h3 id="主要参数"><a href="#主要参数" class="headerlink" title="主要参数"></a>主要参数</h3><p><code>fit</code> <code>survfit</code>产生的生存对象  </p><p><code>data</code> 一个用于拟合生存曲线的数据集  </p><p><code>fun</code> 定义生存曲线的函数类型。 经常使用的转换可以用字符参数指定：“事件”绘制累积事件（<code>f（y）= 1- y</code>），“cumhaz”绘制累积危险函数（<code>f（y）= -log（y）</code>）， “pct”为生存概率百分比。  </p><p><code>color</code> 绘制生存曲线用的颜色，默认为<code>strata</code>  </p><p><code>palette</code> 绘制颜色所用的色板  </p><p><code>conf.int</code> 是否绘制置信区间，逻辑向量  </p><p><code>pval</code> 是否给出p值逻辑值，数字或字符串。如果逻辑和TRUE，p值将被添加到图上。如果是numeric，则将使用此参数传递的值替换computet的p值。如果是字符，则自定义的字符串会出现在图上。  </p><p><code>surv.median.line</code> 在中位生存时绘制水平/垂直线。允许的值包括c（“none”，“hv”，“h”，“v”）中的一个。  </p><p><code>risk.table</code> 允许的值有：  </p><ul><li><p>是否显示风险表的TRUE或FALSE。 默认值为FALSE。  </p></li><li><p>“absolute” 或者”percentage” 。分别显示绝对数量和风险对象的百分比。  </p></li><li><p>“abs_pct”显示绝对数量和百分比。  </p></li><li><p>“nrisk_cumcensor” 和 “nrisk_cumevents”。分别显示风险数量和审查和事件的累计数量。  </p></li><li><p>tables.height 数值在[0，1]之间，指定主要存活图下所有表的一般高度。  </p></li></ul><p><code>ggtheme</code> 使用的ggplot2主题的名字。  </p><h3 id="图例标题，标签和位置"><a href="#图例标题，标签和位置" class="headerlink" title="图例标题，标签和位置"></a>图例标题，标签和位置</h3><p><code>title</code> 主标题  </p><p><code>xlab</code>,<code> ylab</code> x,y轴标签  </p><p><code>legend</code> 指定图例位置的字符。允许的值是（“top”，“bottom”，“left”，“right”，“none”）之一。也可使 用数字表示  </p><p><code>legend.title</code> 图例的title  </p><p><code>legend.labs</code> 图例的标签  </p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span>(<span class="string">&quot;survival&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## Loading required package: survival</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fit&lt;- survfit(Surv(time, status) ~ sex, data = lung)</span><br><span class="line"><span class="comment"># Drawing survival curves</span></span><br><span class="line">ggsurvplot(fit)</span><br></pre></td></tr></table></figure><p><img src="/images/survminer/unnamed-chunk-3-1.png" alt="plot of chunk unnamed-chunk-3"></p><p>添加risk.table  </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add risk table and change risk table y text colors by strata</span></span><br><span class="line">ggsurvplot(fit, pval = <span class="literal">TRUE</span>, conf.int = <span class="literal">TRUE</span>,</span><br><span class="line">           risk.table = <span class="literal">TRUE</span>, risk.table.y.text.col = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/survminer/unnamed-chunk-4-1.png" alt="plot of chunk unnamed-chunk-4"></p>]]></content>
      
      
      <categories>
          
          <category> R </category>
          
      </categories>
      
      
        <tags>
            
            <tag> survminer </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
